
ClassificationAndControl.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .init         0000000c  00008000  00008000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         00006a84  00008010  00008010  00008010  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fini         0000000c  0000ea94  0000ea94  0000ea94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000518  0000eaa0  0000eaa0  0000eaa0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.exidx    00000008  0000efb8  0000efb8  0000efb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .eh_frame     00000004  0000efc0  0000efc0  0000efc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .init_array   00000004  0001efc4  0001efc4  0000efc4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0001efc8  0001efc8  0000efc8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dd  0001efcc  0001efcc  0000efcc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000070  0001f1ac  0001f1ac  0000f1a9  2**2
                  ALLOC
 10 .comment      0000007b  00000000  00000000  0000f1a9  2**0
                  CONTENTS, READONLY
 11 .debug_aranges 00000658  00000000  00000000  0000f224  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_info   000087a1  00000000  00000000  0000f87c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000016d7  00000000  00000000  0001801d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00005f02  00000000  00000000  000196f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002684  00000000  00000000  0001f5f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    000c30ec  00000000  00000000  00021c7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000005a8  00000000  00000000  000e4d68  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_macro  00020f2b  00000000  00000000  000e5310  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .ARM.attributes 00000030  00000000  00000000  0010623b  2**0
                  CONTENTS, READONLY

Disassembly of section .init:

00008000 <_init>:
    8000:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8002:	bf00      	nop
    8004:	bcf8      	pop	{r3, r4, r5, r6, r7}
    8006:	bc08      	pop	{r3}
    8008:	469e      	mov	lr, r3
    800a:	4770      	bx	lr

Disassembly of section .text:

00008010 <exit>:
    8010:	b508      	push	{r3, lr}
    8012:	4b07      	ldr	r3, [pc, #28]	; (8030 <exit+0x20>)
    8014:	4604      	mov	r4, r0
    8016:	b113      	cbz	r3, 801e <exit+0xe>
    8018:	2100      	movs	r1, #0
    801a:	f3af 8000 	nop.w
    801e:	4b05      	ldr	r3, [pc, #20]	; (8034 <exit+0x24>)
    8020:	6818      	ldr	r0, [r3, #0]
    8022:	6a83      	ldr	r3, [r0, #40]	; 0x28
    8024:	b103      	cbz	r3, 8028 <exit+0x18>
    8026:	4798      	blx	r3
    8028:	4620      	mov	r0, r4
    802a:	f001 f89f 	bl	916c <_exit>
    802e:	bf00      	nop
    8030:	00000000 	.word	0x00000000
    8034:	0000eb78 	.word	0x0000eb78

00008038 <__do_global_dtors_aux>:
    8038:	b510      	push	{r4, lr}
    803a:	4c05      	ldr	r4, [pc, #20]	; (8050 <__do_global_dtors_aux+0x18>)
    803c:	7823      	ldrb	r3, [r4, #0]
    803e:	b933      	cbnz	r3, 804e <__do_global_dtors_aux+0x16>
    8040:	4b04      	ldr	r3, [pc, #16]	; (8054 <__do_global_dtors_aux+0x1c>)
    8042:	b113      	cbz	r3, 804a <__do_global_dtors_aux+0x12>
    8044:	4804      	ldr	r0, [pc, #16]	; (8058 <__do_global_dtors_aux+0x20>)
    8046:	f3af 8000 	nop.w
    804a:	2301      	movs	r3, #1
    804c:	7023      	strb	r3, [r4, #0]
    804e:	bd10      	pop	{r4, pc}
    8050:	0001f1ac 	.word	0x0001f1ac
    8054:	00000000 	.word	0x00000000
    8058:	0000efc0 	.word	0x0000efc0

0000805c <frame_dummy>:
    805c:	b508      	push	{r3, lr}
    805e:	4b03      	ldr	r3, [pc, #12]	; (806c <frame_dummy+0x10>)
    8060:	b11b      	cbz	r3, 806a <frame_dummy+0xe>
    8062:	4903      	ldr	r1, [pc, #12]	; (8070 <frame_dummy+0x14>)
    8064:	4803      	ldr	r0, [pc, #12]	; (8074 <frame_dummy+0x18>)
    8066:	f3af 8000 	nop.w
    806a:	bd08      	pop	{r3, pc}
    806c:	00000000 	.word	0x00000000
    8070:	0001f1b0 	.word	0x0001f1b0
    8074:	0000efc0 	.word	0x0000efc0

00008078 <_mainCRTStartup>:
    8078:	4b15      	ldr	r3, [pc, #84]	; (80d0 <_mainCRTStartup+0x58>)
    807a:	2b00      	cmp	r3, #0
    807c:	bf08      	it	eq
    807e:	4b13      	ldreq	r3, [pc, #76]	; (80cc <_mainCRTStartup+0x54>)
    8080:	469d      	mov	sp, r3
    8082:	f5a3 3a80 	sub.w	sl, r3, #65536	; 0x10000
    8086:	2100      	movs	r1, #0
    8088:	468b      	mov	fp, r1
    808a:	460f      	mov	r7, r1
    808c:	4813      	ldr	r0, [pc, #76]	; (80dc <_mainCRTStartup+0x64>)
    808e:	4a14      	ldr	r2, [pc, #80]	; (80e0 <_mainCRTStartup+0x68>)
    8090:	1a12      	subs	r2, r2, r0
    8092:	f002 fce9 	bl	aa68 <memset>
    8096:	4b0f      	ldr	r3, [pc, #60]	; (80d4 <_mainCRTStartup+0x5c>)
    8098:	2b00      	cmp	r3, #0
    809a:	d000      	beq.n	809e <_mainCRTStartup+0x26>
    809c:	4798      	blx	r3
    809e:	4b0e      	ldr	r3, [pc, #56]	; (80d8 <_mainCRTStartup+0x60>)
    80a0:	2b00      	cmp	r3, #0
    80a2:	d000      	beq.n	80a6 <_mainCRTStartup+0x2e>
    80a4:	4798      	blx	r3
    80a6:	2000      	movs	r0, #0
    80a8:	2100      	movs	r1, #0
    80aa:	0004      	movs	r4, r0
    80ac:	000d      	movs	r5, r1
    80ae:	480d      	ldr	r0, [pc, #52]	; (80e4 <_mainCRTStartup+0x6c>)
    80b0:	2800      	cmp	r0, #0
    80b2:	d002      	beq.n	80ba <_mainCRTStartup+0x42>
    80b4:	480c      	ldr	r0, [pc, #48]	; (80e8 <_mainCRTStartup+0x70>)
    80b6:	f3af 8000 	nop.w
    80ba:	f002 fca1 	bl	aa00 <__libc_init_array>
    80be:	0020      	movs	r0, r4
    80c0:	0029      	movs	r1, r5
    80c2:	f000 fc79 	bl	89b8 <main>
    80c6:	f7ff ffa3 	bl	8010 <exit>
    80ca:	bf00      	nop
    80cc:	00080000 	.word	0x00080000
	...
    80dc:	0001f1a9 	.word	0x0001f1a9
    80e0:	0001f21c 	.word	0x0001f21c
	...

000080ec <bit_reverse>:
	return j;
}



static int bit_reverse(int N, int l) {
    80ec:	b480      	push	{r7}
    80ee:	b085      	sub	sp, #20
    80f0:	af00      	add	r7, sp, #0
    80f2:	6078      	str	r0, [r7, #4]
    80f4:	6039      	str	r1, [r7, #0]
	int ans = 0, i, p;
    80f6:	2300      	movs	r3, #0
    80f8:	60fb      	str	r3, [r7, #12]
	for (i = 0; i<l; ++i)
    80fa:	2300      	movs	r3, #0
    80fc:	60bb      	str	r3, [r7, #8]
    80fe:	e014      	b.n	812a <bit_reverse+0x3e>
		if (N & (1 << i))    ans |= (1 << l - 1 - i);
    8100:	687a      	ldr	r2, [r7, #4]
    8102:	68bb      	ldr	r3, [r7, #8]
    8104:	fa42 f303 	asr.w	r3, r2, r3
    8108:	f003 0301 	and.w	r3, r3, #1
    810c:	2b00      	cmp	r3, #0
    810e:	d009      	beq.n	8124 <bit_reverse+0x38>
    8110:	683b      	ldr	r3, [r7, #0]
    8112:	1e5a      	subs	r2, r3, #1
    8114:	68bb      	ldr	r3, [r7, #8]
    8116:	1ad3      	subs	r3, r2, r3
    8118:	2201      	movs	r2, #1
    811a:	fa02 f303 	lsl.w	r3, r2, r3
    811e:	68fa      	ldr	r2, [r7, #12]
    8120:	4313      	orrs	r3, r2
    8122:	60fb      	str	r3, [r7, #12]
	for (i = 0; i<l; ++i)
    8124:	68bb      	ldr	r3, [r7, #8]
    8126:	3301      	adds	r3, #1
    8128:	60bb      	str	r3, [r7, #8]
    812a:	68ba      	ldr	r2, [r7, #8]
    812c:	683b      	ldr	r3, [r7, #0]
    812e:	429a      	cmp	r2, r3
    8130:	dbe6      	blt.n	8100 <bit_reverse+0x14>
	return(ans);
    8132:	68fb      	ldr	r3, [r7, #12]
}
    8134:	4618      	mov	r0, r3
    8136:	3714      	adds	r7, #20
    8138:	46bd      	mov	sp, r7
    813a:	f85d 7b04 	ldr.w	r7, [sp], #4
    813e:	4770      	bx	lr

00008140 <FFTcore>:


void FFTcore(int Nr, int Nc, double* Ar, int Ldr, double* Ai, int Ldi, char tran, char flag) {
    8140:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
    8144:	b0a8      	sub	sp, #160	; 0xa0
    8146:	af00      	add	r7, sp, #0
    8148:	60f8      	str	r0, [r7, #12]
    814a:	60b9      	str	r1, [r7, #8]
    814c:	607a      	str	r2, [r7, #4]
    814e:	603b      	str	r3, [r7, #0]

	int N, M, d, K = 0, k = 0, l = 1, L = 0;
    8150:	2300      	movs	r3, #0
    8152:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
    8156:	2300      	movs	r3, #0
    8158:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
    815c:	2301      	movs	r3, #1
    815e:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
    8162:	2300      	movs	r3, #0
    8164:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
	double Wr, Wi, C1r, C1i, C2r, C2i, Dr, Di;

	if (tran == 't') {
    8168:	f897 30c0 	ldrb.w	r3, [r7, #192]	; 0xc0
    816c:	2b74      	cmp	r3, #116	; 0x74
    816e:	d10a      	bne.n	8186 <FFTcore+0x46>
		d = N = Nc;
    8170:	68bb      	ldr	r3, [r7, #8]
    8172:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    8176:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
    817a:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
		M = Nr;
    817e:	68fb      	ldr	r3, [r7, #12]
    8180:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
    8184:	e011      	b.n	81aa <FFTcore+0x6a>
	}
	else if (tran == 'n') {
    8186:	f897 30c0 	ldrb.w	r3, [r7, #192]	; 0xc0
    818a:	2b6e      	cmp	r3, #110	; 0x6e
    818c:	d10a      	bne.n	81a4 <FFTcore+0x64>
		d = N = Nr;
    818e:	68fb      	ldr	r3, [r7, #12]
    8190:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    8194:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
    8198:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
		M = Nc;
    819c:	68bb      	ldr	r3, [r7, #8]
    819e:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
    81a2:	e002      	b.n	81aa <FFTcore+0x6a>
	}
	else {
		//("tran can be either 'n' or 't'\n");
		exit(1);
    81a4:	2001      	movs	r0, #1
    81a6:	f7ff ff33 	bl	8010 <exit>
	}

	do
	{
		d /= 2;
    81aa:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
    81ae:	0fda      	lsrs	r2, r3, #31
    81b0:	4413      	add	r3, r2
    81b2:	105b      	asrs	r3, r3, #1
    81b4:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
		K = 0;
    81b8:	2300      	movs	r3, #0
    81ba:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
		while (K<N) {
    81be:	e1cc      	b.n	855a <FFTcore+0x41a>
			k = 0;
    81c0:	2300      	movs	r3, #0
    81c2:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
			while (k<d) {
    81c6:	e1b9      	b.n	853c <FFTcore+0x3fc>
				int it, Ind1 = K + k, Ind2 = K + k + d;
    81c8:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
    81cc:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
    81d0:	4413      	add	r3, r2
    81d2:	667b      	str	r3, [r7, #100]	; 0x64
    81d4:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
    81d8:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
    81dc:	4413      	add	r3, r2
    81de:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
    81e2:	4413      	add	r3, r2
    81e4:	663b      	str	r3, [r7, #96]	; 0x60
				Wr = cos(2 * M_PI*k*l / N);
    81e6:	f8d7 008c 	ldr.w	r0, [r7, #140]	; 0x8c
    81ea:	f005 ff91 	bl	e110 <__aeabi_i2d>
    81ee:	f20f 5318 	addw	r3, pc, #1304	; 0x518
    81f2:	e9d3 2300 	ldrd	r2, r3, [r3]
    81f6:	f005 fff5 	bl	e1e4 <__aeabi_dmul>
    81fa:	4602      	mov	r2, r0
    81fc:	460b      	mov	r3, r1
    81fe:	4690      	mov	r8, r2
    8200:	4699      	mov	r9, r3
    8202:	f8d7 0088 	ldr.w	r0, [r7, #136]	; 0x88
    8206:	f005 ff83 	bl	e110 <__aeabi_i2d>
    820a:	4602      	mov	r2, r0
    820c:	460b      	mov	r3, r1
    820e:	4640      	mov	r0, r8
    8210:	4649      	mov	r1, r9
    8212:	f005 ffe7 	bl	e1e4 <__aeabi_dmul>
    8216:	4602      	mov	r2, r0
    8218:	460b      	mov	r3, r1
    821a:	4690      	mov	r8, r2
    821c:	4699      	mov	r9, r3
    821e:	f8d7 009c 	ldr.w	r0, [r7, #156]	; 0x9c
    8222:	f005 ff75 	bl	e110 <__aeabi_i2d>
    8226:	4602      	mov	r2, r0
    8228:	460b      	mov	r3, r1
    822a:	4640      	mov	r0, r8
    822c:	4649      	mov	r1, r9
    822e:	f006 f903 	bl	e438 <__aeabi_ddiv>
    8232:	4602      	mov	r2, r0
    8234:	460b      	mov	r3, r1
    8236:	ec43 2b17 	vmov	d7, r2, r3
    823a:	eeb0 0a47 	vmov.f32	s0, s14
    823e:	eef0 0a67 	vmov.f32	s1, s15
    8242:	f004 fcad 	bl	cba0 <cos>
    8246:	ed87 0b16 	vstr	d0, [r7, #88]	; 0x58
				Wi = (flag == 'f') ? -sin(2 * M_PI*k*l / N) : sin(2 * M_PI*k*l / N);
    824a:	f897 30c4 	ldrb.w	r3, [r7, #196]	; 0xc4
    824e:	2b66      	cmp	r3, #102	; 0x66
    8250:	d135      	bne.n	82be <FFTcore+0x17e>
    8252:	f8d7 008c 	ldr.w	r0, [r7, #140]	; 0x8c
    8256:	f005 ff5b 	bl	e110 <__aeabi_i2d>
    825a:	f20f 43ac 	addw	r3, pc, #1196	; 0x4ac
    825e:	e9d3 2300 	ldrd	r2, r3, [r3]
    8262:	f005 ffbf 	bl	e1e4 <__aeabi_dmul>
    8266:	4602      	mov	r2, r0
    8268:	460b      	mov	r3, r1
    826a:	4690      	mov	r8, r2
    826c:	4699      	mov	r9, r3
    826e:	f8d7 0088 	ldr.w	r0, [r7, #136]	; 0x88
    8272:	f005 ff4d 	bl	e110 <__aeabi_i2d>
    8276:	4602      	mov	r2, r0
    8278:	460b      	mov	r3, r1
    827a:	4640      	mov	r0, r8
    827c:	4649      	mov	r1, r9
    827e:	f005 ffb1 	bl	e1e4 <__aeabi_dmul>
    8282:	4602      	mov	r2, r0
    8284:	460b      	mov	r3, r1
    8286:	4690      	mov	r8, r2
    8288:	4699      	mov	r9, r3
    828a:	f8d7 009c 	ldr.w	r0, [r7, #156]	; 0x9c
    828e:	f005 ff3f 	bl	e110 <__aeabi_i2d>
    8292:	4602      	mov	r2, r0
    8294:	460b      	mov	r3, r1
    8296:	4640      	mov	r0, r8
    8298:	4649      	mov	r1, r9
    829a:	f006 f8cd 	bl	e438 <__aeabi_ddiv>
    829e:	4602      	mov	r2, r0
    82a0:	460b      	mov	r3, r1
    82a2:	ec43 2b17 	vmov	d7, r2, r3
    82a6:	eeb0 0a47 	vmov.f32	s0, s14
    82aa:	eef0 0a67 	vmov.f32	s1, s15
    82ae:	f004 fcbb 	bl	cc28 <sin>
    82b2:	ec53 2b10 	vmov	r2, r3, d0
    82b6:	4614      	mov	r4, r2
    82b8:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
    82bc:	e031      	b.n	8322 <FFTcore+0x1e2>
    82be:	f8d7 008c 	ldr.w	r0, [r7, #140]	; 0x8c
    82c2:	f005 ff25 	bl	e110 <__aeabi_i2d>
    82c6:	f20f 4340 	addw	r3, pc, #1088	; 0x440
    82ca:	e9d3 2300 	ldrd	r2, r3, [r3]
    82ce:	f005 ff89 	bl	e1e4 <__aeabi_dmul>
    82d2:	4603      	mov	r3, r0
    82d4:	460c      	mov	r4, r1
    82d6:	4625      	mov	r5, r4
    82d8:	461c      	mov	r4, r3
    82da:	f8d7 0088 	ldr.w	r0, [r7, #136]	; 0x88
    82de:	f005 ff17 	bl	e110 <__aeabi_i2d>
    82e2:	4602      	mov	r2, r0
    82e4:	460b      	mov	r3, r1
    82e6:	4620      	mov	r0, r4
    82e8:	4629      	mov	r1, r5
    82ea:	f005 ff7b 	bl	e1e4 <__aeabi_dmul>
    82ee:	4603      	mov	r3, r0
    82f0:	460c      	mov	r4, r1
    82f2:	4625      	mov	r5, r4
    82f4:	461c      	mov	r4, r3
    82f6:	f8d7 009c 	ldr.w	r0, [r7, #156]	; 0x9c
    82fa:	f005 ff09 	bl	e110 <__aeabi_i2d>
    82fe:	4602      	mov	r2, r0
    8300:	460b      	mov	r3, r1
    8302:	4620      	mov	r0, r4
    8304:	4629      	mov	r1, r5
    8306:	f006 f897 	bl	e438 <__aeabi_ddiv>
    830a:	4603      	mov	r3, r0
    830c:	460c      	mov	r4, r1
    830e:	ec44 3b17 	vmov	d7, r3, r4
    8312:	eeb0 0a47 	vmov.f32	s0, s14
    8316:	eef0 0a67 	vmov.f32	s1, s15
    831a:	f004 fc85 	bl	cc28 <sin>
    831e:	ec55 4b10 	vmov	r4, r5, d0
    8322:	e9c7 4514 	strd	r4, r5, [r7, #80]	; 0x50

				for (it = 0; it<M; ++it) {
    8326:	2300      	movs	r3, #0
    8328:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
    832c:	e0fa      	b.n	8524 <FFTcore+0x3e4>
					int rind1 = (tran == 't') ? Ind1 * Ldr + it : Ind1 + Ldr * it;
    832e:	f897 30c0 	ldrb.w	r3, [r7, #192]	; 0xc0
    8332:	2b74      	cmp	r3, #116	; 0x74
    8334:	d107      	bne.n	8346 <FFTcore+0x206>
    8336:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    8338:	683a      	ldr	r2, [r7, #0]
    833a:	fb02 f203 	mul.w	r2, r2, r3
    833e:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
    8342:	4413      	add	r3, r2
    8344:	e006      	b.n	8354 <FFTcore+0x214>
    8346:	683b      	ldr	r3, [r7, #0]
    8348:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
    834c:	fb02 f203 	mul.w	r2, r2, r3
    8350:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    8352:	4413      	add	r3, r2
    8354:	64fb      	str	r3, [r7, #76]	; 0x4c
					int iind1 = (tran == 't') ? Ind1 * Ldi + it : Ind1 + Ldi * it;
    8356:	f897 30c0 	ldrb.w	r3, [r7, #192]	; 0xc0
    835a:	2b74      	cmp	r3, #116	; 0x74
    835c:	d108      	bne.n	8370 <FFTcore+0x230>
    835e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    8360:	f8d7 20bc 	ldr.w	r2, [r7, #188]	; 0xbc
    8364:	fb02 f203 	mul.w	r2, r2, r3
    8368:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
    836c:	4413      	add	r3, r2
    836e:	e007      	b.n	8380 <FFTcore+0x240>
    8370:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
    8374:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
    8378:	fb02 f203 	mul.w	r2, r2, r3
    837c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    837e:	4413      	add	r3, r2
    8380:	64bb      	str	r3, [r7, #72]	; 0x48
					int rind2 = (tran == 't') ? Ind2 * Ldr + it : Ind2 + Ldr * it;
    8382:	f897 30c0 	ldrb.w	r3, [r7, #192]	; 0xc0
    8386:	2b74      	cmp	r3, #116	; 0x74
    8388:	d107      	bne.n	839a <FFTcore+0x25a>
    838a:	6e3b      	ldr	r3, [r7, #96]	; 0x60
    838c:	683a      	ldr	r2, [r7, #0]
    838e:	fb02 f203 	mul.w	r2, r2, r3
    8392:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
    8396:	4413      	add	r3, r2
    8398:	e006      	b.n	83a8 <FFTcore+0x268>
    839a:	683b      	ldr	r3, [r7, #0]
    839c:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
    83a0:	fb02 f203 	mul.w	r2, r2, r3
    83a4:	6e3b      	ldr	r3, [r7, #96]	; 0x60
    83a6:	4413      	add	r3, r2
    83a8:	647b      	str	r3, [r7, #68]	; 0x44
					int iind2 = (tran == 't') ? Ind2 * Ldi + it : Ind2 + Ldi * it;
    83aa:	f897 30c0 	ldrb.w	r3, [r7, #192]	; 0xc0
    83ae:	2b74      	cmp	r3, #116	; 0x74
    83b0:	d108      	bne.n	83c4 <FFTcore+0x284>
    83b2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
    83b4:	f8d7 20bc 	ldr.w	r2, [r7, #188]	; 0xbc
    83b8:	fb02 f203 	mul.w	r2, r2, r3
    83bc:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
    83c0:	4413      	add	r3, r2
    83c2:	e007      	b.n	83d4 <FFTcore+0x294>
    83c4:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
    83c8:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
    83cc:	fb02 f203 	mul.w	r2, r2, r3
    83d0:	6e3b      	ldr	r3, [r7, #96]	; 0x60
    83d2:	4413      	add	r3, r2
    83d4:	643b      	str	r3, [r7, #64]	; 0x40

					C1r = Ar[rind1] + Ar[rind2];
    83d6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    83d8:	00db      	lsls	r3, r3, #3
    83da:	687a      	ldr	r2, [r7, #4]
    83dc:	4413      	add	r3, r2
    83de:	e9d3 0100 	ldrd	r0, r1, [r3]
    83e2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    83e4:	00db      	lsls	r3, r3, #3
    83e6:	687a      	ldr	r2, [r7, #4]
    83e8:	4413      	add	r3, r2
    83ea:	e9d3 2300 	ldrd	r2, r3, [r3]
    83ee:	f005 fd43 	bl	de78 <__adddf3>
    83f2:	4602      	mov	r2, r0
    83f4:	460b      	mov	r3, r1
    83f6:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
					C1i = Ai[iind1] + Ai[iind2];
    83fa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    83fc:	00db      	lsls	r3, r3, #3
    83fe:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
    8402:	4413      	add	r3, r2
    8404:	e9d3 0100 	ldrd	r0, r1, [r3]
    8408:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    840a:	00db      	lsls	r3, r3, #3
    840c:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
    8410:	4413      	add	r3, r2
    8412:	e9d3 2300 	ldrd	r2, r3, [r3]
    8416:	f005 fd2f 	bl	de78 <__adddf3>
    841a:	4602      	mov	r2, r0
    841c:	460b      	mov	r3, r1
    841e:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
					Dr = Ar[rind1] - Ar[rind2];
    8422:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    8424:	00db      	lsls	r3, r3, #3
    8426:	687a      	ldr	r2, [r7, #4]
    8428:	4413      	add	r3, r2
    842a:	e9d3 0100 	ldrd	r0, r1, [r3]
    842e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    8430:	00db      	lsls	r3, r3, #3
    8432:	687a      	ldr	r2, [r7, #4]
    8434:	4413      	add	r3, r2
    8436:	e9d3 2300 	ldrd	r2, r3, [r3]
    843a:	f005 fd1b 	bl	de74 <__aeabi_dsub>
    843e:	4602      	mov	r2, r0
    8440:	460b      	mov	r3, r1
    8442:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
					Di = Ai[iind1] - Ai[iind2];
    8446:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    8448:	00db      	lsls	r3, r3, #3
    844a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
    844e:	4413      	add	r3, r2
    8450:	e9d3 0100 	ldrd	r0, r1, [r3]
    8454:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    8456:	00db      	lsls	r3, r3, #3
    8458:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
    845c:	4413      	add	r3, r2
    845e:	e9d3 2300 	ldrd	r2, r3, [r3]
    8462:	f005 fd07 	bl	de74 <__aeabi_dsub>
    8466:	4602      	mov	r2, r0
    8468:	460b      	mov	r3, r1
    846a:	e9c7 2308 	strd	r2, r3, [r7, #32]
					C2r = Dr * Wr - Di * Wi;
    846e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
    8472:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
    8476:	f005 feb5 	bl	e1e4 <__aeabi_dmul>
    847a:	4602      	mov	r2, r0
    847c:	460b      	mov	r3, r1
    847e:	4690      	mov	r8, r2
    8480:	4699      	mov	r9, r3
    8482:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
    8486:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
    848a:	f005 feab 	bl	e1e4 <__aeabi_dmul>
    848e:	4602      	mov	r2, r0
    8490:	460b      	mov	r3, r1
    8492:	4640      	mov	r0, r8
    8494:	4649      	mov	r1, r9
    8496:	f005 fced 	bl	de74 <__aeabi_dsub>
    849a:	4602      	mov	r2, r0
    849c:	460b      	mov	r3, r1
    849e:	e9c7 2306 	strd	r2, r3, [r7, #24]
					C2i = Dr * Wi + Di * Wr;
    84a2:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
    84a6:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
    84aa:	f005 fe9b 	bl	e1e4 <__aeabi_dmul>
    84ae:	4602      	mov	r2, r0
    84b0:	460b      	mov	r3, r1
    84b2:	4690      	mov	r8, r2
    84b4:	4699      	mov	r9, r3
    84b6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
    84ba:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
    84be:	f005 fe91 	bl	e1e4 <__aeabi_dmul>
    84c2:	4602      	mov	r2, r0
    84c4:	460b      	mov	r3, r1
    84c6:	4640      	mov	r0, r8
    84c8:	4649      	mov	r1, r9
    84ca:	f005 fcd5 	bl	de78 <__adddf3>
    84ce:	4602      	mov	r2, r0
    84d0:	460b      	mov	r3, r1
    84d2:	e9c7 2304 	strd	r2, r3, [r7, #16]
					Ar[rind1] = C1r;
    84d6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    84d8:	00db      	lsls	r3, r3, #3
    84da:	687a      	ldr	r2, [r7, #4]
    84dc:	18d1      	adds	r1, r2, r3
    84de:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
    84e2:	e9c1 2300 	strd	r2, r3, [r1]
					Ai[iind1] = C1i;
    84e6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    84e8:	00db      	lsls	r3, r3, #3
    84ea:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
    84ee:	18d1      	adds	r1, r2, r3
    84f0:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
    84f4:	e9c1 2300 	strd	r2, r3, [r1]
					Ar[rind2] = C2r;
    84f8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    84fa:	00db      	lsls	r3, r3, #3
    84fc:	687a      	ldr	r2, [r7, #4]
    84fe:	18d1      	adds	r1, r2, r3
    8500:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
    8504:	e9c1 2300 	strd	r2, r3, [r1]
					Ai[iind2] = C2i;
    8508:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    850a:	00db      	lsls	r3, r3, #3
    850c:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
    8510:	18d1      	adds	r1, r2, r3
    8512:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
    8516:	e9c1 2300 	strd	r2, r3, [r1]
				for (it = 0; it<M; ++it) {
    851a:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
    851e:	3301      	adds	r3, #1
    8520:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
    8524:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
    8528:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
    852c:	429a      	cmp	r2, r3
    852e:	f6ff aefe 	blt.w	832e <FFTcore+0x1ee>
				}
				++k;
    8532:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
    8536:	3301      	adds	r3, #1
    8538:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
			while (k<d) {
    853c:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
    8540:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
    8544:	429a      	cmp	r2, r3
    8546:	f6ff ae3f 	blt.w	81c8 <FFTcore+0x88>
			}
			K += 2 * d;
    854a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
    854e:	005b      	lsls	r3, r3, #1
    8550:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
    8554:	4413      	add	r3, r2
    8556:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
		while (K<N) {
    855a:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
    855e:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
    8562:	429a      	cmp	r2, r3
    8564:	f6ff ae2c 	blt.w	81c0 <FFTcore+0x80>
		}
		l *= 2;
    8568:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
    856c:	005b      	lsls	r3, r3, #1
    856e:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
		++L;
    8572:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
    8576:	3301      	adds	r3, #1
    8578:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
	} while (d>1);
    857c:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
    8580:	2b01      	cmp	r3, #1
    8582:	f73f ae12 	bgt.w	81aa <FFTcore+0x6a>

	for (d = 0; d<N; ++d) {
    8586:	2300      	movs	r3, #0
    8588:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
    858c:	e0af      	b.n	86ee <FFTcore+0x5ae>
		k = bit_reverse(d, L);
    858e:	f8d7 1084 	ldr.w	r1, [r7, #132]	; 0x84
    8592:	f8d7 0094 	ldr.w	r0, [r7, #148]	; 0x94
    8596:	f7ff fda9 	bl	80ec <bit_reverse>
    859a:	f8c7 008c 	str.w	r0, [r7, #140]	; 0x8c
		if (d < k) {
    859e:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
    85a2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
    85a6:	429a      	cmp	r2, r3
    85a8:	f280 809c 	bge.w	86e4 <FFTcore+0x5a4>
			int it;
			for (it = 0; it<M; ++it) {
    85ac:	2300      	movs	r3, #0
    85ae:	67fb      	str	r3, [r7, #124]	; 0x7c
    85b0:	e092      	b.n	86d8 <FFTcore+0x598>
				int ind1 = (tran == 't') ? d * Ldr + it : d + Ldr * it;
    85b2:	f897 30c0 	ldrb.w	r3, [r7, #192]	; 0xc0
    85b6:	2b74      	cmp	r3, #116	; 0x74
    85b8:	d107      	bne.n	85ca <FFTcore+0x48a>
    85ba:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
    85be:	683a      	ldr	r2, [r7, #0]
    85c0:	fb02 f203 	mul.w	r2, r2, r3
    85c4:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    85c6:	4413      	add	r3, r2
    85c8:	e006      	b.n	85d8 <FFTcore+0x498>
    85ca:	683b      	ldr	r3, [r7, #0]
    85cc:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
    85ce:	fb02 f203 	mul.w	r2, r2, r3
    85d2:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
    85d6:	4413      	add	r3, r2
    85d8:	67bb      	str	r3, [r7, #120]	; 0x78
				int ind2 = (tran == 't') ? k * Ldr + it : k + Ldr * it;
    85da:	f897 30c0 	ldrb.w	r3, [r7, #192]	; 0xc0
    85de:	2b74      	cmp	r3, #116	; 0x74
    85e0:	d107      	bne.n	85f2 <FFTcore+0x4b2>
    85e2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
    85e6:	683a      	ldr	r2, [r7, #0]
    85e8:	fb02 f203 	mul.w	r2, r2, r3
    85ec:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    85ee:	4413      	add	r3, r2
    85f0:	e006      	b.n	8600 <FFTcore+0x4c0>
    85f2:	683b      	ldr	r3, [r7, #0]
    85f4:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
    85f6:	fb02 f203 	mul.w	r2, r2, r3
    85fa:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
    85fe:	4413      	add	r3, r2
    8600:	677b      	str	r3, [r7, #116]	; 0x74
				double temp = Ar[ind1];
    8602:	6fbb      	ldr	r3, [r7, #120]	; 0x78
    8604:	00db      	lsls	r3, r3, #3
    8606:	687a      	ldr	r2, [r7, #4]
    8608:	4413      	add	r3, r2
    860a:	e9d3 3400 	ldrd	r3, r4, [r3]
    860e:	e9c7 341a 	strd	r3, r4, [r7, #104]	; 0x68
				Ar[ind1] = Ar[ind2];
    8612:	6f7b      	ldr	r3, [r7, #116]	; 0x74
    8614:	00db      	lsls	r3, r3, #3
    8616:	687a      	ldr	r2, [r7, #4]
    8618:	4413      	add	r3, r2
    861a:	6fba      	ldr	r2, [r7, #120]	; 0x78
    861c:	00d2      	lsls	r2, r2, #3
    861e:	6879      	ldr	r1, [r7, #4]
    8620:	440a      	add	r2, r1
    8622:	e9d3 3400 	ldrd	r3, r4, [r3]
    8626:	e9c2 3400 	strd	r3, r4, [r2]
				Ar[ind2] = temp;
    862a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
    862c:	00db      	lsls	r3, r3, #3
    862e:	687a      	ldr	r2, [r7, #4]
    8630:	441a      	add	r2, r3
    8632:	e9d7 341a 	ldrd	r3, r4, [r7, #104]	; 0x68
    8636:	e9c2 3400 	strd	r3, r4, [r2]

				ind1 = (tran == 't') ? d * Ldi + it : d + Ldi * it;
    863a:	f897 30c0 	ldrb.w	r3, [r7, #192]	; 0xc0
    863e:	2b74      	cmp	r3, #116	; 0x74
    8640:	d108      	bne.n	8654 <FFTcore+0x514>
    8642:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
    8646:	f8d7 20bc 	ldr.w	r2, [r7, #188]	; 0xbc
    864a:	fb02 f203 	mul.w	r2, r2, r3
    864e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8650:	4413      	add	r3, r2
    8652:	e007      	b.n	8664 <FFTcore+0x524>
    8654:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
    8658:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
    865a:	fb02 f203 	mul.w	r2, r2, r3
    865e:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
    8662:	4413      	add	r3, r2
    8664:	67bb      	str	r3, [r7, #120]	; 0x78
				ind2 = (tran == 't') ? k * Ldi + it : k + Ldi * it;
    8666:	f897 30c0 	ldrb.w	r3, [r7, #192]	; 0xc0
    866a:	2b74      	cmp	r3, #116	; 0x74
    866c:	d108      	bne.n	8680 <FFTcore+0x540>
    866e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
    8672:	f8d7 20bc 	ldr.w	r2, [r7, #188]	; 0xbc
    8676:	fb02 f203 	mul.w	r2, r2, r3
    867a:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    867c:	4413      	add	r3, r2
    867e:	e007      	b.n	8690 <FFTcore+0x550>
    8680:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
    8684:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
    8686:	fb02 f203 	mul.w	r2, r2, r3
    868a:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
    868e:	4413      	add	r3, r2
    8690:	677b      	str	r3, [r7, #116]	; 0x74
				temp = Ai[ind1];
    8692:	6fbb      	ldr	r3, [r7, #120]	; 0x78
    8694:	00db      	lsls	r3, r3, #3
    8696:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
    869a:	4413      	add	r3, r2
    869c:	e9d3 3400 	ldrd	r3, r4, [r3]
    86a0:	e9c7 341a 	strd	r3, r4, [r7, #104]	; 0x68
				Ai[ind1] = Ai[ind2];
    86a4:	6f7b      	ldr	r3, [r7, #116]	; 0x74
    86a6:	00db      	lsls	r3, r3, #3
    86a8:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
    86ac:	4413      	add	r3, r2
    86ae:	6fba      	ldr	r2, [r7, #120]	; 0x78
    86b0:	00d2      	lsls	r2, r2, #3
    86b2:	f8d7 10b8 	ldr.w	r1, [r7, #184]	; 0xb8
    86b6:	440a      	add	r2, r1
    86b8:	e9d3 3400 	ldrd	r3, r4, [r3]
    86bc:	e9c2 3400 	strd	r3, r4, [r2]
				Ai[ind2] = temp;
    86c0:	6f7b      	ldr	r3, [r7, #116]	; 0x74
    86c2:	00db      	lsls	r3, r3, #3
    86c4:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
    86c8:	441a      	add	r2, r3
    86ca:	e9d7 341a 	ldrd	r3, r4, [r7, #104]	; 0x68
    86ce:	e9c2 3400 	strd	r3, r4, [r2]
			for (it = 0; it<M; ++it) {
    86d2:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    86d4:	3301      	adds	r3, #1
    86d6:	67fb      	str	r3, [r7, #124]	; 0x7c
    86d8:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
    86da:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
    86de:	429a      	cmp	r2, r3
    86e0:	f6ff af67 	blt.w	85b2 <FFTcore+0x472>
	for (d = 0; d<N; ++d) {
    86e4:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
    86e8:	3301      	adds	r3, #1
    86ea:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
    86ee:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
    86f2:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
    86f6:	429a      	cmp	r2, r3
    86f8:	f6ff af49 	blt.w	858e <FFTcore+0x44e>
			}
		}
	}
}
    86fc:	bf00      	nop
    86fe:	37a0      	adds	r7, #160	; 0xa0
    8700:	46bd      	mov	sp, r7
    8702:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
    8706:	bf00      	nop
    8708:	54442d18 	.word	0x54442d18
    870c:	401921fb 	.word	0x401921fb

00008710 <DCT2>:

void DCT2(int N, double* x) {
    8710:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
    8714:	b092      	sub	sp, #72	; 0x48
    8716:	af04      	add	r7, sp, #16
    8718:	6078      	str	r0, [r7, #4]
    871a:	6039      	str	r1, [r7, #0]
	double* Ar = (double*)malloc(4 * N * sizeof(double));
    871c:	687b      	ldr	r3, [r7, #4]
    871e:	015b      	lsls	r3, r3, #5
    8720:	4618      	mov	r0, r3
    8722:	f002 f991 	bl	aa48 <malloc>
    8726:	4603      	mov	r3, r0
    8728:	633b      	str	r3, [r7, #48]	; 0x30
	//assert(Ar != NULL);
	double* Ai = Ar + 2 * N;
    872a:	687b      	ldr	r3, [r7, #4]
    872c:	011b      	lsls	r3, r3, #4
    872e:	461a      	mov	r2, r3
    8730:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    8732:	4413      	add	r3, r2
    8734:	62fb      	str	r3, [r7, #44]	; 0x2c
	memset(Ar, 0, 4 * N * sizeof(double));
    8736:	687b      	ldr	r3, [r7, #4]
    8738:	015b      	lsls	r3, r3, #5
    873a:	461a      	mov	r2, r3
    873c:	2100      	movs	r1, #0
    873e:	6b38      	ldr	r0, [r7, #48]	; 0x30
    8740:	f002 f992 	bl	aa68 <memset>
	int n;
	for (n = 0; n<N; ++n) Ar[n] = x[n];
    8744:	2300      	movs	r3, #0
    8746:	637b      	str	r3, [r7, #52]	; 0x34
    8748:	e00e      	b.n	8768 <DCT2+0x58>
    874a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    874c:	00db      	lsls	r3, r3, #3
    874e:	683a      	ldr	r2, [r7, #0]
    8750:	4413      	add	r3, r2
    8752:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    8754:	00d2      	lsls	r2, r2, #3
    8756:	6b39      	ldr	r1, [r7, #48]	; 0x30
    8758:	440a      	add	r2, r1
    875a:	e9d3 3400 	ldrd	r3, r4, [r3]
    875e:	e9c2 3400 	strd	r3, r4, [r2]
    8762:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    8764:	3301      	adds	r3, #1
    8766:	637b      	str	r3, [r7, #52]	; 0x34
    8768:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    876a:	687b      	ldr	r3, [r7, #4]
    876c:	429a      	cmp	r2, r3
    876e:	dbec      	blt.n	874a <DCT2+0x3a>
	for (n = N; n<2 * N; ++n) Ar[n] = x[2 * N - 1 - n];
    8770:	687b      	ldr	r3, [r7, #4]
    8772:	637b      	str	r3, [r7, #52]	; 0x34
    8774:	e012      	b.n	879c <DCT2+0x8c>
    8776:	687b      	ldr	r3, [r7, #4]
    8778:	005b      	lsls	r3, r3, #1
    877a:	1e5a      	subs	r2, r3, #1
    877c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    877e:	1ad3      	subs	r3, r2, r3
    8780:	00db      	lsls	r3, r3, #3
    8782:	683a      	ldr	r2, [r7, #0]
    8784:	4413      	add	r3, r2
    8786:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    8788:	00d2      	lsls	r2, r2, #3
    878a:	6b39      	ldr	r1, [r7, #48]	; 0x30
    878c:	440a      	add	r2, r1
    878e:	e9d3 3400 	ldrd	r3, r4, [r3]
    8792:	e9c2 3400 	strd	r3, r4, [r2]
    8796:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    8798:	3301      	adds	r3, #1
    879a:	637b      	str	r3, [r7, #52]	; 0x34
    879c:	687b      	ldr	r3, [r7, #4]
    879e:	005b      	lsls	r3, r3, #1
    87a0:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    87a2:	429a      	cmp	r2, r3
    87a4:	dbe7      	blt.n	8776 <DCT2+0x66>
	FFTcore(2 * N, 1, Ar, 2 * n, Ai, 2 * n, 'n', 'f');
    87a6:	687b      	ldr	r3, [r7, #4]
    87a8:	0058      	lsls	r0, r3, #1
    87aa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    87ac:	0059      	lsls	r1, r3, #1
    87ae:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    87b0:	005b      	lsls	r3, r3, #1
    87b2:	2266      	movs	r2, #102	; 0x66
    87b4:	9203      	str	r2, [sp, #12]
    87b6:	226e      	movs	r2, #110	; 0x6e
    87b8:	9202      	str	r2, [sp, #8]
    87ba:	9301      	str	r3, [sp, #4]
    87bc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    87be:	9300      	str	r3, [sp, #0]
    87c0:	460b      	mov	r3, r1
    87c2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    87c4:	2101      	movs	r1, #1
    87c6:	f7ff fcbb 	bl	8140 <FFTcore>
	double g = M_PI / (2 * N), p = sqrt(2.0 / N), po = sqrt(1.0 / N);
    87ca:	687b      	ldr	r3, [r7, #4]
    87cc:	005b      	lsls	r3, r3, #1
    87ce:	4618      	mov	r0, r3
    87d0:	f005 fc9e 	bl	e110 <__aeabi_i2d>
    87d4:	4603      	mov	r3, r0
    87d6:	460c      	mov	r4, r1
    87d8:	461a      	mov	r2, r3
    87da:	4623      	mov	r3, r4
    87dc:	a15f      	add	r1, pc, #380	; (adr r1, 895c <DCT2+0x24c>)
    87de:	e9d1 0100 	ldrd	r0, r1, [r1]
    87e2:	f005 fe29 	bl	e438 <__aeabi_ddiv>
    87e6:	4603      	mov	r3, r0
    87e8:	460c      	mov	r4, r1
    87ea:	e9c7 3408 	strd	r3, r4, [r7, #32]
    87ee:	6878      	ldr	r0, [r7, #4]
    87f0:	f005 fc8e 	bl	e110 <__aeabi_i2d>
    87f4:	4603      	mov	r3, r0
    87f6:	460c      	mov	r4, r1
    87f8:	461a      	mov	r2, r3
    87fa:	4623      	mov	r3, r4
    87fc:	f04f 0000 	mov.w	r0, #0
    8800:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    8804:	f005 fe18 	bl	e438 <__aeabi_ddiv>
    8808:	4603      	mov	r3, r0
    880a:	460c      	mov	r4, r1
    880c:	ec44 3b17 	vmov	d7, r3, r4
    8810:	eeb0 0a47 	vmov.f32	s0, s14
    8814:	eef0 0a67 	vmov.f32	s1, s15
    8818:	f004 fa4e 	bl	ccb8 <sqrt>
    881c:	ed87 0b06 	vstr	d0, [r7, #24]
    8820:	6878      	ldr	r0, [r7, #4]
    8822:	f005 fc75 	bl	e110 <__aeabi_i2d>
    8826:	4603      	mov	r3, r0
    8828:	460c      	mov	r4, r1
    882a:	461a      	mov	r2, r3
    882c:	4623      	mov	r3, r4
    882e:	f04f 0000 	mov.w	r0, #0
    8832:	4949      	ldr	r1, [pc, #292]	; (8958 <DCT2+0x248>)
    8834:	f005 fe00 	bl	e438 <__aeabi_ddiv>
    8838:	4603      	mov	r3, r0
    883a:	460c      	mov	r4, r1
    883c:	ec44 3b17 	vmov	d7, r3, r4
    8840:	eeb0 0a47 	vmov.f32	s0, s14
    8844:	eef0 0a67 	vmov.f32	s1, s15
    8848:	f004 fa36 	bl	ccb8 <sqrt>
    884c:	ed87 0b04 	vstr	d0, [r7, #16]
	for (n = 0; n<N; ++n) {
    8850:	2300      	movs	r3, #0
    8852:	637b      	str	r3, [r7, #52]	; 0x34
    8854:	e076      	b.n	8944 <DCT2+0x234>
		double z = (Ar[n] * cos(n*g) + Ai[n] * sin(n*g)) / 2;
    8856:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    8858:	00db      	lsls	r3, r3, #3
    885a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    885c:	4413      	add	r3, r2
    885e:	e9d3 4500 	ldrd	r4, r5, [r3]
    8862:	6b78      	ldr	r0, [r7, #52]	; 0x34
    8864:	f005 fc54 	bl	e110 <__aeabi_i2d>
    8868:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
    886c:	f005 fcba 	bl	e1e4 <__aeabi_dmul>
    8870:	4602      	mov	r2, r0
    8872:	460b      	mov	r3, r1
    8874:	ec43 2b17 	vmov	d7, r2, r3
    8878:	eeb0 0a47 	vmov.f32	s0, s14
    887c:	eef0 0a67 	vmov.f32	s1, s15
    8880:	f004 f98e 	bl	cba0 <cos>
    8884:	ec53 2b10 	vmov	r2, r3, d0
    8888:	4620      	mov	r0, r4
    888a:	4629      	mov	r1, r5
    888c:	f005 fcaa 	bl	e1e4 <__aeabi_dmul>
    8890:	4603      	mov	r3, r0
    8892:	460c      	mov	r4, r1
    8894:	4698      	mov	r8, r3
    8896:	46a1      	mov	r9, r4
    8898:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    889a:	00db      	lsls	r3, r3, #3
    889c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    889e:	4413      	add	r3, r2
    88a0:	e9d3 4500 	ldrd	r4, r5, [r3]
    88a4:	6b78      	ldr	r0, [r7, #52]	; 0x34
    88a6:	f005 fc33 	bl	e110 <__aeabi_i2d>
    88aa:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
    88ae:	f005 fc99 	bl	e1e4 <__aeabi_dmul>
    88b2:	4602      	mov	r2, r0
    88b4:	460b      	mov	r3, r1
    88b6:	ec43 2b17 	vmov	d7, r2, r3
    88ba:	eeb0 0a47 	vmov.f32	s0, s14
    88be:	eef0 0a67 	vmov.f32	s1, s15
    88c2:	f004 f9b1 	bl	cc28 <sin>
    88c6:	ec53 2b10 	vmov	r2, r3, d0
    88ca:	4620      	mov	r0, r4
    88cc:	4629      	mov	r1, r5
    88ce:	f005 fc89 	bl	e1e4 <__aeabi_dmul>
    88d2:	4603      	mov	r3, r0
    88d4:	460c      	mov	r4, r1
    88d6:	461a      	mov	r2, r3
    88d8:	4623      	mov	r3, r4
    88da:	4640      	mov	r0, r8
    88dc:	4649      	mov	r1, r9
    88de:	f005 facb 	bl	de78 <__adddf3>
    88e2:	4603      	mov	r3, r0
    88e4:	460c      	mov	r4, r1
    88e6:	4618      	mov	r0, r3
    88e8:	4621      	mov	r1, r4
    88ea:	f04f 0200 	mov.w	r2, #0
    88ee:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    88f2:	f005 fda1 	bl	e438 <__aeabi_ddiv>
    88f6:	4603      	mov	r3, r0
    88f8:	460c      	mov	r4, r1
    88fa:	e9c7 3402 	strd	r3, r4, [r7, #8]
		if (n == 0) x[n] = po * z;
    88fe:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    8900:	2b00      	cmp	r3, #0
    8902:	d10e      	bne.n	8922 <DCT2+0x212>
    8904:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    8906:	00db      	lsls	r3, r3, #3
    8908:	683a      	ldr	r2, [r7, #0]
    890a:	18d5      	adds	r5, r2, r3
    890c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
    8910:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
    8914:	f005 fc66 	bl	e1e4 <__aeabi_dmul>
    8918:	4603      	mov	r3, r0
    891a:	460c      	mov	r4, r1
    891c:	e9c5 3400 	strd	r3, r4, [r5]
    8920:	e00d      	b.n	893e <DCT2+0x22e>
		else     x[n] = p * z;
    8922:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    8924:	00db      	lsls	r3, r3, #3
    8926:	683a      	ldr	r2, [r7, #0]
    8928:	18d5      	adds	r5, r2, r3
    892a:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
    892e:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
    8932:	f005 fc57 	bl	e1e4 <__aeabi_dmul>
    8936:	4603      	mov	r3, r0
    8938:	460c      	mov	r4, r1
    893a:	e9c5 3400 	strd	r3, r4, [r5]
	for (n = 0; n<N; ++n) {
    893e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    8940:	3301      	adds	r3, #1
    8942:	637b      	str	r3, [r7, #52]	; 0x34
    8944:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    8946:	687b      	ldr	r3, [r7, #4]
    8948:	429a      	cmp	r2, r3
    894a:	db84      	blt.n	8856 <DCT2+0x146>
	}
}
    894c:	bf00      	nop
    894e:	3738      	adds	r7, #56	; 0x38
    8950:	46bd      	mov	sp, r7
    8952:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
    8956:	bf00      	nop
    8958:	3ff00000 	.word	0x3ff00000
    895c:	54442d18 	.word	0x54442d18
    8960:	400921fb 	.word	0x400921fb

00008964 <dct_test>:


extern double* dct_test(void) {
    8964:	b5b0      	push	{r4, r5, r7, lr}
    8966:	b084      	sub	sp, #16
    8968:	af00      	add	r7, sp, #0


	int m = 32;
    896a:	2320      	movs	r3, #32
    896c:	60bb      	str	r3, [r7, #8]
	double* z = (double*)malloc(m * sizeof(double));
    896e:	68bb      	ldr	r3, [r7, #8]
    8970:	00db      	lsls	r3, r3, #3
    8972:	4618      	mov	r0, r3
    8974:	f002 f868 	bl	aa48 <malloc>
    8978:	4603      	mov	r3, r0
    897a:	607b      	str	r3, [r7, #4]
	int i;
	for (i = 0; i < 32; ++i) z[i] = i;
    897c:	2300      	movs	r3, #0
    897e:	60fb      	str	r3, [r7, #12]
    8980:	e00d      	b.n	899e <dct_test+0x3a>
    8982:	68fb      	ldr	r3, [r7, #12]
    8984:	00db      	lsls	r3, r3, #3
    8986:	687a      	ldr	r2, [r7, #4]
    8988:	18d5      	adds	r5, r2, r3
    898a:	68f8      	ldr	r0, [r7, #12]
    898c:	f005 fbc0 	bl	e110 <__aeabi_i2d>
    8990:	4603      	mov	r3, r0
    8992:	460c      	mov	r4, r1
    8994:	e9c5 3400 	strd	r3, r4, [r5]
    8998:	68fb      	ldr	r3, [r7, #12]
    899a:	3301      	adds	r3, #1
    899c:	60fb      	str	r3, [r7, #12]
    899e:	68fb      	ldr	r3, [r7, #12]
    89a0:	2b1f      	cmp	r3, #31
    89a2:	ddee      	ble.n	8982 <dct_test+0x1e>

	DCT2(m, z);
    89a4:	6879      	ldr	r1, [r7, #4]
    89a6:	68b8      	ldr	r0, [r7, #8]
    89a8:	f7ff feb2 	bl	8710 <DCT2>

	return z;
    89ac:	687b      	ldr	r3, [r7, #4]

	//free(z); MUST FREE z IN CALLER FUNCTION

}
    89ae:	4618      	mov	r0, r3
    89b0:	3710      	adds	r7, #16
    89b2:	46bd      	mov	sp, r7
    89b4:	bdb0      	pop	{r4, r5, r7, pc}
	...

000089b8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
    89b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    89bc:	b0bf      	sub	sp, #252	; 0xfc
    89be:	af1e      	add	r7, sp, #120	; 0x78
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
    89c0:	f000 fc0a 	bl	91d8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
    89c4:	f000 fa80 	bl	8ec8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
    89c8:	f000 fb12 	bl	8ff0 <MX_GPIO_Init>
  MX_UART4_Init();
    89cc:	f000 fae6 	bl	8f9c <MX_UART4_Init>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	HAL_UART_Transmit(&huart4, (unsigned char *)"Welcome to Classification and Control!\n", 40, 0xFFFF);
    89d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
    89d4:	2228      	movs	r2, #40	; 0x28
    89d6:	49c2      	ldr	r1, [pc, #776]	; (8ce0 <main+0x328>)
    89d8:	48c2      	ldr	r0, [pc, #776]	; (8ce4 <main+0x32c>)
    89da:	f001 fbac 	bl	a136 <HAL_UART_Transmit>
	double* z = dct_test();
    89de:	f7ff ffc1 	bl	8964 <dct_test>
    89e2:	67f8      	str	r0, [r7, #124]	; 0x7c
	char * str = {0};
    89e4:	2300      	movs	r3, #0
    89e6:	67bb      	str	r3, [r7, #120]	; 0x78
	HAL_UART_Transmit(&huart4, (unsigned char*)"Test DCT Coeffs:\n", 18, 0xFFFF);
    89e8:	f64f 73ff 	movw	r3, #65535	; 0xffff
    89ec:	2212      	movs	r2, #18
    89ee:	49be      	ldr	r1, [pc, #760]	; (8ce8 <main+0x330>)
    89f0:	48bc      	ldr	r0, [pc, #752]	; (8ce4 <main+0x32c>)
    89f2:	f001 fba0 	bl	a136 <HAL_UART_Transmit>
	char *hello_world = (char*)malloc(2 * sizeof(char));
    89f6:	2002      	movs	r0, #2
    89f8:	f002 f826 	bl	aa48 <malloc>
    89fc:	4603      	mov	r3, r0
    89fe:	677b      	str	r3, [r7, #116]	; 0x74
	sprintf(hello_world, "\n%d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d\n", (int)(z[0]*100), (int)(z[1]*100), (int)(z[2]*100), (int)(z[3]*100), (int)(z[4]*100), (int)(z[5]*100), (int)(z[6]*100), (int)(z[7]*100), (int)(z[8]*100), (int)(z[9]*100), (int)(z[10]*100), (int)(z[11]*100), (int)(z[12]*100), (int)(z[13]*100), (int)(z[14]*100), (int)(z[15]*100), (int)(z[16]*100), (int)(z[17]*100), (int)(z[18]*100), (int)(z[19]*100), (int)(z[20]*100), (int)(z[21]*100), (int)(z[22]*100), (int)(z[23]*100), (int)(z[24]*100), (int)(z[25]*100), (int)(z[26]*100), (int)(z[27]*100), (int)(z[28]*100), (int)(z[29]*100), (int)(z[30]*100), (int)(z[31]*100));
    8a00:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8a02:	e9d3 0100 	ldrd	r0, r1, [r3]
    8a06:	f04f 0200 	mov.w	r2, #0
    8a0a:	4bb8      	ldr	r3, [pc, #736]	; (8cec <main+0x334>)
    8a0c:	f005 fbea 	bl	e1e4 <__aeabi_dmul>
    8a10:	4603      	mov	r3, r0
    8a12:	460c      	mov	r4, r1
    8a14:	4618      	mov	r0, r3
    8a16:	4621      	mov	r1, r4
    8a18:	f005 fe94 	bl	e744 <__aeabi_d2iz>
    8a1c:	4680      	mov	r8, r0
    8a1e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8a20:	3308      	adds	r3, #8
    8a22:	e9d3 0100 	ldrd	r0, r1, [r3]
    8a26:	f04f 0200 	mov.w	r2, #0
    8a2a:	4bb0      	ldr	r3, [pc, #704]	; (8cec <main+0x334>)
    8a2c:	f005 fbda 	bl	e1e4 <__aeabi_dmul>
    8a30:	4603      	mov	r3, r0
    8a32:	460c      	mov	r4, r1
    8a34:	4618      	mov	r0, r3
    8a36:	4621      	mov	r1, r4
    8a38:	f005 fe84 	bl	e744 <__aeabi_d2iz>
    8a3c:	4681      	mov	r9, r0
    8a3e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8a40:	3310      	adds	r3, #16
    8a42:	e9d3 0100 	ldrd	r0, r1, [r3]
    8a46:	f04f 0200 	mov.w	r2, #0
    8a4a:	4ba8      	ldr	r3, [pc, #672]	; (8cec <main+0x334>)
    8a4c:	f005 fbca 	bl	e1e4 <__aeabi_dmul>
    8a50:	4603      	mov	r3, r0
    8a52:	460c      	mov	r4, r1
    8a54:	4618      	mov	r0, r3
    8a56:	4621      	mov	r1, r4
    8a58:	f005 fe74 	bl	e744 <__aeabi_d2iz>
    8a5c:	66f8      	str	r0, [r7, #108]	; 0x6c
    8a5e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8a60:	3318      	adds	r3, #24
    8a62:	e9d3 0100 	ldrd	r0, r1, [r3]
    8a66:	f04f 0200 	mov.w	r2, #0
    8a6a:	4ba0      	ldr	r3, [pc, #640]	; (8cec <main+0x334>)
    8a6c:	f005 fbba 	bl	e1e4 <__aeabi_dmul>
    8a70:	4603      	mov	r3, r0
    8a72:	460c      	mov	r4, r1
    8a74:	4618      	mov	r0, r3
    8a76:	4621      	mov	r1, r4
    8a78:	f005 fe64 	bl	e744 <__aeabi_d2iz>
    8a7c:	66b8      	str	r0, [r7, #104]	; 0x68
    8a7e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8a80:	3320      	adds	r3, #32
    8a82:	e9d3 0100 	ldrd	r0, r1, [r3]
    8a86:	f04f 0200 	mov.w	r2, #0
    8a8a:	4b98      	ldr	r3, [pc, #608]	; (8cec <main+0x334>)
    8a8c:	f005 fbaa 	bl	e1e4 <__aeabi_dmul>
    8a90:	4603      	mov	r3, r0
    8a92:	460c      	mov	r4, r1
    8a94:	4618      	mov	r0, r3
    8a96:	4621      	mov	r1, r4
    8a98:	f005 fe54 	bl	e744 <__aeabi_d2iz>
    8a9c:	6678      	str	r0, [r7, #100]	; 0x64
    8a9e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8aa0:	3328      	adds	r3, #40	; 0x28
    8aa2:	e9d3 0100 	ldrd	r0, r1, [r3]
    8aa6:	f04f 0200 	mov.w	r2, #0
    8aaa:	4b90      	ldr	r3, [pc, #576]	; (8cec <main+0x334>)
    8aac:	f005 fb9a 	bl	e1e4 <__aeabi_dmul>
    8ab0:	4603      	mov	r3, r0
    8ab2:	460c      	mov	r4, r1
    8ab4:	4618      	mov	r0, r3
    8ab6:	4621      	mov	r1, r4
    8ab8:	f005 fe44 	bl	e744 <__aeabi_d2iz>
    8abc:	6638      	str	r0, [r7, #96]	; 0x60
    8abe:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8ac0:	3330      	adds	r3, #48	; 0x30
    8ac2:	e9d3 0100 	ldrd	r0, r1, [r3]
    8ac6:	f04f 0200 	mov.w	r2, #0
    8aca:	4b88      	ldr	r3, [pc, #544]	; (8cec <main+0x334>)
    8acc:	f005 fb8a 	bl	e1e4 <__aeabi_dmul>
    8ad0:	4603      	mov	r3, r0
    8ad2:	460c      	mov	r4, r1
    8ad4:	4618      	mov	r0, r3
    8ad6:	4621      	mov	r1, r4
    8ad8:	f005 fe34 	bl	e744 <__aeabi_d2iz>
    8adc:	65f8      	str	r0, [r7, #92]	; 0x5c
    8ade:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8ae0:	3338      	adds	r3, #56	; 0x38
    8ae2:	e9d3 0100 	ldrd	r0, r1, [r3]
    8ae6:	f04f 0200 	mov.w	r2, #0
    8aea:	4b80      	ldr	r3, [pc, #512]	; (8cec <main+0x334>)
    8aec:	f005 fb7a 	bl	e1e4 <__aeabi_dmul>
    8af0:	4603      	mov	r3, r0
    8af2:	460c      	mov	r4, r1
    8af4:	4618      	mov	r0, r3
    8af6:	4621      	mov	r1, r4
    8af8:	f005 fe24 	bl	e744 <__aeabi_d2iz>
    8afc:	65b8      	str	r0, [r7, #88]	; 0x58
    8afe:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8b00:	3340      	adds	r3, #64	; 0x40
    8b02:	e9d3 0100 	ldrd	r0, r1, [r3]
    8b06:	f04f 0200 	mov.w	r2, #0
    8b0a:	4b78      	ldr	r3, [pc, #480]	; (8cec <main+0x334>)
    8b0c:	f005 fb6a 	bl	e1e4 <__aeabi_dmul>
    8b10:	4603      	mov	r3, r0
    8b12:	460c      	mov	r4, r1
    8b14:	4618      	mov	r0, r3
    8b16:	4621      	mov	r1, r4
    8b18:	f005 fe14 	bl	e744 <__aeabi_d2iz>
    8b1c:	6578      	str	r0, [r7, #84]	; 0x54
    8b1e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8b20:	3348      	adds	r3, #72	; 0x48
    8b22:	e9d3 0100 	ldrd	r0, r1, [r3]
    8b26:	f04f 0200 	mov.w	r2, #0
    8b2a:	4b70      	ldr	r3, [pc, #448]	; (8cec <main+0x334>)
    8b2c:	f005 fb5a 	bl	e1e4 <__aeabi_dmul>
    8b30:	4603      	mov	r3, r0
    8b32:	460c      	mov	r4, r1
    8b34:	4618      	mov	r0, r3
    8b36:	4621      	mov	r1, r4
    8b38:	f005 fe04 	bl	e744 <__aeabi_d2iz>
    8b3c:	6538      	str	r0, [r7, #80]	; 0x50
    8b3e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8b40:	3350      	adds	r3, #80	; 0x50
    8b42:	e9d3 0100 	ldrd	r0, r1, [r3]
    8b46:	f04f 0200 	mov.w	r2, #0
    8b4a:	4b68      	ldr	r3, [pc, #416]	; (8cec <main+0x334>)
    8b4c:	f005 fb4a 	bl	e1e4 <__aeabi_dmul>
    8b50:	4603      	mov	r3, r0
    8b52:	460c      	mov	r4, r1
    8b54:	4618      	mov	r0, r3
    8b56:	4621      	mov	r1, r4
    8b58:	f005 fdf4 	bl	e744 <__aeabi_d2iz>
    8b5c:	64f8      	str	r0, [r7, #76]	; 0x4c
    8b5e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8b60:	3358      	adds	r3, #88	; 0x58
    8b62:	e9d3 0100 	ldrd	r0, r1, [r3]
    8b66:	f04f 0200 	mov.w	r2, #0
    8b6a:	4b60      	ldr	r3, [pc, #384]	; (8cec <main+0x334>)
    8b6c:	f005 fb3a 	bl	e1e4 <__aeabi_dmul>
    8b70:	4603      	mov	r3, r0
    8b72:	460c      	mov	r4, r1
    8b74:	4618      	mov	r0, r3
    8b76:	4621      	mov	r1, r4
    8b78:	f005 fde4 	bl	e744 <__aeabi_d2iz>
    8b7c:	64b8      	str	r0, [r7, #72]	; 0x48
    8b7e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8b80:	3360      	adds	r3, #96	; 0x60
    8b82:	e9d3 0100 	ldrd	r0, r1, [r3]
    8b86:	f04f 0200 	mov.w	r2, #0
    8b8a:	4b58      	ldr	r3, [pc, #352]	; (8cec <main+0x334>)
    8b8c:	f005 fb2a 	bl	e1e4 <__aeabi_dmul>
    8b90:	4603      	mov	r3, r0
    8b92:	460c      	mov	r4, r1
    8b94:	4618      	mov	r0, r3
    8b96:	4621      	mov	r1, r4
    8b98:	f005 fdd4 	bl	e744 <__aeabi_d2iz>
    8b9c:	6478      	str	r0, [r7, #68]	; 0x44
    8b9e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8ba0:	3368      	adds	r3, #104	; 0x68
    8ba2:	e9d3 0100 	ldrd	r0, r1, [r3]
    8ba6:	f04f 0200 	mov.w	r2, #0
    8baa:	4b50      	ldr	r3, [pc, #320]	; (8cec <main+0x334>)
    8bac:	f005 fb1a 	bl	e1e4 <__aeabi_dmul>
    8bb0:	4603      	mov	r3, r0
    8bb2:	460c      	mov	r4, r1
    8bb4:	4618      	mov	r0, r3
    8bb6:	4621      	mov	r1, r4
    8bb8:	f005 fdc4 	bl	e744 <__aeabi_d2iz>
    8bbc:	6438      	str	r0, [r7, #64]	; 0x40
    8bbe:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8bc0:	3370      	adds	r3, #112	; 0x70
    8bc2:	e9d3 0100 	ldrd	r0, r1, [r3]
    8bc6:	f04f 0200 	mov.w	r2, #0
    8bca:	4b48      	ldr	r3, [pc, #288]	; (8cec <main+0x334>)
    8bcc:	f005 fb0a 	bl	e1e4 <__aeabi_dmul>
    8bd0:	4603      	mov	r3, r0
    8bd2:	460c      	mov	r4, r1
    8bd4:	4618      	mov	r0, r3
    8bd6:	4621      	mov	r1, r4
    8bd8:	f005 fdb4 	bl	e744 <__aeabi_d2iz>
    8bdc:	63f8      	str	r0, [r7, #60]	; 0x3c
    8bde:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8be0:	3378      	adds	r3, #120	; 0x78
    8be2:	e9d3 0100 	ldrd	r0, r1, [r3]
    8be6:	f04f 0200 	mov.w	r2, #0
    8bea:	4b40      	ldr	r3, [pc, #256]	; (8cec <main+0x334>)
    8bec:	f005 fafa 	bl	e1e4 <__aeabi_dmul>
    8bf0:	4603      	mov	r3, r0
    8bf2:	460c      	mov	r4, r1
    8bf4:	4618      	mov	r0, r3
    8bf6:	4621      	mov	r1, r4
    8bf8:	f005 fda4 	bl	e744 <__aeabi_d2iz>
    8bfc:	63b8      	str	r0, [r7, #56]	; 0x38
    8bfe:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8c00:	3380      	adds	r3, #128	; 0x80
    8c02:	e9d3 0100 	ldrd	r0, r1, [r3]
    8c06:	f04f 0200 	mov.w	r2, #0
    8c0a:	4b38      	ldr	r3, [pc, #224]	; (8cec <main+0x334>)
    8c0c:	f005 faea 	bl	e1e4 <__aeabi_dmul>
    8c10:	4603      	mov	r3, r0
    8c12:	460c      	mov	r4, r1
    8c14:	4618      	mov	r0, r3
    8c16:	4621      	mov	r1, r4
    8c18:	f005 fd94 	bl	e744 <__aeabi_d2iz>
    8c1c:	6378      	str	r0, [r7, #52]	; 0x34
    8c1e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8c20:	3388      	adds	r3, #136	; 0x88
    8c22:	e9d3 0100 	ldrd	r0, r1, [r3]
    8c26:	f04f 0200 	mov.w	r2, #0
    8c2a:	4b30      	ldr	r3, [pc, #192]	; (8cec <main+0x334>)
    8c2c:	f005 fada 	bl	e1e4 <__aeabi_dmul>
    8c30:	4603      	mov	r3, r0
    8c32:	460c      	mov	r4, r1
    8c34:	4618      	mov	r0, r3
    8c36:	4621      	mov	r1, r4
    8c38:	f005 fd84 	bl	e744 <__aeabi_d2iz>
    8c3c:	6338      	str	r0, [r7, #48]	; 0x30
    8c3e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8c40:	3390      	adds	r3, #144	; 0x90
    8c42:	e9d3 0100 	ldrd	r0, r1, [r3]
    8c46:	f04f 0200 	mov.w	r2, #0
    8c4a:	4b28      	ldr	r3, [pc, #160]	; (8cec <main+0x334>)
    8c4c:	f005 faca 	bl	e1e4 <__aeabi_dmul>
    8c50:	4603      	mov	r3, r0
    8c52:	460c      	mov	r4, r1
    8c54:	4618      	mov	r0, r3
    8c56:	4621      	mov	r1, r4
    8c58:	f005 fd74 	bl	e744 <__aeabi_d2iz>
    8c5c:	62f8      	str	r0, [r7, #44]	; 0x2c
    8c5e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8c60:	3398      	adds	r3, #152	; 0x98
    8c62:	e9d3 0100 	ldrd	r0, r1, [r3]
    8c66:	f04f 0200 	mov.w	r2, #0
    8c6a:	4b20      	ldr	r3, [pc, #128]	; (8cec <main+0x334>)
    8c6c:	f005 faba 	bl	e1e4 <__aeabi_dmul>
    8c70:	4603      	mov	r3, r0
    8c72:	460c      	mov	r4, r1
    8c74:	4618      	mov	r0, r3
    8c76:	4621      	mov	r1, r4
    8c78:	f005 fd64 	bl	e744 <__aeabi_d2iz>
    8c7c:	62b8      	str	r0, [r7, #40]	; 0x28
    8c7e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8c80:	33a0      	adds	r3, #160	; 0xa0
    8c82:	e9d3 0100 	ldrd	r0, r1, [r3]
    8c86:	f04f 0200 	mov.w	r2, #0
    8c8a:	4b18      	ldr	r3, [pc, #96]	; (8cec <main+0x334>)
    8c8c:	f005 faaa 	bl	e1e4 <__aeabi_dmul>
    8c90:	4603      	mov	r3, r0
    8c92:	460c      	mov	r4, r1
    8c94:	4618      	mov	r0, r3
    8c96:	4621      	mov	r1, r4
    8c98:	f005 fd54 	bl	e744 <__aeabi_d2iz>
    8c9c:	6278      	str	r0, [r7, #36]	; 0x24
    8c9e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8ca0:	33a8      	adds	r3, #168	; 0xa8
    8ca2:	e9d3 0100 	ldrd	r0, r1, [r3]
    8ca6:	f04f 0200 	mov.w	r2, #0
    8caa:	4b10      	ldr	r3, [pc, #64]	; (8cec <main+0x334>)
    8cac:	f005 fa9a 	bl	e1e4 <__aeabi_dmul>
    8cb0:	4603      	mov	r3, r0
    8cb2:	460c      	mov	r4, r1
    8cb4:	4618      	mov	r0, r3
    8cb6:	4621      	mov	r1, r4
    8cb8:	f005 fd44 	bl	e744 <__aeabi_d2iz>
    8cbc:	6238      	str	r0, [r7, #32]
    8cbe:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8cc0:	33b0      	adds	r3, #176	; 0xb0
    8cc2:	e9d3 0100 	ldrd	r0, r1, [r3]
    8cc6:	f04f 0200 	mov.w	r2, #0
    8cca:	4b08      	ldr	r3, [pc, #32]	; (8cec <main+0x334>)
    8ccc:	f005 fa8a 	bl	e1e4 <__aeabi_dmul>
    8cd0:	4603      	mov	r3, r0
    8cd2:	460c      	mov	r4, r1
    8cd4:	4618      	mov	r0, r3
    8cd6:	4621      	mov	r1, r4
    8cd8:	f005 fd34 	bl	e744 <__aeabi_d2iz>
    8cdc:	61f8      	str	r0, [r7, #28]
    8cde:	e007      	b.n	8cf0 <main+0x338>
    8ce0:	0000eaa0 	.word	0x0000eaa0
    8ce4:	0001f1d4 	.word	0x0001f1d4
    8ce8:	0000eac8 	.word	0x0000eac8
    8cec:	40590000 	.word	0x40590000
    8cf0:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8cf2:	33b8      	adds	r3, #184	; 0xb8
    8cf4:	e9d3 0100 	ldrd	r0, r1, [r3]
    8cf8:	f04f 0200 	mov.w	r2, #0
    8cfc:	4b6f      	ldr	r3, [pc, #444]	; (8ebc <main+0x504>)
    8cfe:	f005 fa71 	bl	e1e4 <__aeabi_dmul>
    8d02:	4603      	mov	r3, r0
    8d04:	460c      	mov	r4, r1
    8d06:	4618      	mov	r0, r3
    8d08:	4621      	mov	r1, r4
    8d0a:	f005 fd1b 	bl	e744 <__aeabi_d2iz>
    8d0e:	61b8      	str	r0, [r7, #24]
    8d10:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8d12:	33c0      	adds	r3, #192	; 0xc0
    8d14:	e9d3 0100 	ldrd	r0, r1, [r3]
    8d18:	f04f 0200 	mov.w	r2, #0
    8d1c:	4b67      	ldr	r3, [pc, #412]	; (8ebc <main+0x504>)
    8d1e:	f005 fa61 	bl	e1e4 <__aeabi_dmul>
    8d22:	4603      	mov	r3, r0
    8d24:	460c      	mov	r4, r1
    8d26:	4618      	mov	r0, r3
    8d28:	4621      	mov	r1, r4
    8d2a:	f005 fd0b 	bl	e744 <__aeabi_d2iz>
    8d2e:	6178      	str	r0, [r7, #20]
    8d30:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8d32:	33c8      	adds	r3, #200	; 0xc8
    8d34:	e9d3 0100 	ldrd	r0, r1, [r3]
    8d38:	f04f 0200 	mov.w	r2, #0
    8d3c:	4b5f      	ldr	r3, [pc, #380]	; (8ebc <main+0x504>)
    8d3e:	f005 fa51 	bl	e1e4 <__aeabi_dmul>
    8d42:	4603      	mov	r3, r0
    8d44:	460c      	mov	r4, r1
    8d46:	4618      	mov	r0, r3
    8d48:	4621      	mov	r1, r4
    8d4a:	f005 fcfb 	bl	e744 <__aeabi_d2iz>
    8d4e:	6138      	str	r0, [r7, #16]
    8d50:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8d52:	33d0      	adds	r3, #208	; 0xd0
    8d54:	e9d3 0100 	ldrd	r0, r1, [r3]
    8d58:	f04f 0200 	mov.w	r2, #0
    8d5c:	4b57      	ldr	r3, [pc, #348]	; (8ebc <main+0x504>)
    8d5e:	f005 fa41 	bl	e1e4 <__aeabi_dmul>
    8d62:	4603      	mov	r3, r0
    8d64:	460c      	mov	r4, r1
    8d66:	4618      	mov	r0, r3
    8d68:	4621      	mov	r1, r4
    8d6a:	f005 fceb 	bl	e744 <__aeabi_d2iz>
    8d6e:	60f8      	str	r0, [r7, #12]
    8d70:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8d72:	33d8      	adds	r3, #216	; 0xd8
    8d74:	e9d3 0100 	ldrd	r0, r1, [r3]
    8d78:	f04f 0200 	mov.w	r2, #0
    8d7c:	4b4f      	ldr	r3, [pc, #316]	; (8ebc <main+0x504>)
    8d7e:	f005 fa31 	bl	e1e4 <__aeabi_dmul>
    8d82:	4603      	mov	r3, r0
    8d84:	460c      	mov	r4, r1
    8d86:	4618      	mov	r0, r3
    8d88:	4621      	mov	r1, r4
    8d8a:	f005 fcdb 	bl	e744 <__aeabi_d2iz>
    8d8e:	60b8      	str	r0, [r7, #8]
    8d90:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8d92:	33e0      	adds	r3, #224	; 0xe0
    8d94:	e9d3 0100 	ldrd	r0, r1, [r3]
    8d98:	f04f 0200 	mov.w	r2, #0
    8d9c:	4b47      	ldr	r3, [pc, #284]	; (8ebc <main+0x504>)
    8d9e:	f005 fa21 	bl	e1e4 <__aeabi_dmul>
    8da2:	4603      	mov	r3, r0
    8da4:	460c      	mov	r4, r1
    8da6:	4618      	mov	r0, r3
    8da8:	4621      	mov	r1, r4
    8daa:	f005 fccb 	bl	e744 <__aeabi_d2iz>
    8dae:	6078      	str	r0, [r7, #4]
    8db0:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8db2:	33e8      	adds	r3, #232	; 0xe8
    8db4:	e9d3 0100 	ldrd	r0, r1, [r3]
    8db8:	f04f 0200 	mov.w	r2, #0
    8dbc:	4b3f      	ldr	r3, [pc, #252]	; (8ebc <main+0x504>)
    8dbe:	f005 fa11 	bl	e1e4 <__aeabi_dmul>
    8dc2:	4603      	mov	r3, r0
    8dc4:	460c      	mov	r4, r1
    8dc6:	4618      	mov	r0, r3
    8dc8:	4621      	mov	r1, r4
    8dca:	f005 fcbb 	bl	e744 <__aeabi_d2iz>
    8dce:	4606      	mov	r6, r0
    8dd0:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8dd2:	33f0      	adds	r3, #240	; 0xf0
    8dd4:	e9d3 0100 	ldrd	r0, r1, [r3]
    8dd8:	f04f 0200 	mov.w	r2, #0
    8ddc:	4b37      	ldr	r3, [pc, #220]	; (8ebc <main+0x504>)
    8dde:	f005 fa01 	bl	e1e4 <__aeabi_dmul>
    8de2:	4603      	mov	r3, r0
    8de4:	460c      	mov	r4, r1
    8de6:	4618      	mov	r0, r3
    8de8:	4621      	mov	r1, r4
    8dea:	f005 fcab 	bl	e744 <__aeabi_d2iz>
    8dee:	4605      	mov	r5, r0
    8df0:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
    8df2:	33f8      	adds	r3, #248	; 0xf8
    8df4:	e9d3 0100 	ldrd	r0, r1, [r3]
    8df8:	f04f 0200 	mov.w	r2, #0
    8dfc:	4b2f      	ldr	r3, [pc, #188]	; (8ebc <main+0x504>)
    8dfe:	f005 f9f1 	bl	e1e4 <__aeabi_dmul>
    8e02:	4603      	mov	r3, r0
    8e04:	460c      	mov	r4, r1
    8e06:	4618      	mov	r0, r3
    8e08:	4621      	mov	r1, r4
    8e0a:	f005 fc9b 	bl	e744 <__aeabi_d2iz>
    8e0e:	4603      	mov	r3, r0
    8e10:	931d      	str	r3, [sp, #116]	; 0x74
    8e12:	951c      	str	r5, [sp, #112]	; 0x70
    8e14:	961b      	str	r6, [sp, #108]	; 0x6c
    8e16:	687b      	ldr	r3, [r7, #4]
    8e18:	931a      	str	r3, [sp, #104]	; 0x68
    8e1a:	68bb      	ldr	r3, [r7, #8]
    8e1c:	9319      	str	r3, [sp, #100]	; 0x64
    8e1e:	68fb      	ldr	r3, [r7, #12]
    8e20:	9318      	str	r3, [sp, #96]	; 0x60
    8e22:	693b      	ldr	r3, [r7, #16]
    8e24:	9317      	str	r3, [sp, #92]	; 0x5c
    8e26:	697b      	ldr	r3, [r7, #20]
    8e28:	9316      	str	r3, [sp, #88]	; 0x58
    8e2a:	69bb      	ldr	r3, [r7, #24]
    8e2c:	9315      	str	r3, [sp, #84]	; 0x54
    8e2e:	69fb      	ldr	r3, [r7, #28]
    8e30:	9314      	str	r3, [sp, #80]	; 0x50
    8e32:	6a3b      	ldr	r3, [r7, #32]
    8e34:	9313      	str	r3, [sp, #76]	; 0x4c
    8e36:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    8e38:	9312      	str	r3, [sp, #72]	; 0x48
    8e3a:	6abb      	ldr	r3, [r7, #40]	; 0x28
    8e3c:	9311      	str	r3, [sp, #68]	; 0x44
    8e3e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    8e40:	9310      	str	r3, [sp, #64]	; 0x40
    8e42:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    8e44:	930f      	str	r3, [sp, #60]	; 0x3c
    8e46:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    8e48:	930e      	str	r3, [sp, #56]	; 0x38
    8e4a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    8e4c:	930d      	str	r3, [sp, #52]	; 0x34
    8e4e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    8e50:	930c      	str	r3, [sp, #48]	; 0x30
    8e52:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    8e54:	930b      	str	r3, [sp, #44]	; 0x2c
    8e56:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    8e58:	930a      	str	r3, [sp, #40]	; 0x28
    8e5a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    8e5c:	9309      	str	r3, [sp, #36]	; 0x24
    8e5e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    8e60:	9308      	str	r3, [sp, #32]
    8e62:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    8e64:	9307      	str	r3, [sp, #28]
    8e66:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    8e68:	9306      	str	r3, [sp, #24]
    8e6a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    8e6c:	9305      	str	r3, [sp, #20]
    8e6e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    8e70:	9304      	str	r3, [sp, #16]
    8e72:	6e3b      	ldr	r3, [r7, #96]	; 0x60
    8e74:	9303      	str	r3, [sp, #12]
    8e76:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    8e78:	9302      	str	r3, [sp, #8]
    8e7a:	6ebb      	ldr	r3, [r7, #104]	; 0x68
    8e7c:	9301      	str	r3, [sp, #4]
    8e7e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    8e80:	9300      	str	r3, [sp, #0]
    8e82:	464b      	mov	r3, r9
    8e84:	4642      	mov	r2, r8
    8e86:	490e      	ldr	r1, [pc, #56]	; (8ec0 <main+0x508>)
    8e88:	6f78      	ldr	r0, [r7, #116]	; 0x74
    8e8a:	f002 fb09 	bl	b4a0 <siprintf>
	HAL_UART_Transmit(&huart4, hello_world, strlen(hello_world), 0xFFFF);
    8e8e:	6f78      	ldr	r0, [r7, #116]	; 0x74
    8e90:	f002 fb26 	bl	b4e0 <strlen>
    8e94:	4603      	mov	r3, r0
    8e96:	b29a      	uxth	r2, r3
    8e98:	f64f 73ff 	movw	r3, #65535	; 0xffff
    8e9c:	6f79      	ldr	r1, [r7, #116]	; 0x74
    8e9e:	4809      	ldr	r0, [pc, #36]	; (8ec4 <main+0x50c>)
    8ea0:	f001 f949 	bl	a136 <HAL_UART_Transmit>
	free(z);
    8ea4:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
    8ea6:	f001 fdd7 	bl	aa58 <free>
	free(str);
    8eaa:	6fb8      	ldr	r0, [r7, #120]	; 0x78
    8eac:	f001 fdd4 	bl	aa58 <free>
	HAL_Delay(1000);
    8eb0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    8eb4:	f000 f9ee 	bl	9294 <HAL_Delay>
  {
    8eb8:	e58a      	b.n	89d0 <main+0x18>
    8eba:	bf00      	nop
    8ebc:	40590000 	.word	0x40590000
    8ec0:	0000eadc 	.word	0x0000eadc
    8ec4:	0001f1d4 	.word	0x0001f1d4

00008ec8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
    8ec8:	b580      	push	{r7, lr}
    8eca:	b094      	sub	sp, #80	; 0x50
    8ecc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
    8ece:	f107 0320 	add.w	r3, r7, #32
    8ed2:	2230      	movs	r2, #48	; 0x30
    8ed4:	2100      	movs	r1, #0
    8ed6:	4618      	mov	r0, r3
    8ed8:	f001 fdc6 	bl	aa68 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
    8edc:	f107 030c 	add.w	r3, r7, #12
    8ee0:	2200      	movs	r2, #0
    8ee2:	601a      	str	r2, [r3, #0]
    8ee4:	605a      	str	r2, [r3, #4]
    8ee6:	609a      	str	r2, [r3, #8]
    8ee8:	60da      	str	r2, [r3, #12]
    8eea:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage 
  */
  __HAL_RCC_PWR_CLK_ENABLE();
    8eec:	2300      	movs	r3, #0
    8eee:	60bb      	str	r3, [r7, #8]
    8ef0:	4b28      	ldr	r3, [pc, #160]	; (8f94 <SystemClock_Config+0xcc>)
    8ef2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    8ef4:	4a27      	ldr	r2, [pc, #156]	; (8f94 <SystemClock_Config+0xcc>)
    8ef6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
    8efa:	6413      	str	r3, [r2, #64]	; 0x40
    8efc:	4b25      	ldr	r3, [pc, #148]	; (8f94 <SystemClock_Config+0xcc>)
    8efe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    8f00:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
    8f04:	60bb      	str	r3, [r7, #8]
    8f06:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
    8f08:	2300      	movs	r3, #0
    8f0a:	607b      	str	r3, [r7, #4]
    8f0c:	4b22      	ldr	r3, [pc, #136]	; (8f98 <SystemClock_Config+0xd0>)
    8f0e:	681b      	ldr	r3, [r3, #0]
    8f10:	4a21      	ldr	r2, [pc, #132]	; (8f98 <SystemClock_Config+0xd0>)
    8f12:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
    8f16:	6013      	str	r3, [r2, #0]
    8f18:	4b1f      	ldr	r3, [pc, #124]	; (8f98 <SystemClock_Config+0xd0>)
    8f1a:	681b      	ldr	r3, [r3, #0]
    8f1c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
    8f20:	607b      	str	r3, [r7, #4]
    8f22:	687b      	ldr	r3, [r7, #4]
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
    8f24:	2301      	movs	r3, #1
    8f26:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
    8f28:	f44f 3380 	mov.w	r3, #65536	; 0x10000
    8f2c:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
    8f2e:	2302      	movs	r3, #2
    8f30:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
    8f32:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
    8f36:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
    8f38:	2304      	movs	r3, #4
    8f3a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
    8f3c:	23a8      	movs	r3, #168	; 0xa8
    8f3e:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
    8f40:	2302      	movs	r3, #2
    8f42:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
    8f44:	2304      	movs	r3, #4
    8f46:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
    8f48:	f107 0320 	add.w	r3, r7, #32
    8f4c:	4618      	mov	r0, r3
    8f4e:	f000 fc43 	bl	97d8 <HAL_RCC_OscConfig>
    8f52:	4603      	mov	r3, r0
    8f54:	2b00      	cmp	r3, #0
    8f56:	d001      	beq.n	8f5c <SystemClock_Config+0x94>
  {
    Error_Handler();
    8f58:	f000 f880 	bl	905c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
    8f5c:	230f      	movs	r3, #15
    8f5e:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
    8f60:	2302      	movs	r3, #2
    8f62:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
    8f64:	2300      	movs	r3, #0
    8f66:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
    8f68:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    8f6c:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
    8f6e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
    8f72:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
    8f74:	f107 030c 	add.w	r3, r7, #12
    8f78:	2105      	movs	r1, #5
    8f7a:	4618      	mov	r0, r3
    8f7c:	f000 fe9c 	bl	9cb8 <HAL_RCC_ClockConfig>
    8f80:	4603      	mov	r3, r0
    8f82:	2b00      	cmp	r3, #0
    8f84:	d001      	beq.n	8f8a <SystemClock_Config+0xc2>
  {
    Error_Handler();
    8f86:	f000 f869 	bl	905c <Error_Handler>
  }
}
    8f8a:	bf00      	nop
    8f8c:	3750      	adds	r7, #80	; 0x50
    8f8e:	46bd      	mov	sp, r7
    8f90:	bd80      	pop	{r7, pc}
    8f92:	bf00      	nop
    8f94:	40023800 	.word	0x40023800
    8f98:	40007000 	.word	0x40007000

00008f9c <MX_UART4_Init>:
  * @brief UART4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART4_Init(void)
{
    8f9c:	b580      	push	{r7, lr}
    8f9e:	af00      	add	r7, sp, #0
  /* USER CODE END UART4_Init 0 */

  /* USER CODE BEGIN UART4_Init 1 */

  /* USER CODE END UART4_Init 1 */
  huart4.Instance = UART4;
    8fa0:	4b11      	ldr	r3, [pc, #68]	; (8fe8 <MX_UART4_Init+0x4c>)
    8fa2:	4a12      	ldr	r2, [pc, #72]	; (8fec <MX_UART4_Init+0x50>)
    8fa4:	601a      	str	r2, [r3, #0]
  huart4.Init.BaudRate = 38400;
    8fa6:	4b10      	ldr	r3, [pc, #64]	; (8fe8 <MX_UART4_Init+0x4c>)
    8fa8:	f44f 4216 	mov.w	r2, #38400	; 0x9600
    8fac:	605a      	str	r2, [r3, #4]
  huart4.Init.WordLength = UART_WORDLENGTH_8B;
    8fae:	4b0e      	ldr	r3, [pc, #56]	; (8fe8 <MX_UART4_Init+0x4c>)
    8fb0:	2200      	movs	r2, #0
    8fb2:	609a      	str	r2, [r3, #8]
  huart4.Init.StopBits = UART_STOPBITS_1;
    8fb4:	4b0c      	ldr	r3, [pc, #48]	; (8fe8 <MX_UART4_Init+0x4c>)
    8fb6:	2200      	movs	r2, #0
    8fb8:	60da      	str	r2, [r3, #12]
  huart4.Init.Parity = UART_PARITY_NONE;
    8fba:	4b0b      	ldr	r3, [pc, #44]	; (8fe8 <MX_UART4_Init+0x4c>)
    8fbc:	2200      	movs	r2, #0
    8fbe:	611a      	str	r2, [r3, #16]
  huart4.Init.Mode = UART_MODE_TX_RX;
    8fc0:	4b09      	ldr	r3, [pc, #36]	; (8fe8 <MX_UART4_Init+0x4c>)
    8fc2:	220c      	movs	r2, #12
    8fc4:	615a      	str	r2, [r3, #20]
  huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
    8fc6:	4b08      	ldr	r3, [pc, #32]	; (8fe8 <MX_UART4_Init+0x4c>)
    8fc8:	2200      	movs	r2, #0
    8fca:	619a      	str	r2, [r3, #24]
  huart4.Init.OverSampling = UART_OVERSAMPLING_16;
    8fcc:	4b06      	ldr	r3, [pc, #24]	; (8fe8 <MX_UART4_Init+0x4c>)
    8fce:	2200      	movs	r2, #0
    8fd0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart4) != HAL_OK)
    8fd2:	4805      	ldr	r0, [pc, #20]	; (8fe8 <MX_UART4_Init+0x4c>)
    8fd4:	f001 f862 	bl	a09c <HAL_UART_Init>
    8fd8:	4603      	mov	r3, r0
    8fda:	2b00      	cmp	r3, #0
    8fdc:	d001      	beq.n	8fe2 <MX_UART4_Init+0x46>
  {
    Error_Handler();
    8fde:	f000 f83d 	bl	905c <Error_Handler>
  }
  /* USER CODE BEGIN UART4_Init 2 */

  /* USER CODE END UART4_Init 2 */

}
    8fe2:	bf00      	nop
    8fe4:	bd80      	pop	{r7, pc}
    8fe6:	bf00      	nop
    8fe8:	0001f1d4 	.word	0x0001f1d4
    8fec:	40004c00 	.word	0x40004c00

00008ff0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
    8ff0:	b480      	push	{r7}
    8ff2:	b085      	sub	sp, #20
    8ff4:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
    8ff6:	2300      	movs	r3, #0
    8ff8:	60fb      	str	r3, [r7, #12]
    8ffa:	4b17      	ldr	r3, [pc, #92]	; (9058 <MX_GPIO_Init+0x68>)
    8ffc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    8ffe:	4a16      	ldr	r2, [pc, #88]	; (9058 <MX_GPIO_Init+0x68>)
    9000:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    9004:	6313      	str	r3, [r2, #48]	; 0x30
    9006:	4b14      	ldr	r3, [pc, #80]	; (9058 <MX_GPIO_Init+0x68>)
    9008:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    900a:	f003 0380 	and.w	r3, r3, #128	; 0x80
    900e:	60fb      	str	r3, [r7, #12]
    9010:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
    9012:	2300      	movs	r3, #0
    9014:	60bb      	str	r3, [r7, #8]
    9016:	4b10      	ldr	r3, [pc, #64]	; (9058 <MX_GPIO_Init+0x68>)
    9018:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    901a:	4a0f      	ldr	r2, [pc, #60]	; (9058 <MX_GPIO_Init+0x68>)
    901c:	f043 0301 	orr.w	r3, r3, #1
    9020:	6313      	str	r3, [r2, #48]	; 0x30
    9022:	4b0d      	ldr	r3, [pc, #52]	; (9058 <MX_GPIO_Init+0x68>)
    9024:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    9026:	f003 0301 	and.w	r3, r3, #1
    902a:	60bb      	str	r3, [r7, #8]
    902c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
    902e:	2300      	movs	r3, #0
    9030:	607b      	str	r3, [r7, #4]
    9032:	4b09      	ldr	r3, [pc, #36]	; (9058 <MX_GPIO_Init+0x68>)
    9034:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    9036:	4a08      	ldr	r2, [pc, #32]	; (9058 <MX_GPIO_Init+0x68>)
    9038:	f043 0304 	orr.w	r3, r3, #4
    903c:	6313      	str	r3, [r2, #48]	; 0x30
    903e:	4b06      	ldr	r3, [pc, #24]	; (9058 <MX_GPIO_Init+0x68>)
    9040:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    9042:	f003 0304 	and.w	r3, r3, #4
    9046:	607b      	str	r3, [r7, #4]
    9048:	687b      	ldr	r3, [r7, #4]

}
    904a:	bf00      	nop
    904c:	3714      	adds	r7, #20
    904e:	46bd      	mov	sp, r7
    9050:	f85d 7b04 	ldr.w	r7, [sp], #4
    9054:	4770      	bx	lr
    9056:	bf00      	nop
    9058:	40023800 	.word	0x40023800

0000905c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
    905c:	b480      	push	{r7}
    905e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
    9060:	bf00      	nop
    9062:	46bd      	mov	sp, r7
    9064:	f85d 7b04 	ldr.w	r7, [sp], #4
    9068:	4770      	bx	lr
	...

0000906c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
    906c:	b480      	push	{r7}
    906e:	b083      	sub	sp, #12
    9070:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
    9072:	2300      	movs	r3, #0
    9074:	607b      	str	r3, [r7, #4]
    9076:	4b10      	ldr	r3, [pc, #64]	; (90b8 <HAL_MspInit+0x4c>)
    9078:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    907a:	4a0f      	ldr	r2, [pc, #60]	; (90b8 <HAL_MspInit+0x4c>)
    907c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
    9080:	6453      	str	r3, [r2, #68]	; 0x44
    9082:	4b0d      	ldr	r3, [pc, #52]	; (90b8 <HAL_MspInit+0x4c>)
    9084:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    9086:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
    908a:	607b      	str	r3, [r7, #4]
    908c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
    908e:	2300      	movs	r3, #0
    9090:	603b      	str	r3, [r7, #0]
    9092:	4b09      	ldr	r3, [pc, #36]	; (90b8 <HAL_MspInit+0x4c>)
    9094:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    9096:	4a08      	ldr	r2, [pc, #32]	; (90b8 <HAL_MspInit+0x4c>)
    9098:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
    909c:	6413      	str	r3, [r2, #64]	; 0x40
    909e:	4b06      	ldr	r3, [pc, #24]	; (90b8 <HAL_MspInit+0x4c>)
    90a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    90a2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
    90a6:	603b      	str	r3, [r7, #0]
    90a8:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
    90aa:	bf00      	nop
    90ac:	370c      	adds	r7, #12
    90ae:	46bd      	mov	sp, r7
    90b0:	f85d 7b04 	ldr.w	r7, [sp], #4
    90b4:	4770      	bx	lr
    90b6:	bf00      	nop
    90b8:	40023800 	.word	0x40023800

000090bc <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
    90bc:	b580      	push	{r7, lr}
    90be:	b08a      	sub	sp, #40	; 0x28
    90c0:	af00      	add	r7, sp, #0
    90c2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
    90c4:	f107 0314 	add.w	r3, r7, #20
    90c8:	2200      	movs	r2, #0
    90ca:	601a      	str	r2, [r3, #0]
    90cc:	605a      	str	r2, [r3, #4]
    90ce:	609a      	str	r2, [r3, #8]
    90d0:	60da      	str	r2, [r3, #12]
    90d2:	611a      	str	r2, [r3, #16]
  if(huart->Instance==UART4)
    90d4:	687b      	ldr	r3, [r7, #4]
    90d6:	681b      	ldr	r3, [r3, #0]
    90d8:	4a19      	ldr	r2, [pc, #100]	; (9140 <HAL_UART_MspInit+0x84>)
    90da:	4293      	cmp	r3, r2
    90dc:	d12c      	bne.n	9138 <HAL_UART_MspInit+0x7c>
  {
  /* USER CODE BEGIN UART4_MspInit 0 */

  /* USER CODE END UART4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART4_CLK_ENABLE();
    90de:	2300      	movs	r3, #0
    90e0:	613b      	str	r3, [r7, #16]
    90e2:	4b18      	ldr	r3, [pc, #96]	; (9144 <HAL_UART_MspInit+0x88>)
    90e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    90e6:	4a17      	ldr	r2, [pc, #92]	; (9144 <HAL_UART_MspInit+0x88>)
    90e8:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
    90ec:	6413      	str	r3, [r2, #64]	; 0x40
    90ee:	4b15      	ldr	r3, [pc, #84]	; (9144 <HAL_UART_MspInit+0x88>)
    90f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    90f2:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
    90f6:	613b      	str	r3, [r7, #16]
    90f8:	693b      	ldr	r3, [r7, #16]
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
    90fa:	2300      	movs	r3, #0
    90fc:	60fb      	str	r3, [r7, #12]
    90fe:	4b11      	ldr	r3, [pc, #68]	; (9144 <HAL_UART_MspInit+0x88>)
    9100:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    9102:	4a10      	ldr	r2, [pc, #64]	; (9144 <HAL_UART_MspInit+0x88>)
    9104:	f043 0304 	orr.w	r3, r3, #4
    9108:	6313      	str	r3, [r2, #48]	; 0x30
    910a:	4b0e      	ldr	r3, [pc, #56]	; (9144 <HAL_UART_MspInit+0x88>)
    910c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    910e:	f003 0304 	and.w	r3, r3, #4
    9112:	60fb      	str	r3, [r7, #12]
    9114:	68fb      	ldr	r3, [r7, #12]
    /**UART4 GPIO Configuration    
    PC10     ------> UART4_TX
    PC11     ------> UART4_RX 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
    9116:	f44f 6340 	mov.w	r3, #3072	; 0xc00
    911a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    911c:	2302      	movs	r3, #2
    911e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    9120:	2301      	movs	r3, #1
    9122:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    9124:	2303      	movs	r3, #3
    9126:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
    9128:	2308      	movs	r3, #8
    912a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
    912c:	f107 0314 	add.w	r3, r7, #20
    9130:	4619      	mov	r1, r3
    9132:	4805      	ldr	r0, [pc, #20]	; (9148 <HAL_UART_MspInit+0x8c>)
    9134:	f000 f9b6 	bl	94a4 <HAL_GPIO_Init>
  /* USER CODE BEGIN UART4_MspInit 1 */

  /* USER CODE END UART4_MspInit 1 */
  }

}
    9138:	bf00      	nop
    913a:	3728      	adds	r7, #40	; 0x28
    913c:	46bd      	mov	sp, r7
    913e:	bd80      	pop	{r7, pc}
    9140:	40004c00 	.word	0x40004c00
    9144:	40023800 	.word	0x40023800
    9148:	40020800 	.word	0x40020800

0000914c <_kill>:
{
	return 1;
}

int _kill(int pid, int sig)
{
    914c:	b580      	push	{r7, lr}
    914e:	b082      	sub	sp, #8
    9150:	af00      	add	r7, sp, #0
    9152:	6078      	str	r0, [r7, #4]
    9154:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
    9156:	f001 fc4d 	bl	a9f4 <__errno>
    915a:	4602      	mov	r2, r0
    915c:	2316      	movs	r3, #22
    915e:	6013      	str	r3, [r2, #0]
	return -1;
    9160:	f04f 33ff 	mov.w	r3, #4294967295
}
    9164:	4618      	mov	r0, r3
    9166:	3708      	adds	r7, #8
    9168:	46bd      	mov	sp, r7
    916a:	bd80      	pop	{r7, pc}

0000916c <_exit>:

void _exit (int status)
{
    916c:	b580      	push	{r7, lr}
    916e:	b082      	sub	sp, #8
    9170:	af00      	add	r7, sp, #0
    9172:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
    9174:	f04f 31ff 	mov.w	r1, #4294967295
    9178:	6878      	ldr	r0, [r7, #4]
    917a:	f7ff ffe7 	bl	914c <_kill>
	while (1) {}		/* Make sure we hang here */
    917e:	e7fe      	b.n	917e <_exit+0x12>

00009180 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
    9180:	b580      	push	{r7, lr}
    9182:	b084      	sub	sp, #16
    9184:	af00      	add	r7, sp, #0
    9186:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
    9188:	4b11      	ldr	r3, [pc, #68]	; (91d0 <_sbrk+0x50>)
    918a:	681b      	ldr	r3, [r3, #0]
    918c:	2b00      	cmp	r3, #0
    918e:	d102      	bne.n	9196 <_sbrk+0x16>
		heap_end = &end;
    9190:	4b0f      	ldr	r3, [pc, #60]	; (91d0 <_sbrk+0x50>)
    9192:	4a10      	ldr	r2, [pc, #64]	; (91d4 <_sbrk+0x54>)
    9194:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
    9196:	4b0e      	ldr	r3, [pc, #56]	; (91d0 <_sbrk+0x50>)
    9198:	681b      	ldr	r3, [r3, #0]
    919a:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
    919c:	4b0c      	ldr	r3, [pc, #48]	; (91d0 <_sbrk+0x50>)
    919e:	681a      	ldr	r2, [r3, #0]
    91a0:	687b      	ldr	r3, [r7, #4]
    91a2:	4413      	add	r3, r2
    91a4:	466a      	mov	r2, sp
    91a6:	4293      	cmp	r3, r2
    91a8:	d907      	bls.n	91ba <_sbrk+0x3a>
	{
		errno = ENOMEM;
    91aa:	f001 fc23 	bl	a9f4 <__errno>
    91ae:	4602      	mov	r2, r0
    91b0:	230c      	movs	r3, #12
    91b2:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
    91b4:	f04f 33ff 	mov.w	r3, #4294967295
    91b8:	e006      	b.n	91c8 <_sbrk+0x48>
	}

	heap_end += incr;
    91ba:	4b05      	ldr	r3, [pc, #20]	; (91d0 <_sbrk+0x50>)
    91bc:	681a      	ldr	r2, [r3, #0]
    91be:	687b      	ldr	r3, [r7, #4]
    91c0:	4413      	add	r3, r2
    91c2:	4a03      	ldr	r2, [pc, #12]	; (91d0 <_sbrk+0x50>)
    91c4:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
    91c6:	68fb      	ldr	r3, [r7, #12]
}
    91c8:	4618      	mov	r0, r3
    91ca:	3710      	adds	r7, #16
    91cc:	46bd      	mov	sp, r7
    91ce:	bd80      	pop	{r7, pc}
    91d0:	0001f1c8 	.word	0x0001f1c8
    91d4:	0001f21c 	.word	0x0001f21c

000091d8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
    91d8:	b580      	push	{r7, lr}
    91da:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
    91dc:	4b0e      	ldr	r3, [pc, #56]	; (9218 <HAL_Init+0x40>)
    91de:	681b      	ldr	r3, [r3, #0]
    91e0:	4a0d      	ldr	r2, [pc, #52]	; (9218 <HAL_Init+0x40>)
    91e2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    91e6:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
    91e8:	4b0b      	ldr	r3, [pc, #44]	; (9218 <HAL_Init+0x40>)
    91ea:	681b      	ldr	r3, [r3, #0]
    91ec:	4a0a      	ldr	r2, [pc, #40]	; (9218 <HAL_Init+0x40>)
    91ee:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
    91f2:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
    91f4:	4b08      	ldr	r3, [pc, #32]	; (9218 <HAL_Init+0x40>)
    91f6:	681b      	ldr	r3, [r3, #0]
    91f8:	4a07      	ldr	r2, [pc, #28]	; (9218 <HAL_Init+0x40>)
    91fa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    91fe:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
    9200:	2003      	movs	r0, #3
    9202:	f000 f91b 	bl	943c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
    9206:	2000      	movs	r0, #0
    9208:	f000 f808 	bl	921c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
    920c:	f7ff ff2e 	bl	906c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
    9210:	2300      	movs	r3, #0
}
    9212:	4618      	mov	r0, r3
    9214:	bd80      	pop	{r7, pc}
    9216:	bf00      	nop
    9218:	40023c00 	.word	0x40023c00

0000921c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
    921c:	b580      	push	{r7, lr}
    921e:	b082      	sub	sp, #8
    9220:	af00      	add	r7, sp, #0
    9222:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
    9224:	4b12      	ldr	r3, [pc, #72]	; (9270 <HAL_InitTick+0x54>)
    9226:	681a      	ldr	r2, [r3, #0]
    9228:	4b12      	ldr	r3, [pc, #72]	; (9274 <HAL_InitTick+0x58>)
    922a:	781b      	ldrb	r3, [r3, #0]
    922c:	4619      	mov	r1, r3
    922e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    9232:	fbb3 f3f1 	udiv	r3, r3, r1
    9236:	fbb2 f3f3 	udiv	r3, r2, r3
    923a:	4618      	mov	r0, r3
    923c:	f000 f925 	bl	948a <HAL_SYSTICK_Config>
    9240:	4603      	mov	r3, r0
    9242:	2b00      	cmp	r3, #0
    9244:	d001      	beq.n	924a <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
    9246:	2301      	movs	r3, #1
    9248:	e00e      	b.n	9268 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
    924a:	687b      	ldr	r3, [r7, #4]
    924c:	2b0f      	cmp	r3, #15
    924e:	d80a      	bhi.n	9266 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    9250:	2200      	movs	r2, #0
    9252:	6879      	ldr	r1, [r7, #4]
    9254:	f04f 30ff 	mov.w	r0, #4294967295
    9258:	f000 f8fb 	bl	9452 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
    925c:	4a06      	ldr	r2, [pc, #24]	; (9278 <HAL_InitTick+0x5c>)
    925e:	687b      	ldr	r3, [r7, #4]
    9260:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
    9262:	2300      	movs	r3, #0
    9264:	e000      	b.n	9268 <HAL_InitTick+0x4c>
    return HAL_ERROR;
    9266:	2301      	movs	r3, #1
}
    9268:	4618      	mov	r0, r3
    926a:	3708      	adds	r7, #8
    926c:	46bd      	mov	sp, r7
    926e:	bd80      	pop	{r7, pc}
    9270:	0001efcc 	.word	0x0001efcc
    9274:	0001efd4 	.word	0x0001efd4
    9278:	0001efd0 	.word	0x0001efd0

0000927c <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
    927c:	b480      	push	{r7}
    927e:	af00      	add	r7, sp, #0
  return uwTick;
    9280:	4b03      	ldr	r3, [pc, #12]	; (9290 <HAL_GetTick+0x14>)
    9282:	681b      	ldr	r3, [r3, #0]
}
    9284:	4618      	mov	r0, r3
    9286:	46bd      	mov	sp, r7
    9288:	f85d 7b04 	ldr.w	r7, [sp], #4
    928c:	4770      	bx	lr
    928e:	bf00      	nop
    9290:	0001f214 	.word	0x0001f214

00009294 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
    9294:	b580      	push	{r7, lr}
    9296:	b084      	sub	sp, #16
    9298:	af00      	add	r7, sp, #0
    929a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
    929c:	f7ff ffee 	bl	927c <HAL_GetTick>
    92a0:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
    92a2:	687b      	ldr	r3, [r7, #4]
    92a4:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
    92a6:	68fb      	ldr	r3, [r7, #12]
    92a8:	f1b3 3fff 	cmp.w	r3, #4294967295
    92ac:	d005      	beq.n	92ba <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
    92ae:	4b09      	ldr	r3, [pc, #36]	; (92d4 <HAL_Delay+0x40>)
    92b0:	781b      	ldrb	r3, [r3, #0]
    92b2:	461a      	mov	r2, r3
    92b4:	68fb      	ldr	r3, [r7, #12]
    92b6:	4413      	add	r3, r2
    92b8:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
    92ba:	bf00      	nop
    92bc:	f7ff ffde 	bl	927c <HAL_GetTick>
    92c0:	4602      	mov	r2, r0
    92c2:	68bb      	ldr	r3, [r7, #8]
    92c4:	1ad3      	subs	r3, r2, r3
    92c6:	68fa      	ldr	r2, [r7, #12]
    92c8:	429a      	cmp	r2, r3
    92ca:	d8f7      	bhi.n	92bc <HAL_Delay+0x28>
  {
  }
}
    92cc:	bf00      	nop
    92ce:	3710      	adds	r7, #16
    92d0:	46bd      	mov	sp, r7
    92d2:	bd80      	pop	{r7, pc}
    92d4:	0001efd4 	.word	0x0001efd4

000092d8 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
    92d8:	b480      	push	{r7}
    92da:	b085      	sub	sp, #20
    92dc:	af00      	add	r7, sp, #0
    92de:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
    92e0:	687b      	ldr	r3, [r7, #4]
    92e2:	f003 0307 	and.w	r3, r3, #7
    92e6:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
    92e8:	4b0c      	ldr	r3, [pc, #48]	; (931c <__NVIC_SetPriorityGrouping+0x44>)
    92ea:	68db      	ldr	r3, [r3, #12]
    92ec:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
    92ee:	68ba      	ldr	r2, [r7, #8]
    92f0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
    92f4:	4013      	ands	r3, r2
    92f6:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
    92f8:	68fb      	ldr	r3, [r7, #12]
    92fa:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
    92fc:	68bb      	ldr	r3, [r7, #8]
    92fe:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
    9300:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
    9304:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
    9308:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
    930a:	4a04      	ldr	r2, [pc, #16]	; (931c <__NVIC_SetPriorityGrouping+0x44>)
    930c:	68bb      	ldr	r3, [r7, #8]
    930e:	60d3      	str	r3, [r2, #12]
}
    9310:	bf00      	nop
    9312:	3714      	adds	r7, #20
    9314:	46bd      	mov	sp, r7
    9316:	f85d 7b04 	ldr.w	r7, [sp], #4
    931a:	4770      	bx	lr
    931c:	e000ed00 	.word	0xe000ed00

00009320 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
    9320:	b480      	push	{r7}
    9322:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
    9324:	4b04      	ldr	r3, [pc, #16]	; (9338 <__NVIC_GetPriorityGrouping+0x18>)
    9326:	68db      	ldr	r3, [r3, #12]
    9328:	0a1b      	lsrs	r3, r3, #8
    932a:	f003 0307 	and.w	r3, r3, #7
}
    932e:	4618      	mov	r0, r3
    9330:	46bd      	mov	sp, r7
    9332:	f85d 7b04 	ldr.w	r7, [sp], #4
    9336:	4770      	bx	lr
    9338:	e000ed00 	.word	0xe000ed00

0000933c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
    933c:	b480      	push	{r7}
    933e:	b083      	sub	sp, #12
    9340:	af00      	add	r7, sp, #0
    9342:	4603      	mov	r3, r0
    9344:	6039      	str	r1, [r7, #0]
    9346:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
    9348:	f997 3007 	ldrsb.w	r3, [r7, #7]
    934c:	2b00      	cmp	r3, #0
    934e:	db0a      	blt.n	9366 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
    9350:	683b      	ldr	r3, [r7, #0]
    9352:	b2da      	uxtb	r2, r3
    9354:	490c      	ldr	r1, [pc, #48]	; (9388 <__NVIC_SetPriority+0x4c>)
    9356:	f997 3007 	ldrsb.w	r3, [r7, #7]
    935a:	0112      	lsls	r2, r2, #4
    935c:	b2d2      	uxtb	r2, r2
    935e:	440b      	add	r3, r1
    9360:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
    9364:	e00a      	b.n	937c <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
    9366:	683b      	ldr	r3, [r7, #0]
    9368:	b2da      	uxtb	r2, r3
    936a:	4908      	ldr	r1, [pc, #32]	; (938c <__NVIC_SetPriority+0x50>)
    936c:	79fb      	ldrb	r3, [r7, #7]
    936e:	f003 030f 	and.w	r3, r3, #15
    9372:	3b04      	subs	r3, #4
    9374:	0112      	lsls	r2, r2, #4
    9376:	b2d2      	uxtb	r2, r2
    9378:	440b      	add	r3, r1
    937a:	761a      	strb	r2, [r3, #24]
}
    937c:	bf00      	nop
    937e:	370c      	adds	r7, #12
    9380:	46bd      	mov	sp, r7
    9382:	f85d 7b04 	ldr.w	r7, [sp], #4
    9386:	4770      	bx	lr
    9388:	e000e100 	.word	0xe000e100
    938c:	e000ed00 	.word	0xe000ed00

00009390 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
    9390:	b480      	push	{r7}
    9392:	b089      	sub	sp, #36	; 0x24
    9394:	af00      	add	r7, sp, #0
    9396:	60f8      	str	r0, [r7, #12]
    9398:	60b9      	str	r1, [r7, #8]
    939a:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
    939c:	68fb      	ldr	r3, [r7, #12]
    939e:	f003 0307 	and.w	r3, r3, #7
    93a2:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
    93a4:	69fb      	ldr	r3, [r7, #28]
    93a6:	f1c3 0307 	rsb	r3, r3, #7
    93aa:	2b04      	cmp	r3, #4
    93ac:	bf28      	it	cs
    93ae:	2304      	movcs	r3, #4
    93b0:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
    93b2:	69fb      	ldr	r3, [r7, #28]
    93b4:	3304      	adds	r3, #4
    93b6:	2b06      	cmp	r3, #6
    93b8:	d902      	bls.n	93c0 <NVIC_EncodePriority+0x30>
    93ba:	69fb      	ldr	r3, [r7, #28]
    93bc:	3b03      	subs	r3, #3
    93be:	e000      	b.n	93c2 <NVIC_EncodePriority+0x32>
    93c0:	2300      	movs	r3, #0
    93c2:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
    93c4:	f04f 32ff 	mov.w	r2, #4294967295
    93c8:	69bb      	ldr	r3, [r7, #24]
    93ca:	fa02 f303 	lsl.w	r3, r2, r3
    93ce:	43da      	mvns	r2, r3
    93d0:	68bb      	ldr	r3, [r7, #8]
    93d2:	401a      	ands	r2, r3
    93d4:	697b      	ldr	r3, [r7, #20]
    93d6:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
    93d8:	f04f 31ff 	mov.w	r1, #4294967295
    93dc:	697b      	ldr	r3, [r7, #20]
    93de:	fa01 f303 	lsl.w	r3, r1, r3
    93e2:	43d9      	mvns	r1, r3
    93e4:	687b      	ldr	r3, [r7, #4]
    93e6:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
    93e8:	4313      	orrs	r3, r2
         );
}
    93ea:	4618      	mov	r0, r3
    93ec:	3724      	adds	r7, #36	; 0x24
    93ee:	46bd      	mov	sp, r7
    93f0:	f85d 7b04 	ldr.w	r7, [sp], #4
    93f4:	4770      	bx	lr
	...

000093f8 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
    93f8:	b580      	push	{r7, lr}
    93fa:	b082      	sub	sp, #8
    93fc:	af00      	add	r7, sp, #0
    93fe:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
    9400:	687b      	ldr	r3, [r7, #4]
    9402:	3b01      	subs	r3, #1
    9404:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
    9408:	d301      	bcc.n	940e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
    940a:	2301      	movs	r3, #1
    940c:	e00f      	b.n	942e <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
    940e:	4a0a      	ldr	r2, [pc, #40]	; (9438 <SysTick_Config+0x40>)
    9410:	687b      	ldr	r3, [r7, #4]
    9412:	3b01      	subs	r3, #1
    9414:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
    9416:	210f      	movs	r1, #15
    9418:	f04f 30ff 	mov.w	r0, #4294967295
    941c:	f7ff ff8e 	bl	933c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
    9420:	4b05      	ldr	r3, [pc, #20]	; (9438 <SysTick_Config+0x40>)
    9422:	2200      	movs	r2, #0
    9424:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
    9426:	4b04      	ldr	r3, [pc, #16]	; (9438 <SysTick_Config+0x40>)
    9428:	2207      	movs	r2, #7
    942a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
    942c:	2300      	movs	r3, #0
}
    942e:	4618      	mov	r0, r3
    9430:	3708      	adds	r7, #8
    9432:	46bd      	mov	sp, r7
    9434:	bd80      	pop	{r7, pc}
    9436:	bf00      	nop
    9438:	e000e010 	.word	0xe000e010

0000943c <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
    943c:	b580      	push	{r7, lr}
    943e:	b082      	sub	sp, #8
    9440:	af00      	add	r7, sp, #0
    9442:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
    9444:	6878      	ldr	r0, [r7, #4]
    9446:	f7ff ff47 	bl	92d8 <__NVIC_SetPriorityGrouping>
}
    944a:	bf00      	nop
    944c:	3708      	adds	r7, #8
    944e:	46bd      	mov	sp, r7
    9450:	bd80      	pop	{r7, pc}

00009452 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
    9452:	b580      	push	{r7, lr}
    9454:	b086      	sub	sp, #24
    9456:	af00      	add	r7, sp, #0
    9458:	4603      	mov	r3, r0
    945a:	60b9      	str	r1, [r7, #8]
    945c:	607a      	str	r2, [r7, #4]
    945e:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
    9460:	2300      	movs	r3, #0
    9462:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
    9464:	f7ff ff5c 	bl	9320 <__NVIC_GetPriorityGrouping>
    9468:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
    946a:	687a      	ldr	r2, [r7, #4]
    946c:	68b9      	ldr	r1, [r7, #8]
    946e:	6978      	ldr	r0, [r7, #20]
    9470:	f7ff ff8e 	bl	9390 <NVIC_EncodePriority>
    9474:	4602      	mov	r2, r0
    9476:	f997 300f 	ldrsb.w	r3, [r7, #15]
    947a:	4611      	mov	r1, r2
    947c:	4618      	mov	r0, r3
    947e:	f7ff ff5d 	bl	933c <__NVIC_SetPriority>
}
    9482:	bf00      	nop
    9484:	3718      	adds	r7, #24
    9486:	46bd      	mov	sp, r7
    9488:	bd80      	pop	{r7, pc}

0000948a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
    948a:	b580      	push	{r7, lr}
    948c:	b082      	sub	sp, #8
    948e:	af00      	add	r7, sp, #0
    9490:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
    9492:	6878      	ldr	r0, [r7, #4]
    9494:	f7ff ffb0 	bl	93f8 <SysTick_Config>
    9498:	4603      	mov	r3, r0
}
    949a:	4618      	mov	r0, r3
    949c:	3708      	adds	r7, #8
    949e:	46bd      	mov	sp, r7
    94a0:	bd80      	pop	{r7, pc}
	...

000094a4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
    94a4:	b480      	push	{r7}
    94a6:	b089      	sub	sp, #36	; 0x24
    94a8:	af00      	add	r7, sp, #0
    94aa:	6078      	str	r0, [r7, #4]
    94ac:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
    94ae:	2300      	movs	r3, #0
    94b0:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
    94b2:	2300      	movs	r3, #0
    94b4:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
    94b6:	2300      	movs	r3, #0
    94b8:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
    94ba:	2300      	movs	r3, #0
    94bc:	61fb      	str	r3, [r7, #28]
    94be:	e16b      	b.n	9798 <HAL_GPIO_Init+0x2f4>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    94c0:	2201      	movs	r2, #1
    94c2:	69fb      	ldr	r3, [r7, #28]
    94c4:	fa02 f303 	lsl.w	r3, r2, r3
    94c8:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
    94ca:	683b      	ldr	r3, [r7, #0]
    94cc:	681b      	ldr	r3, [r3, #0]
    94ce:	697a      	ldr	r2, [r7, #20]
    94d0:	4013      	ands	r3, r2
    94d2:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
    94d4:	693a      	ldr	r2, [r7, #16]
    94d6:	697b      	ldr	r3, [r7, #20]
    94d8:	429a      	cmp	r2, r3
    94da:	f040 815a 	bne.w	9792 <HAL_GPIO_Init+0x2ee>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
    94de:	683b      	ldr	r3, [r7, #0]
    94e0:	685b      	ldr	r3, [r3, #4]
    94e2:	2b01      	cmp	r3, #1
    94e4:	d00b      	beq.n	94fe <HAL_GPIO_Init+0x5a>
    94e6:	683b      	ldr	r3, [r7, #0]
    94e8:	685b      	ldr	r3, [r3, #4]
    94ea:	2b02      	cmp	r3, #2
    94ec:	d007      	beq.n	94fe <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
    94ee:	683b      	ldr	r3, [r7, #0]
    94f0:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
    94f2:	2b11      	cmp	r3, #17
    94f4:	d003      	beq.n	94fe <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
    94f6:	683b      	ldr	r3, [r7, #0]
    94f8:	685b      	ldr	r3, [r3, #4]
    94fa:	2b12      	cmp	r3, #18
    94fc:	d130      	bne.n	9560 <HAL_GPIO_Init+0xbc>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
    94fe:	687b      	ldr	r3, [r7, #4]
    9500:	689b      	ldr	r3, [r3, #8]
    9502:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
    9504:	69fb      	ldr	r3, [r7, #28]
    9506:	005b      	lsls	r3, r3, #1
    9508:	2203      	movs	r2, #3
    950a:	fa02 f303 	lsl.w	r3, r2, r3
    950e:	43db      	mvns	r3, r3
    9510:	69ba      	ldr	r2, [r7, #24]
    9512:	4013      	ands	r3, r2
    9514:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
    9516:	683b      	ldr	r3, [r7, #0]
    9518:	68da      	ldr	r2, [r3, #12]
    951a:	69fb      	ldr	r3, [r7, #28]
    951c:	005b      	lsls	r3, r3, #1
    951e:	fa02 f303 	lsl.w	r3, r2, r3
    9522:	69ba      	ldr	r2, [r7, #24]
    9524:	4313      	orrs	r3, r2
    9526:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
    9528:	687b      	ldr	r3, [r7, #4]
    952a:	69ba      	ldr	r2, [r7, #24]
    952c:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
    952e:	687b      	ldr	r3, [r7, #4]
    9530:	685b      	ldr	r3, [r3, #4]
    9532:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
    9534:	2201      	movs	r2, #1
    9536:	69fb      	ldr	r3, [r7, #28]
    9538:	fa02 f303 	lsl.w	r3, r2, r3
    953c:	43db      	mvns	r3, r3
    953e:	69ba      	ldr	r2, [r7, #24]
    9540:	4013      	ands	r3, r2
    9542:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
    9544:	683b      	ldr	r3, [r7, #0]
    9546:	685b      	ldr	r3, [r3, #4]
    9548:	091b      	lsrs	r3, r3, #4
    954a:	f003 0201 	and.w	r2, r3, #1
    954e:	69fb      	ldr	r3, [r7, #28]
    9550:	fa02 f303 	lsl.w	r3, r2, r3
    9554:	69ba      	ldr	r2, [r7, #24]
    9556:	4313      	orrs	r3, r2
    9558:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
    955a:	687b      	ldr	r3, [r7, #4]
    955c:	69ba      	ldr	r2, [r7, #24]
    955e:	605a      	str	r2, [r3, #4]
       }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
    9560:	687b      	ldr	r3, [r7, #4]
    9562:	68db      	ldr	r3, [r3, #12]
    9564:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
    9566:	69fb      	ldr	r3, [r7, #28]
    9568:	005b      	lsls	r3, r3, #1
    956a:	2203      	movs	r2, #3
    956c:	fa02 f303 	lsl.w	r3, r2, r3
    9570:	43db      	mvns	r3, r3
    9572:	69ba      	ldr	r2, [r7, #24]
    9574:	4013      	ands	r3, r2
    9576:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
    9578:	683b      	ldr	r3, [r7, #0]
    957a:	689a      	ldr	r2, [r3, #8]
    957c:	69fb      	ldr	r3, [r7, #28]
    957e:	005b      	lsls	r3, r3, #1
    9580:	fa02 f303 	lsl.w	r3, r2, r3
    9584:	69ba      	ldr	r2, [r7, #24]
    9586:	4313      	orrs	r3, r2
    9588:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
    958a:	687b      	ldr	r3, [r7, #4]
    958c:	69ba      	ldr	r2, [r7, #24]
    958e:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
    9590:	683b      	ldr	r3, [r7, #0]
    9592:	685b      	ldr	r3, [r3, #4]
    9594:	2b02      	cmp	r3, #2
    9596:	d003      	beq.n	95a0 <HAL_GPIO_Init+0xfc>
    9598:	683b      	ldr	r3, [r7, #0]
    959a:	685b      	ldr	r3, [r3, #4]
    959c:	2b12      	cmp	r3, #18
    959e:	d123      	bne.n	95e8 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
    95a0:	69fb      	ldr	r3, [r7, #28]
    95a2:	08da      	lsrs	r2, r3, #3
    95a4:	687b      	ldr	r3, [r7, #4]
    95a6:	3208      	adds	r2, #8
    95a8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    95ac:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
    95ae:	69fb      	ldr	r3, [r7, #28]
    95b0:	f003 0307 	and.w	r3, r3, #7
    95b4:	009b      	lsls	r3, r3, #2
    95b6:	220f      	movs	r2, #15
    95b8:	fa02 f303 	lsl.w	r3, r2, r3
    95bc:	43db      	mvns	r3, r3
    95be:	69ba      	ldr	r2, [r7, #24]
    95c0:	4013      	ands	r3, r2
    95c2:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
    95c4:	683b      	ldr	r3, [r7, #0]
    95c6:	691a      	ldr	r2, [r3, #16]
    95c8:	69fb      	ldr	r3, [r7, #28]
    95ca:	f003 0307 	and.w	r3, r3, #7
    95ce:	009b      	lsls	r3, r3, #2
    95d0:	fa02 f303 	lsl.w	r3, r2, r3
    95d4:	69ba      	ldr	r2, [r7, #24]
    95d6:	4313      	orrs	r3, r2
    95d8:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
    95da:	69fb      	ldr	r3, [r7, #28]
    95dc:	08da      	lsrs	r2, r3, #3
    95de:	687b      	ldr	r3, [r7, #4]
    95e0:	3208      	adds	r2, #8
    95e2:	69b9      	ldr	r1, [r7, #24]
    95e4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
    95e8:	687b      	ldr	r3, [r7, #4]
    95ea:	681b      	ldr	r3, [r3, #0]
    95ec:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
    95ee:	69fb      	ldr	r3, [r7, #28]
    95f0:	005b      	lsls	r3, r3, #1
    95f2:	2203      	movs	r2, #3
    95f4:	fa02 f303 	lsl.w	r3, r2, r3
    95f8:	43db      	mvns	r3, r3
    95fa:	69ba      	ldr	r2, [r7, #24]
    95fc:	4013      	ands	r3, r2
    95fe:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
    9600:	683b      	ldr	r3, [r7, #0]
    9602:	685b      	ldr	r3, [r3, #4]
    9604:	f003 0203 	and.w	r2, r3, #3
    9608:	69fb      	ldr	r3, [r7, #28]
    960a:	005b      	lsls	r3, r3, #1
    960c:	fa02 f303 	lsl.w	r3, r2, r3
    9610:	69ba      	ldr	r2, [r7, #24]
    9612:	4313      	orrs	r3, r2
    9614:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
    9616:	687b      	ldr	r3, [r7, #4]
    9618:	69ba      	ldr	r2, [r7, #24]
    961a:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
    961c:	683b      	ldr	r3, [r7, #0]
    961e:	685b      	ldr	r3, [r3, #4]
    9620:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
    9624:	2b00      	cmp	r3, #0
    9626:	f000 80b4 	beq.w	9792 <HAL_GPIO_Init+0x2ee>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
    962a:	2300      	movs	r3, #0
    962c:	60fb      	str	r3, [r7, #12]
    962e:	4b5f      	ldr	r3, [pc, #380]	; (97ac <HAL_GPIO_Init+0x308>)
    9630:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    9632:	4a5e      	ldr	r2, [pc, #376]	; (97ac <HAL_GPIO_Init+0x308>)
    9634:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
    9638:	6453      	str	r3, [r2, #68]	; 0x44
    963a:	4b5c      	ldr	r3, [pc, #368]	; (97ac <HAL_GPIO_Init+0x308>)
    963c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    963e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
    9642:	60fb      	str	r3, [r7, #12]
    9644:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
    9646:	4a5a      	ldr	r2, [pc, #360]	; (97b0 <HAL_GPIO_Init+0x30c>)
    9648:	69fb      	ldr	r3, [r7, #28]
    964a:	089b      	lsrs	r3, r3, #2
    964c:	3302      	adds	r3, #2
    964e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    9652:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
    9654:	69fb      	ldr	r3, [r7, #28]
    9656:	f003 0303 	and.w	r3, r3, #3
    965a:	009b      	lsls	r3, r3, #2
    965c:	220f      	movs	r2, #15
    965e:	fa02 f303 	lsl.w	r3, r2, r3
    9662:	43db      	mvns	r3, r3
    9664:	69ba      	ldr	r2, [r7, #24]
    9666:	4013      	ands	r3, r2
    9668:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
    966a:	687b      	ldr	r3, [r7, #4]
    966c:	4a51      	ldr	r2, [pc, #324]	; (97b4 <HAL_GPIO_Init+0x310>)
    966e:	4293      	cmp	r3, r2
    9670:	d02b      	beq.n	96ca <HAL_GPIO_Init+0x226>
    9672:	687b      	ldr	r3, [r7, #4]
    9674:	4a50      	ldr	r2, [pc, #320]	; (97b8 <HAL_GPIO_Init+0x314>)
    9676:	4293      	cmp	r3, r2
    9678:	d025      	beq.n	96c6 <HAL_GPIO_Init+0x222>
    967a:	687b      	ldr	r3, [r7, #4]
    967c:	4a4f      	ldr	r2, [pc, #316]	; (97bc <HAL_GPIO_Init+0x318>)
    967e:	4293      	cmp	r3, r2
    9680:	d01f      	beq.n	96c2 <HAL_GPIO_Init+0x21e>
    9682:	687b      	ldr	r3, [r7, #4]
    9684:	4a4e      	ldr	r2, [pc, #312]	; (97c0 <HAL_GPIO_Init+0x31c>)
    9686:	4293      	cmp	r3, r2
    9688:	d019      	beq.n	96be <HAL_GPIO_Init+0x21a>
    968a:	687b      	ldr	r3, [r7, #4]
    968c:	4a4d      	ldr	r2, [pc, #308]	; (97c4 <HAL_GPIO_Init+0x320>)
    968e:	4293      	cmp	r3, r2
    9690:	d013      	beq.n	96ba <HAL_GPIO_Init+0x216>
    9692:	687b      	ldr	r3, [r7, #4]
    9694:	4a4c      	ldr	r2, [pc, #304]	; (97c8 <HAL_GPIO_Init+0x324>)
    9696:	4293      	cmp	r3, r2
    9698:	d00d      	beq.n	96b6 <HAL_GPIO_Init+0x212>
    969a:	687b      	ldr	r3, [r7, #4]
    969c:	4a4b      	ldr	r2, [pc, #300]	; (97cc <HAL_GPIO_Init+0x328>)
    969e:	4293      	cmp	r3, r2
    96a0:	d007      	beq.n	96b2 <HAL_GPIO_Init+0x20e>
    96a2:	687b      	ldr	r3, [r7, #4]
    96a4:	4a4a      	ldr	r2, [pc, #296]	; (97d0 <HAL_GPIO_Init+0x32c>)
    96a6:	4293      	cmp	r3, r2
    96a8:	d101      	bne.n	96ae <HAL_GPIO_Init+0x20a>
    96aa:	2307      	movs	r3, #7
    96ac:	e00e      	b.n	96cc <HAL_GPIO_Init+0x228>
    96ae:	2308      	movs	r3, #8
    96b0:	e00c      	b.n	96cc <HAL_GPIO_Init+0x228>
    96b2:	2306      	movs	r3, #6
    96b4:	e00a      	b.n	96cc <HAL_GPIO_Init+0x228>
    96b6:	2305      	movs	r3, #5
    96b8:	e008      	b.n	96cc <HAL_GPIO_Init+0x228>
    96ba:	2304      	movs	r3, #4
    96bc:	e006      	b.n	96cc <HAL_GPIO_Init+0x228>
    96be:	2303      	movs	r3, #3
    96c0:	e004      	b.n	96cc <HAL_GPIO_Init+0x228>
    96c2:	2302      	movs	r3, #2
    96c4:	e002      	b.n	96cc <HAL_GPIO_Init+0x228>
    96c6:	2301      	movs	r3, #1
    96c8:	e000      	b.n	96cc <HAL_GPIO_Init+0x228>
    96ca:	2300      	movs	r3, #0
    96cc:	69fa      	ldr	r2, [r7, #28]
    96ce:	f002 0203 	and.w	r2, r2, #3
    96d2:	0092      	lsls	r2, r2, #2
    96d4:	4093      	lsls	r3, r2
    96d6:	69ba      	ldr	r2, [r7, #24]
    96d8:	4313      	orrs	r3, r2
    96da:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
    96dc:	4934      	ldr	r1, [pc, #208]	; (97b0 <HAL_GPIO_Init+0x30c>)
    96de:	69fb      	ldr	r3, [r7, #28]
    96e0:	089b      	lsrs	r3, r3, #2
    96e2:	3302      	adds	r3, #2
    96e4:	69ba      	ldr	r2, [r7, #24]
    96e6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
    96ea:	4b3a      	ldr	r3, [pc, #232]	; (97d4 <HAL_GPIO_Init+0x330>)
    96ec:	681b      	ldr	r3, [r3, #0]
    96ee:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
    96f0:	693b      	ldr	r3, [r7, #16]
    96f2:	43db      	mvns	r3, r3
    96f4:	69ba      	ldr	r2, [r7, #24]
    96f6:	4013      	ands	r3, r2
    96f8:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
    96fa:	683b      	ldr	r3, [r7, #0]
    96fc:	685b      	ldr	r3, [r3, #4]
    96fe:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
    9702:	2b00      	cmp	r3, #0
    9704:	d003      	beq.n	970e <HAL_GPIO_Init+0x26a>
        {
          temp |= iocurrent;
    9706:	69ba      	ldr	r2, [r7, #24]
    9708:	693b      	ldr	r3, [r7, #16]
    970a:	4313      	orrs	r3, r2
    970c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
    970e:	4a31      	ldr	r2, [pc, #196]	; (97d4 <HAL_GPIO_Init+0x330>)
    9710:	69bb      	ldr	r3, [r7, #24]
    9712:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
    9714:	4b2f      	ldr	r3, [pc, #188]	; (97d4 <HAL_GPIO_Init+0x330>)
    9716:	685b      	ldr	r3, [r3, #4]
    9718:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
    971a:	693b      	ldr	r3, [r7, #16]
    971c:	43db      	mvns	r3, r3
    971e:	69ba      	ldr	r2, [r7, #24]
    9720:	4013      	ands	r3, r2
    9722:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
    9724:	683b      	ldr	r3, [r7, #0]
    9726:	685b      	ldr	r3, [r3, #4]
    9728:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
    972c:	2b00      	cmp	r3, #0
    972e:	d003      	beq.n	9738 <HAL_GPIO_Init+0x294>
        {
          temp |= iocurrent;
    9730:	69ba      	ldr	r2, [r7, #24]
    9732:	693b      	ldr	r3, [r7, #16]
    9734:	4313      	orrs	r3, r2
    9736:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
    9738:	4a26      	ldr	r2, [pc, #152]	; (97d4 <HAL_GPIO_Init+0x330>)
    973a:	69bb      	ldr	r3, [r7, #24]
    973c:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
    973e:	4b25      	ldr	r3, [pc, #148]	; (97d4 <HAL_GPIO_Init+0x330>)
    9740:	689b      	ldr	r3, [r3, #8]
    9742:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
    9744:	693b      	ldr	r3, [r7, #16]
    9746:	43db      	mvns	r3, r3
    9748:	69ba      	ldr	r2, [r7, #24]
    974a:	4013      	ands	r3, r2
    974c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
    974e:	683b      	ldr	r3, [r7, #0]
    9750:	685b      	ldr	r3, [r3, #4]
    9752:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    9756:	2b00      	cmp	r3, #0
    9758:	d003      	beq.n	9762 <HAL_GPIO_Init+0x2be>
        {
          temp |= iocurrent;
    975a:	69ba      	ldr	r2, [r7, #24]
    975c:	693b      	ldr	r3, [r7, #16]
    975e:	4313      	orrs	r3, r2
    9760:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
    9762:	4a1c      	ldr	r2, [pc, #112]	; (97d4 <HAL_GPIO_Init+0x330>)
    9764:	69bb      	ldr	r3, [r7, #24]
    9766:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
    9768:	4b1a      	ldr	r3, [pc, #104]	; (97d4 <HAL_GPIO_Init+0x330>)
    976a:	68db      	ldr	r3, [r3, #12]
    976c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
    976e:	693b      	ldr	r3, [r7, #16]
    9770:	43db      	mvns	r3, r3
    9772:	69ba      	ldr	r2, [r7, #24]
    9774:	4013      	ands	r3, r2
    9776:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
    9778:	683b      	ldr	r3, [r7, #0]
    977a:	685b      	ldr	r3, [r3, #4]
    977c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
    9780:	2b00      	cmp	r3, #0
    9782:	d003      	beq.n	978c <HAL_GPIO_Init+0x2e8>
        {
          temp |= iocurrent;
    9784:	69ba      	ldr	r2, [r7, #24]
    9786:	693b      	ldr	r3, [r7, #16]
    9788:	4313      	orrs	r3, r2
    978a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
    978c:	4a11      	ldr	r2, [pc, #68]	; (97d4 <HAL_GPIO_Init+0x330>)
    978e:	69bb      	ldr	r3, [r7, #24]
    9790:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
    9792:	69fb      	ldr	r3, [r7, #28]
    9794:	3301      	adds	r3, #1
    9796:	61fb      	str	r3, [r7, #28]
    9798:	69fb      	ldr	r3, [r7, #28]
    979a:	2b0f      	cmp	r3, #15
    979c:	f67f ae90 	bls.w	94c0 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
    97a0:	bf00      	nop
    97a2:	3724      	adds	r7, #36	; 0x24
    97a4:	46bd      	mov	sp, r7
    97a6:	f85d 7b04 	ldr.w	r7, [sp], #4
    97aa:	4770      	bx	lr
    97ac:	40023800 	.word	0x40023800
    97b0:	40013800 	.word	0x40013800
    97b4:	40020000 	.word	0x40020000
    97b8:	40020400 	.word	0x40020400
    97bc:	40020800 	.word	0x40020800
    97c0:	40020c00 	.word	0x40020c00
    97c4:	40021000 	.word	0x40021000
    97c8:	40021400 	.word	0x40021400
    97cc:	40021800 	.word	0x40021800
    97d0:	40021c00 	.word	0x40021c00
    97d4:	40013c00 	.word	0x40013c00

000097d8 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
    97d8:	b580      	push	{r7, lr}
    97da:	b086      	sub	sp, #24
    97dc:	af00      	add	r7, sp, #0
    97de:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
    97e0:	687b      	ldr	r3, [r7, #4]
    97e2:	2b00      	cmp	r3, #0
    97e4:	d101      	bne.n	97ea <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
    97e6:	2301      	movs	r3, #1
    97e8:	e25b      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
    97ea:	687b      	ldr	r3, [r7, #4]
    97ec:	681b      	ldr	r3, [r3, #0]
    97ee:	f003 0301 	and.w	r3, r3, #1
    97f2:	2b00      	cmp	r3, #0
    97f4:	d075      	beq.n	98e2 <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
    97f6:	4ba3      	ldr	r3, [pc, #652]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    97f8:	689b      	ldr	r3, [r3, #8]
    97fa:	f003 030c 	and.w	r3, r3, #12
    97fe:	2b04      	cmp	r3, #4
    9800:	d00c      	beq.n	981c <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
    9802:	4ba0      	ldr	r3, [pc, #640]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9804:	689b      	ldr	r3, [r3, #8]
    9806:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
    980a:	2b08      	cmp	r3, #8
    980c:	d112      	bne.n	9834 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
    980e:	4b9d      	ldr	r3, [pc, #628]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9810:	685b      	ldr	r3, [r3, #4]
    9812:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
    9816:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
    981a:	d10b      	bne.n	9834 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
    981c:	4b99      	ldr	r3, [pc, #612]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    981e:	681b      	ldr	r3, [r3, #0]
    9820:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
    9824:	2b00      	cmp	r3, #0
    9826:	d05b      	beq.n	98e0 <HAL_RCC_OscConfig+0x108>
    9828:	687b      	ldr	r3, [r7, #4]
    982a:	685b      	ldr	r3, [r3, #4]
    982c:	2b00      	cmp	r3, #0
    982e:	d157      	bne.n	98e0 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
    9830:	2301      	movs	r3, #1
    9832:	e236      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
    9834:	687b      	ldr	r3, [r7, #4]
    9836:	685b      	ldr	r3, [r3, #4]
    9838:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
    983c:	d106      	bne.n	984c <HAL_RCC_OscConfig+0x74>
    983e:	4b91      	ldr	r3, [pc, #580]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9840:	681b      	ldr	r3, [r3, #0]
    9842:	4a90      	ldr	r2, [pc, #576]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9844:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
    9848:	6013      	str	r3, [r2, #0]
    984a:	e01d      	b.n	9888 <HAL_RCC_OscConfig+0xb0>
    984c:	687b      	ldr	r3, [r7, #4]
    984e:	685b      	ldr	r3, [r3, #4]
    9850:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
    9854:	d10c      	bne.n	9870 <HAL_RCC_OscConfig+0x98>
    9856:	4b8b      	ldr	r3, [pc, #556]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9858:	681b      	ldr	r3, [r3, #0]
    985a:	4a8a      	ldr	r2, [pc, #552]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    985c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
    9860:	6013      	str	r3, [r2, #0]
    9862:	4b88      	ldr	r3, [pc, #544]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9864:	681b      	ldr	r3, [r3, #0]
    9866:	4a87      	ldr	r2, [pc, #540]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9868:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
    986c:	6013      	str	r3, [r2, #0]
    986e:	e00b      	b.n	9888 <HAL_RCC_OscConfig+0xb0>
    9870:	4b84      	ldr	r3, [pc, #528]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9872:	681b      	ldr	r3, [r3, #0]
    9874:	4a83      	ldr	r2, [pc, #524]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9876:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
    987a:	6013      	str	r3, [r2, #0]
    987c:	4b81      	ldr	r3, [pc, #516]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    987e:	681b      	ldr	r3, [r3, #0]
    9880:	4a80      	ldr	r2, [pc, #512]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9882:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
    9886:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
    9888:	687b      	ldr	r3, [r7, #4]
    988a:	685b      	ldr	r3, [r3, #4]
    988c:	2b00      	cmp	r3, #0
    988e:	d013      	beq.n	98b8 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
    9890:	f7ff fcf4 	bl	927c <HAL_GetTick>
    9894:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
    9896:	e008      	b.n	98aa <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
    9898:	f7ff fcf0 	bl	927c <HAL_GetTick>
    989c:	4602      	mov	r2, r0
    989e:	693b      	ldr	r3, [r7, #16]
    98a0:	1ad3      	subs	r3, r2, r3
    98a2:	2b64      	cmp	r3, #100	; 0x64
    98a4:	d901      	bls.n	98aa <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
    98a6:	2303      	movs	r3, #3
    98a8:	e1fb      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
    98aa:	4b76      	ldr	r3, [pc, #472]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    98ac:	681b      	ldr	r3, [r3, #0]
    98ae:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
    98b2:	2b00      	cmp	r3, #0
    98b4:	d0f0      	beq.n	9898 <HAL_RCC_OscConfig+0xc0>
    98b6:	e014      	b.n	98e2 <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
    98b8:	f7ff fce0 	bl	927c <HAL_GetTick>
    98bc:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
    98be:	e008      	b.n	98d2 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
    98c0:	f7ff fcdc 	bl	927c <HAL_GetTick>
    98c4:	4602      	mov	r2, r0
    98c6:	693b      	ldr	r3, [r7, #16]
    98c8:	1ad3      	subs	r3, r2, r3
    98ca:	2b64      	cmp	r3, #100	; 0x64
    98cc:	d901      	bls.n	98d2 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
    98ce:	2303      	movs	r3, #3
    98d0:	e1e7      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
    98d2:	4b6c      	ldr	r3, [pc, #432]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    98d4:	681b      	ldr	r3, [r3, #0]
    98d6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
    98da:	2b00      	cmp	r3, #0
    98dc:	d1f0      	bne.n	98c0 <HAL_RCC_OscConfig+0xe8>
    98de:	e000      	b.n	98e2 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
    98e0:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
    98e2:	687b      	ldr	r3, [r7, #4]
    98e4:	681b      	ldr	r3, [r3, #0]
    98e6:	f003 0302 	and.w	r3, r3, #2
    98ea:	2b00      	cmp	r3, #0
    98ec:	d063      	beq.n	99b6 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
    98ee:	4b65      	ldr	r3, [pc, #404]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    98f0:	689b      	ldr	r3, [r3, #8]
    98f2:	f003 030c 	and.w	r3, r3, #12
    98f6:	2b00      	cmp	r3, #0
    98f8:	d00b      	beq.n	9912 <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
    98fa:	4b62      	ldr	r3, [pc, #392]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    98fc:	689b      	ldr	r3, [r3, #8]
    98fe:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
    9902:	2b08      	cmp	r3, #8
    9904:	d11c      	bne.n	9940 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
    9906:	4b5f      	ldr	r3, [pc, #380]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9908:	685b      	ldr	r3, [r3, #4]
    990a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
    990e:	2b00      	cmp	r3, #0
    9910:	d116      	bne.n	9940 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
    9912:	4b5c      	ldr	r3, [pc, #368]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9914:	681b      	ldr	r3, [r3, #0]
    9916:	f003 0302 	and.w	r3, r3, #2
    991a:	2b00      	cmp	r3, #0
    991c:	d005      	beq.n	992a <HAL_RCC_OscConfig+0x152>
    991e:	687b      	ldr	r3, [r7, #4]
    9920:	68db      	ldr	r3, [r3, #12]
    9922:	2b01      	cmp	r3, #1
    9924:	d001      	beq.n	992a <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
    9926:	2301      	movs	r3, #1
    9928:	e1bb      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
    992a:	4b56      	ldr	r3, [pc, #344]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    992c:	681b      	ldr	r3, [r3, #0]
    992e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
    9932:	687b      	ldr	r3, [r7, #4]
    9934:	691b      	ldr	r3, [r3, #16]
    9936:	00db      	lsls	r3, r3, #3
    9938:	4952      	ldr	r1, [pc, #328]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    993a:	4313      	orrs	r3, r2
    993c:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
    993e:	e03a      	b.n	99b6 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
    9940:	687b      	ldr	r3, [r7, #4]
    9942:	68db      	ldr	r3, [r3, #12]
    9944:	2b00      	cmp	r3, #0
    9946:	d020      	beq.n	998a <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
    9948:	4b4f      	ldr	r3, [pc, #316]	; (9a88 <HAL_RCC_OscConfig+0x2b0>)
    994a:	2201      	movs	r2, #1
    994c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
    994e:	f7ff fc95 	bl	927c <HAL_GetTick>
    9952:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
    9954:	e008      	b.n	9968 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
    9956:	f7ff fc91 	bl	927c <HAL_GetTick>
    995a:	4602      	mov	r2, r0
    995c:	693b      	ldr	r3, [r7, #16]
    995e:	1ad3      	subs	r3, r2, r3
    9960:	2b02      	cmp	r3, #2
    9962:	d901      	bls.n	9968 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
    9964:	2303      	movs	r3, #3
    9966:	e19c      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
    9968:	4b46      	ldr	r3, [pc, #280]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    996a:	681b      	ldr	r3, [r3, #0]
    996c:	f003 0302 	and.w	r3, r3, #2
    9970:	2b00      	cmp	r3, #0
    9972:	d0f0      	beq.n	9956 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
    9974:	4b43      	ldr	r3, [pc, #268]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9976:	681b      	ldr	r3, [r3, #0]
    9978:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
    997c:	687b      	ldr	r3, [r7, #4]
    997e:	691b      	ldr	r3, [r3, #16]
    9980:	00db      	lsls	r3, r3, #3
    9982:	4940      	ldr	r1, [pc, #256]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9984:	4313      	orrs	r3, r2
    9986:	600b      	str	r3, [r1, #0]
    9988:	e015      	b.n	99b6 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
    998a:	4b3f      	ldr	r3, [pc, #252]	; (9a88 <HAL_RCC_OscConfig+0x2b0>)
    998c:	2200      	movs	r2, #0
    998e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
    9990:	f7ff fc74 	bl	927c <HAL_GetTick>
    9994:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
    9996:	e008      	b.n	99aa <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
    9998:	f7ff fc70 	bl	927c <HAL_GetTick>
    999c:	4602      	mov	r2, r0
    999e:	693b      	ldr	r3, [r7, #16]
    99a0:	1ad3      	subs	r3, r2, r3
    99a2:	2b02      	cmp	r3, #2
    99a4:	d901      	bls.n	99aa <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
    99a6:	2303      	movs	r3, #3
    99a8:	e17b      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
    99aa:	4b36      	ldr	r3, [pc, #216]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    99ac:	681b      	ldr	r3, [r3, #0]
    99ae:	f003 0302 	and.w	r3, r3, #2
    99b2:	2b00      	cmp	r3, #0
    99b4:	d1f0      	bne.n	9998 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
    99b6:	687b      	ldr	r3, [r7, #4]
    99b8:	681b      	ldr	r3, [r3, #0]
    99ba:	f003 0308 	and.w	r3, r3, #8
    99be:	2b00      	cmp	r3, #0
    99c0:	d030      	beq.n	9a24 <HAL_RCC_OscConfig+0x24c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
    99c2:	687b      	ldr	r3, [r7, #4]
    99c4:	695b      	ldr	r3, [r3, #20]
    99c6:	2b00      	cmp	r3, #0
    99c8:	d016      	beq.n	99f8 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
    99ca:	4b30      	ldr	r3, [pc, #192]	; (9a8c <HAL_RCC_OscConfig+0x2b4>)
    99cc:	2201      	movs	r2, #1
    99ce:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
    99d0:	f7ff fc54 	bl	927c <HAL_GetTick>
    99d4:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
    99d6:	e008      	b.n	99ea <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
    99d8:	f7ff fc50 	bl	927c <HAL_GetTick>
    99dc:	4602      	mov	r2, r0
    99de:	693b      	ldr	r3, [r7, #16]
    99e0:	1ad3      	subs	r3, r2, r3
    99e2:	2b02      	cmp	r3, #2
    99e4:	d901      	bls.n	99ea <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
    99e6:	2303      	movs	r3, #3
    99e8:	e15b      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
    99ea:	4b26      	ldr	r3, [pc, #152]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    99ec:	6f5b      	ldr	r3, [r3, #116]	; 0x74
    99ee:	f003 0302 	and.w	r3, r3, #2
    99f2:	2b00      	cmp	r3, #0
    99f4:	d0f0      	beq.n	99d8 <HAL_RCC_OscConfig+0x200>
    99f6:	e015      	b.n	9a24 <HAL_RCC_OscConfig+0x24c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
    99f8:	4b24      	ldr	r3, [pc, #144]	; (9a8c <HAL_RCC_OscConfig+0x2b4>)
    99fa:	2200      	movs	r2, #0
    99fc:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
    99fe:	f7ff fc3d 	bl	927c <HAL_GetTick>
    9a02:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
    9a04:	e008      	b.n	9a18 <HAL_RCC_OscConfig+0x240>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
    9a06:	f7ff fc39 	bl	927c <HAL_GetTick>
    9a0a:	4602      	mov	r2, r0
    9a0c:	693b      	ldr	r3, [r7, #16]
    9a0e:	1ad3      	subs	r3, r2, r3
    9a10:	2b02      	cmp	r3, #2
    9a12:	d901      	bls.n	9a18 <HAL_RCC_OscConfig+0x240>
        {
          return HAL_TIMEOUT;
    9a14:	2303      	movs	r3, #3
    9a16:	e144      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
    9a18:	4b1a      	ldr	r3, [pc, #104]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9a1a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
    9a1c:	f003 0302 	and.w	r3, r3, #2
    9a20:	2b00      	cmp	r3, #0
    9a22:	d1f0      	bne.n	9a06 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
    9a24:	687b      	ldr	r3, [r7, #4]
    9a26:	681b      	ldr	r3, [r3, #0]
    9a28:	f003 0304 	and.w	r3, r3, #4
    9a2c:	2b00      	cmp	r3, #0
    9a2e:	f000 80a0 	beq.w	9b72 <HAL_RCC_OscConfig+0x39a>
  {
    FlagStatus       pwrclkchanged = RESET;
    9a32:	2300      	movs	r3, #0
    9a34:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
    9a36:	4b13      	ldr	r3, [pc, #76]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9a38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    9a3a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
    9a3e:	2b00      	cmp	r3, #0
    9a40:	d10f      	bne.n	9a62 <HAL_RCC_OscConfig+0x28a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
    9a42:	2300      	movs	r3, #0
    9a44:	60bb      	str	r3, [r7, #8]
    9a46:	4b0f      	ldr	r3, [pc, #60]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9a48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    9a4a:	4a0e      	ldr	r2, [pc, #56]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9a4c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
    9a50:	6413      	str	r3, [r2, #64]	; 0x40
    9a52:	4b0c      	ldr	r3, [pc, #48]	; (9a84 <HAL_RCC_OscConfig+0x2ac>)
    9a54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    9a56:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
    9a5a:	60bb      	str	r3, [r7, #8]
    9a5c:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
    9a5e:	2301      	movs	r3, #1
    9a60:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
    9a62:	4b0b      	ldr	r3, [pc, #44]	; (9a90 <HAL_RCC_OscConfig+0x2b8>)
    9a64:	681b      	ldr	r3, [r3, #0]
    9a66:	f403 7380 	and.w	r3, r3, #256	; 0x100
    9a6a:	2b00      	cmp	r3, #0
    9a6c:	d121      	bne.n	9ab2 <HAL_RCC_OscConfig+0x2da>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
    9a6e:	4b08      	ldr	r3, [pc, #32]	; (9a90 <HAL_RCC_OscConfig+0x2b8>)
    9a70:	681b      	ldr	r3, [r3, #0]
    9a72:	4a07      	ldr	r2, [pc, #28]	; (9a90 <HAL_RCC_OscConfig+0x2b8>)
    9a74:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    9a78:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
    9a7a:	f7ff fbff 	bl	927c <HAL_GetTick>
    9a7e:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
    9a80:	e011      	b.n	9aa6 <HAL_RCC_OscConfig+0x2ce>
    9a82:	bf00      	nop
    9a84:	40023800 	.word	0x40023800
    9a88:	42470000 	.word	0x42470000
    9a8c:	42470e80 	.word	0x42470e80
    9a90:	40007000 	.word	0x40007000
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
    9a94:	f7ff fbf2 	bl	927c <HAL_GetTick>
    9a98:	4602      	mov	r2, r0
    9a9a:	693b      	ldr	r3, [r7, #16]
    9a9c:	1ad3      	subs	r3, r2, r3
    9a9e:	2b02      	cmp	r3, #2
    9aa0:	d901      	bls.n	9aa6 <HAL_RCC_OscConfig+0x2ce>
        {
          return HAL_TIMEOUT;
    9aa2:	2303      	movs	r3, #3
    9aa4:	e0fd      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
    9aa6:	4b81      	ldr	r3, [pc, #516]	; (9cac <HAL_RCC_OscConfig+0x4d4>)
    9aa8:	681b      	ldr	r3, [r3, #0]
    9aaa:	f403 7380 	and.w	r3, r3, #256	; 0x100
    9aae:	2b00      	cmp	r3, #0
    9ab0:	d0f0      	beq.n	9a94 <HAL_RCC_OscConfig+0x2bc>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
    9ab2:	687b      	ldr	r3, [r7, #4]
    9ab4:	689b      	ldr	r3, [r3, #8]
    9ab6:	2b01      	cmp	r3, #1
    9ab8:	d106      	bne.n	9ac8 <HAL_RCC_OscConfig+0x2f0>
    9aba:	4b7d      	ldr	r3, [pc, #500]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9abc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    9abe:	4a7c      	ldr	r2, [pc, #496]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9ac0:	f043 0301 	orr.w	r3, r3, #1
    9ac4:	6713      	str	r3, [r2, #112]	; 0x70
    9ac6:	e01c      	b.n	9b02 <HAL_RCC_OscConfig+0x32a>
    9ac8:	687b      	ldr	r3, [r7, #4]
    9aca:	689b      	ldr	r3, [r3, #8]
    9acc:	2b05      	cmp	r3, #5
    9ace:	d10c      	bne.n	9aea <HAL_RCC_OscConfig+0x312>
    9ad0:	4b77      	ldr	r3, [pc, #476]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9ad2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    9ad4:	4a76      	ldr	r2, [pc, #472]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9ad6:	f043 0304 	orr.w	r3, r3, #4
    9ada:	6713      	str	r3, [r2, #112]	; 0x70
    9adc:	4b74      	ldr	r3, [pc, #464]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9ade:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    9ae0:	4a73      	ldr	r2, [pc, #460]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9ae2:	f043 0301 	orr.w	r3, r3, #1
    9ae6:	6713      	str	r3, [r2, #112]	; 0x70
    9ae8:	e00b      	b.n	9b02 <HAL_RCC_OscConfig+0x32a>
    9aea:	4b71      	ldr	r3, [pc, #452]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9aec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    9aee:	4a70      	ldr	r2, [pc, #448]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9af0:	f023 0301 	bic.w	r3, r3, #1
    9af4:	6713      	str	r3, [r2, #112]	; 0x70
    9af6:	4b6e      	ldr	r3, [pc, #440]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9af8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    9afa:	4a6d      	ldr	r2, [pc, #436]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9afc:	f023 0304 	bic.w	r3, r3, #4
    9b00:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
    9b02:	687b      	ldr	r3, [r7, #4]
    9b04:	689b      	ldr	r3, [r3, #8]
    9b06:	2b00      	cmp	r3, #0
    9b08:	d015      	beq.n	9b36 <HAL_RCC_OscConfig+0x35e>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
    9b0a:	f7ff fbb7 	bl	927c <HAL_GetTick>
    9b0e:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
    9b10:	e00a      	b.n	9b28 <HAL_RCC_OscConfig+0x350>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
    9b12:	f7ff fbb3 	bl	927c <HAL_GetTick>
    9b16:	4602      	mov	r2, r0
    9b18:	693b      	ldr	r3, [r7, #16]
    9b1a:	1ad3      	subs	r3, r2, r3
    9b1c:	f241 3288 	movw	r2, #5000	; 0x1388
    9b20:	4293      	cmp	r3, r2
    9b22:	d901      	bls.n	9b28 <HAL_RCC_OscConfig+0x350>
        {
          return HAL_TIMEOUT;
    9b24:	2303      	movs	r3, #3
    9b26:	e0bc      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
    9b28:	4b61      	ldr	r3, [pc, #388]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9b2a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    9b2c:	f003 0302 	and.w	r3, r3, #2
    9b30:	2b00      	cmp	r3, #0
    9b32:	d0ee      	beq.n	9b12 <HAL_RCC_OscConfig+0x33a>
    9b34:	e014      	b.n	9b60 <HAL_RCC_OscConfig+0x388>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
    9b36:	f7ff fba1 	bl	927c <HAL_GetTick>
    9b3a:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
    9b3c:	e00a      	b.n	9b54 <HAL_RCC_OscConfig+0x37c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
    9b3e:	f7ff fb9d 	bl	927c <HAL_GetTick>
    9b42:	4602      	mov	r2, r0
    9b44:	693b      	ldr	r3, [r7, #16]
    9b46:	1ad3      	subs	r3, r2, r3
    9b48:	f241 3288 	movw	r2, #5000	; 0x1388
    9b4c:	4293      	cmp	r3, r2
    9b4e:	d901      	bls.n	9b54 <HAL_RCC_OscConfig+0x37c>
        {
          return HAL_TIMEOUT;
    9b50:	2303      	movs	r3, #3
    9b52:	e0a6      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
    9b54:	4b56      	ldr	r3, [pc, #344]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9b56:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    9b58:	f003 0302 	and.w	r3, r3, #2
    9b5c:	2b00      	cmp	r3, #0
    9b5e:	d1ee      	bne.n	9b3e <HAL_RCC_OscConfig+0x366>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
    9b60:	7dfb      	ldrb	r3, [r7, #23]
    9b62:	2b01      	cmp	r3, #1
    9b64:	d105      	bne.n	9b72 <HAL_RCC_OscConfig+0x39a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
    9b66:	4b52      	ldr	r3, [pc, #328]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9b68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    9b6a:	4a51      	ldr	r2, [pc, #324]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9b6c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
    9b70:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
    9b72:	687b      	ldr	r3, [r7, #4]
    9b74:	699b      	ldr	r3, [r3, #24]
    9b76:	2b00      	cmp	r3, #0
    9b78:	f000 8092 	beq.w	9ca0 <HAL_RCC_OscConfig+0x4c8>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
    9b7c:	4b4c      	ldr	r3, [pc, #304]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9b7e:	689b      	ldr	r3, [r3, #8]
    9b80:	f003 030c 	and.w	r3, r3, #12
    9b84:	2b08      	cmp	r3, #8
    9b86:	d05c      	beq.n	9c42 <HAL_RCC_OscConfig+0x46a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
    9b88:	687b      	ldr	r3, [r7, #4]
    9b8a:	699b      	ldr	r3, [r3, #24]
    9b8c:	2b02      	cmp	r3, #2
    9b8e:	d141      	bne.n	9c14 <HAL_RCC_OscConfig+0x43c>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
    9b90:	4b48      	ldr	r3, [pc, #288]	; (9cb4 <HAL_RCC_OscConfig+0x4dc>)
    9b92:	2200      	movs	r2, #0
    9b94:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
    9b96:	f7ff fb71 	bl	927c <HAL_GetTick>
    9b9a:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
    9b9c:	e008      	b.n	9bb0 <HAL_RCC_OscConfig+0x3d8>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
    9b9e:	f7ff fb6d 	bl	927c <HAL_GetTick>
    9ba2:	4602      	mov	r2, r0
    9ba4:	693b      	ldr	r3, [r7, #16]
    9ba6:	1ad3      	subs	r3, r2, r3
    9ba8:	2b02      	cmp	r3, #2
    9baa:	d901      	bls.n	9bb0 <HAL_RCC_OscConfig+0x3d8>
          {
            return HAL_TIMEOUT;
    9bac:	2303      	movs	r3, #3
    9bae:	e078      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
    9bb0:	4b3f      	ldr	r3, [pc, #252]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9bb2:	681b      	ldr	r3, [r3, #0]
    9bb4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
    9bb8:	2b00      	cmp	r3, #0
    9bba:	d1f0      	bne.n	9b9e <HAL_RCC_OscConfig+0x3c6>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
    9bbc:	687b      	ldr	r3, [r7, #4]
    9bbe:	69da      	ldr	r2, [r3, #28]
    9bc0:	687b      	ldr	r3, [r7, #4]
    9bc2:	6a1b      	ldr	r3, [r3, #32]
    9bc4:	431a      	orrs	r2, r3
    9bc6:	687b      	ldr	r3, [r7, #4]
    9bc8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    9bca:	019b      	lsls	r3, r3, #6
    9bcc:	431a      	orrs	r2, r3
    9bce:	687b      	ldr	r3, [r7, #4]
    9bd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    9bd2:	085b      	lsrs	r3, r3, #1
    9bd4:	3b01      	subs	r3, #1
    9bd6:	041b      	lsls	r3, r3, #16
    9bd8:	431a      	orrs	r2, r3
    9bda:	687b      	ldr	r3, [r7, #4]
    9bdc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    9bde:	061b      	lsls	r3, r3, #24
    9be0:	4933      	ldr	r1, [pc, #204]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9be2:	4313      	orrs	r3, r2
    9be4:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
    9be6:	4b33      	ldr	r3, [pc, #204]	; (9cb4 <HAL_RCC_OscConfig+0x4dc>)
    9be8:	2201      	movs	r2, #1
    9bea:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
    9bec:	f7ff fb46 	bl	927c <HAL_GetTick>
    9bf0:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
    9bf2:	e008      	b.n	9c06 <HAL_RCC_OscConfig+0x42e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
    9bf4:	f7ff fb42 	bl	927c <HAL_GetTick>
    9bf8:	4602      	mov	r2, r0
    9bfa:	693b      	ldr	r3, [r7, #16]
    9bfc:	1ad3      	subs	r3, r2, r3
    9bfe:	2b02      	cmp	r3, #2
    9c00:	d901      	bls.n	9c06 <HAL_RCC_OscConfig+0x42e>
          {
            return HAL_TIMEOUT;
    9c02:	2303      	movs	r3, #3
    9c04:	e04d      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
    9c06:	4b2a      	ldr	r3, [pc, #168]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9c08:	681b      	ldr	r3, [r3, #0]
    9c0a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
    9c0e:	2b00      	cmp	r3, #0
    9c10:	d0f0      	beq.n	9bf4 <HAL_RCC_OscConfig+0x41c>
    9c12:	e045      	b.n	9ca0 <HAL_RCC_OscConfig+0x4c8>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
    9c14:	4b27      	ldr	r3, [pc, #156]	; (9cb4 <HAL_RCC_OscConfig+0x4dc>)
    9c16:	2200      	movs	r2, #0
    9c18:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
    9c1a:	f7ff fb2f 	bl	927c <HAL_GetTick>
    9c1e:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
    9c20:	e008      	b.n	9c34 <HAL_RCC_OscConfig+0x45c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
    9c22:	f7ff fb2b 	bl	927c <HAL_GetTick>
    9c26:	4602      	mov	r2, r0
    9c28:	693b      	ldr	r3, [r7, #16]
    9c2a:	1ad3      	subs	r3, r2, r3
    9c2c:	2b02      	cmp	r3, #2
    9c2e:	d901      	bls.n	9c34 <HAL_RCC_OscConfig+0x45c>
          {
            return HAL_TIMEOUT;
    9c30:	2303      	movs	r3, #3
    9c32:	e036      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
    9c34:	4b1e      	ldr	r3, [pc, #120]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9c36:	681b      	ldr	r3, [r3, #0]
    9c38:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
    9c3c:	2b00      	cmp	r3, #0
    9c3e:	d1f0      	bne.n	9c22 <HAL_RCC_OscConfig+0x44a>
    9c40:	e02e      	b.n	9ca0 <HAL_RCC_OscConfig+0x4c8>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
    9c42:	687b      	ldr	r3, [r7, #4]
    9c44:	699b      	ldr	r3, [r3, #24]
    9c46:	2b01      	cmp	r3, #1
    9c48:	d101      	bne.n	9c4e <HAL_RCC_OscConfig+0x476>
      {
        return HAL_ERROR;
    9c4a:	2301      	movs	r3, #1
    9c4c:	e029      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
    9c4e:	4b18      	ldr	r3, [pc, #96]	; (9cb0 <HAL_RCC_OscConfig+0x4d8>)
    9c50:	685b      	ldr	r3, [r3, #4]
    9c52:	60fb      	str	r3, [r7, #12]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
    9c54:	68fb      	ldr	r3, [r7, #12]
    9c56:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
    9c5a:	687b      	ldr	r3, [r7, #4]
    9c5c:	69db      	ldr	r3, [r3, #28]
    9c5e:	429a      	cmp	r2, r3
    9c60:	d11c      	bne.n	9c9c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
    9c62:	68fb      	ldr	r3, [r7, #12]
    9c64:	f003 023f 	and.w	r2, r3, #63	; 0x3f
    9c68:	687b      	ldr	r3, [r7, #4]
    9c6a:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
    9c6c:	429a      	cmp	r2, r3
    9c6e:	d115      	bne.n	9c9c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
    9c70:	68fa      	ldr	r2, [r7, #12]
    9c72:	f647 73c0 	movw	r3, #32704	; 0x7fc0
    9c76:	4013      	ands	r3, r2
    9c78:	687a      	ldr	r2, [r7, #4]
    9c7a:	6a52      	ldr	r2, [r2, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
    9c7c:	4293      	cmp	r3, r2
    9c7e:	d10d      	bne.n	9c9c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
    9c80:	68fb      	ldr	r3, [r7, #12]
    9c82:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
    9c86:	687b      	ldr	r3, [r7, #4]
    9c88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
    9c8a:	429a      	cmp	r2, r3
    9c8c:	d106      	bne.n	9c9c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
    9c8e:	68fb      	ldr	r3, [r7, #12]
    9c90:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
    9c94:	687b      	ldr	r3, [r7, #4]
    9c96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
    9c98:	429a      	cmp	r2, r3
    9c9a:	d001      	beq.n	9ca0 <HAL_RCC_OscConfig+0x4c8>
        {
          return HAL_ERROR;
    9c9c:	2301      	movs	r3, #1
    9c9e:	e000      	b.n	9ca2 <HAL_RCC_OscConfig+0x4ca>
        }
      }
    }
  }
  return HAL_OK;
    9ca0:	2300      	movs	r3, #0
}
    9ca2:	4618      	mov	r0, r3
    9ca4:	3718      	adds	r7, #24
    9ca6:	46bd      	mov	sp, r7
    9ca8:	bd80      	pop	{r7, pc}
    9caa:	bf00      	nop
    9cac:	40007000 	.word	0x40007000
    9cb0:	40023800 	.word	0x40023800
    9cb4:	42470060 	.word	0x42470060

00009cb8 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
    9cb8:	b580      	push	{r7, lr}
    9cba:	b084      	sub	sp, #16
    9cbc:	af00      	add	r7, sp, #0
    9cbe:	6078      	str	r0, [r7, #4]
    9cc0:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
    9cc2:	687b      	ldr	r3, [r7, #4]
    9cc4:	2b00      	cmp	r3, #0
    9cc6:	d101      	bne.n	9ccc <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
    9cc8:	2301      	movs	r3, #1
    9cca:	e0cc      	b.n	9e66 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
    9ccc:	4b68      	ldr	r3, [pc, #416]	; (9e70 <HAL_RCC_ClockConfig+0x1b8>)
    9cce:	681b      	ldr	r3, [r3, #0]
    9cd0:	f003 030f 	and.w	r3, r3, #15
    9cd4:	683a      	ldr	r2, [r7, #0]
    9cd6:	429a      	cmp	r2, r3
    9cd8:	d90c      	bls.n	9cf4 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
    9cda:	4b65      	ldr	r3, [pc, #404]	; (9e70 <HAL_RCC_ClockConfig+0x1b8>)
    9cdc:	683a      	ldr	r2, [r7, #0]
    9cde:	b2d2      	uxtb	r2, r2
    9ce0:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
    9ce2:	4b63      	ldr	r3, [pc, #396]	; (9e70 <HAL_RCC_ClockConfig+0x1b8>)
    9ce4:	681b      	ldr	r3, [r3, #0]
    9ce6:	f003 030f 	and.w	r3, r3, #15
    9cea:	683a      	ldr	r2, [r7, #0]
    9cec:	429a      	cmp	r2, r3
    9cee:	d001      	beq.n	9cf4 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
    9cf0:	2301      	movs	r3, #1
    9cf2:	e0b8      	b.n	9e66 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
    9cf4:	687b      	ldr	r3, [r7, #4]
    9cf6:	681b      	ldr	r3, [r3, #0]
    9cf8:	f003 0302 	and.w	r3, r3, #2
    9cfc:	2b00      	cmp	r3, #0
    9cfe:	d020      	beq.n	9d42 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
    9d00:	687b      	ldr	r3, [r7, #4]
    9d02:	681b      	ldr	r3, [r3, #0]
    9d04:	f003 0304 	and.w	r3, r3, #4
    9d08:	2b00      	cmp	r3, #0
    9d0a:	d005      	beq.n	9d18 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
    9d0c:	4b59      	ldr	r3, [pc, #356]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9d0e:	689b      	ldr	r3, [r3, #8]
    9d10:	4a58      	ldr	r2, [pc, #352]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9d12:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
    9d16:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
    9d18:	687b      	ldr	r3, [r7, #4]
    9d1a:	681b      	ldr	r3, [r3, #0]
    9d1c:	f003 0308 	and.w	r3, r3, #8
    9d20:	2b00      	cmp	r3, #0
    9d22:	d005      	beq.n	9d30 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
    9d24:	4b53      	ldr	r3, [pc, #332]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9d26:	689b      	ldr	r3, [r3, #8]
    9d28:	4a52      	ldr	r2, [pc, #328]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9d2a:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
    9d2e:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
    9d30:	4b50      	ldr	r3, [pc, #320]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9d32:	689b      	ldr	r3, [r3, #8]
    9d34:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
    9d38:	687b      	ldr	r3, [r7, #4]
    9d3a:	689b      	ldr	r3, [r3, #8]
    9d3c:	494d      	ldr	r1, [pc, #308]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9d3e:	4313      	orrs	r3, r2
    9d40:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
    9d42:	687b      	ldr	r3, [r7, #4]
    9d44:	681b      	ldr	r3, [r3, #0]
    9d46:	f003 0301 	and.w	r3, r3, #1
    9d4a:	2b00      	cmp	r3, #0
    9d4c:	d044      	beq.n	9dd8 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
    9d4e:	687b      	ldr	r3, [r7, #4]
    9d50:	685b      	ldr	r3, [r3, #4]
    9d52:	2b01      	cmp	r3, #1
    9d54:	d107      	bne.n	9d66 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
    9d56:	4b47      	ldr	r3, [pc, #284]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9d58:	681b      	ldr	r3, [r3, #0]
    9d5a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
    9d5e:	2b00      	cmp	r3, #0
    9d60:	d119      	bne.n	9d96 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
    9d62:	2301      	movs	r3, #1
    9d64:	e07f      	b.n	9e66 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
    9d66:	687b      	ldr	r3, [r7, #4]
    9d68:	685b      	ldr	r3, [r3, #4]
    9d6a:	2b02      	cmp	r3, #2
    9d6c:	d003      	beq.n	9d76 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
    9d6e:	687b      	ldr	r3, [r7, #4]
    9d70:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
    9d72:	2b03      	cmp	r3, #3
    9d74:	d107      	bne.n	9d86 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
    9d76:	4b3f      	ldr	r3, [pc, #252]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9d78:	681b      	ldr	r3, [r3, #0]
    9d7a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
    9d7e:	2b00      	cmp	r3, #0
    9d80:	d109      	bne.n	9d96 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
    9d82:	2301      	movs	r3, #1
    9d84:	e06f      	b.n	9e66 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
    9d86:	4b3b      	ldr	r3, [pc, #236]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9d88:	681b      	ldr	r3, [r3, #0]
    9d8a:	f003 0302 	and.w	r3, r3, #2
    9d8e:	2b00      	cmp	r3, #0
    9d90:	d101      	bne.n	9d96 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
    9d92:	2301      	movs	r3, #1
    9d94:	e067      	b.n	9e66 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
    9d96:	4b37      	ldr	r3, [pc, #220]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9d98:	689b      	ldr	r3, [r3, #8]
    9d9a:	f023 0203 	bic.w	r2, r3, #3
    9d9e:	687b      	ldr	r3, [r7, #4]
    9da0:	685b      	ldr	r3, [r3, #4]
    9da2:	4934      	ldr	r1, [pc, #208]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9da4:	4313      	orrs	r3, r2
    9da6:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
    9da8:	f7ff fa68 	bl	927c <HAL_GetTick>
    9dac:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
    9dae:	e00a      	b.n	9dc6 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
    9db0:	f7ff fa64 	bl	927c <HAL_GetTick>
    9db4:	4602      	mov	r2, r0
    9db6:	68fb      	ldr	r3, [r7, #12]
    9db8:	1ad3      	subs	r3, r2, r3
    9dba:	f241 3288 	movw	r2, #5000	; 0x1388
    9dbe:	4293      	cmp	r3, r2
    9dc0:	d901      	bls.n	9dc6 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
    9dc2:	2303      	movs	r3, #3
    9dc4:	e04f      	b.n	9e66 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
    9dc6:	4b2b      	ldr	r3, [pc, #172]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9dc8:	689b      	ldr	r3, [r3, #8]
    9dca:	f003 020c 	and.w	r2, r3, #12
    9dce:	687b      	ldr	r3, [r7, #4]
    9dd0:	685b      	ldr	r3, [r3, #4]
    9dd2:	009b      	lsls	r3, r3, #2
    9dd4:	429a      	cmp	r2, r3
    9dd6:	d1eb      	bne.n	9db0 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
    9dd8:	4b25      	ldr	r3, [pc, #148]	; (9e70 <HAL_RCC_ClockConfig+0x1b8>)
    9dda:	681b      	ldr	r3, [r3, #0]
    9ddc:	f003 030f 	and.w	r3, r3, #15
    9de0:	683a      	ldr	r2, [r7, #0]
    9de2:	429a      	cmp	r2, r3
    9de4:	d20c      	bcs.n	9e00 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
    9de6:	4b22      	ldr	r3, [pc, #136]	; (9e70 <HAL_RCC_ClockConfig+0x1b8>)
    9de8:	683a      	ldr	r2, [r7, #0]
    9dea:	b2d2      	uxtb	r2, r2
    9dec:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
    9dee:	4b20      	ldr	r3, [pc, #128]	; (9e70 <HAL_RCC_ClockConfig+0x1b8>)
    9df0:	681b      	ldr	r3, [r3, #0]
    9df2:	f003 030f 	and.w	r3, r3, #15
    9df6:	683a      	ldr	r2, [r7, #0]
    9df8:	429a      	cmp	r2, r3
    9dfa:	d001      	beq.n	9e00 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
    9dfc:	2301      	movs	r3, #1
    9dfe:	e032      	b.n	9e66 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
    9e00:	687b      	ldr	r3, [r7, #4]
    9e02:	681b      	ldr	r3, [r3, #0]
    9e04:	f003 0304 	and.w	r3, r3, #4
    9e08:	2b00      	cmp	r3, #0
    9e0a:	d008      	beq.n	9e1e <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
    9e0c:	4b19      	ldr	r3, [pc, #100]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9e0e:	689b      	ldr	r3, [r3, #8]
    9e10:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
    9e14:	687b      	ldr	r3, [r7, #4]
    9e16:	68db      	ldr	r3, [r3, #12]
    9e18:	4916      	ldr	r1, [pc, #88]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9e1a:	4313      	orrs	r3, r2
    9e1c:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
    9e1e:	687b      	ldr	r3, [r7, #4]
    9e20:	681b      	ldr	r3, [r3, #0]
    9e22:	f003 0308 	and.w	r3, r3, #8
    9e26:	2b00      	cmp	r3, #0
    9e28:	d009      	beq.n	9e3e <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
    9e2a:	4b12      	ldr	r3, [pc, #72]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9e2c:	689b      	ldr	r3, [r3, #8]
    9e2e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
    9e32:	687b      	ldr	r3, [r7, #4]
    9e34:	691b      	ldr	r3, [r3, #16]
    9e36:	00db      	lsls	r3, r3, #3
    9e38:	490e      	ldr	r1, [pc, #56]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9e3a:	4313      	orrs	r3, r2
    9e3c:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
    9e3e:	f000 f821 	bl	9e84 <HAL_RCC_GetSysClockFreq>
    9e42:	4601      	mov	r1, r0
    9e44:	4b0b      	ldr	r3, [pc, #44]	; (9e74 <HAL_RCC_ClockConfig+0x1bc>)
    9e46:	689b      	ldr	r3, [r3, #8]
    9e48:	091b      	lsrs	r3, r3, #4
    9e4a:	f003 030f 	and.w	r3, r3, #15
    9e4e:	4a0a      	ldr	r2, [pc, #40]	; (9e78 <HAL_RCC_ClockConfig+0x1c0>)
    9e50:	5cd3      	ldrb	r3, [r2, r3]
    9e52:	fa21 f303 	lsr.w	r3, r1, r3
    9e56:	4a09      	ldr	r2, [pc, #36]	; (9e7c <HAL_RCC_ClockConfig+0x1c4>)
    9e58:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
    9e5a:	4b09      	ldr	r3, [pc, #36]	; (9e80 <HAL_RCC_ClockConfig+0x1c8>)
    9e5c:	681b      	ldr	r3, [r3, #0]
    9e5e:	4618      	mov	r0, r3
    9e60:	f7ff f9dc 	bl	921c <HAL_InitTick>

  return HAL_OK;
    9e64:	2300      	movs	r3, #0
}
    9e66:	4618      	mov	r0, r3
    9e68:	3710      	adds	r7, #16
    9e6a:	46bd      	mov	sp, r7
    9e6c:	bd80      	pop	{r7, pc}
    9e6e:	bf00      	nop
    9e70:	40023c00 	.word	0x40023c00
    9e74:	40023800 	.word	0x40023800
    9e78:	0000eb60 	.word	0x0000eb60
    9e7c:	0001efcc 	.word	0x0001efcc
    9e80:	0001efd0 	.word	0x0001efd0

00009e84 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
    9e84:	b5f0      	push	{r4, r5, r6, r7, lr}
    9e86:	b085      	sub	sp, #20
    9e88:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
    9e8a:	2300      	movs	r3, #0
    9e8c:	607b      	str	r3, [r7, #4]
    9e8e:	2300      	movs	r3, #0
    9e90:	60fb      	str	r3, [r7, #12]
    9e92:	2300      	movs	r3, #0
    9e94:	603b      	str	r3, [r7, #0]
  uint32_t sysclockfreq = 0U;
    9e96:	2300      	movs	r3, #0
    9e98:	60bb      	str	r3, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
    9e9a:	4b63      	ldr	r3, [pc, #396]	; (a028 <HAL_RCC_GetSysClockFreq+0x1a4>)
    9e9c:	689b      	ldr	r3, [r3, #8]
    9e9e:	f003 030c 	and.w	r3, r3, #12
    9ea2:	2b04      	cmp	r3, #4
    9ea4:	d007      	beq.n	9eb6 <HAL_RCC_GetSysClockFreq+0x32>
    9ea6:	2b08      	cmp	r3, #8
    9ea8:	d008      	beq.n	9ebc <HAL_RCC_GetSysClockFreq+0x38>
    9eaa:	2b00      	cmp	r3, #0
    9eac:	f040 80b4 	bne.w	a018 <HAL_RCC_GetSysClockFreq+0x194>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
    9eb0:	4b5e      	ldr	r3, [pc, #376]	; (a02c <HAL_RCC_GetSysClockFreq+0x1a8>)
    9eb2:	60bb      	str	r3, [r7, #8]
       break;
    9eb4:	e0b3      	b.n	a01e <HAL_RCC_GetSysClockFreq+0x19a>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
    9eb6:	4b5e      	ldr	r3, [pc, #376]	; (a030 <HAL_RCC_GetSysClockFreq+0x1ac>)
    9eb8:	60bb      	str	r3, [r7, #8]
      break;
    9eba:	e0b0      	b.n	a01e <HAL_RCC_GetSysClockFreq+0x19a>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
    9ebc:	4b5a      	ldr	r3, [pc, #360]	; (a028 <HAL_RCC_GetSysClockFreq+0x1a4>)
    9ebe:	685b      	ldr	r3, [r3, #4]
    9ec0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
    9ec4:	607b      	str	r3, [r7, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
    9ec6:	4b58      	ldr	r3, [pc, #352]	; (a028 <HAL_RCC_GetSysClockFreq+0x1a4>)
    9ec8:	685b      	ldr	r3, [r3, #4]
    9eca:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
    9ece:	2b00      	cmp	r3, #0
    9ed0:	d04a      	beq.n	9f68 <HAL_RCC_GetSysClockFreq+0xe4>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
    9ed2:	4b55      	ldr	r3, [pc, #340]	; (a028 <HAL_RCC_GetSysClockFreq+0x1a4>)
    9ed4:	685b      	ldr	r3, [r3, #4]
    9ed6:	099b      	lsrs	r3, r3, #6
    9ed8:	f04f 0400 	mov.w	r4, #0
    9edc:	f240 11ff 	movw	r1, #511	; 0x1ff
    9ee0:	f04f 0200 	mov.w	r2, #0
    9ee4:	ea03 0501 	and.w	r5, r3, r1
    9ee8:	ea04 0602 	and.w	r6, r4, r2
    9eec:	4629      	mov	r1, r5
    9eee:	4632      	mov	r2, r6
    9ef0:	f04f 0300 	mov.w	r3, #0
    9ef4:	f04f 0400 	mov.w	r4, #0
    9ef8:	0154      	lsls	r4, r2, #5
    9efa:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
    9efe:	014b      	lsls	r3, r1, #5
    9f00:	4619      	mov	r1, r3
    9f02:	4622      	mov	r2, r4
    9f04:	1b49      	subs	r1, r1, r5
    9f06:	eb62 0206 	sbc.w	r2, r2, r6
    9f0a:	f04f 0300 	mov.w	r3, #0
    9f0e:	f04f 0400 	mov.w	r4, #0
    9f12:	0194      	lsls	r4, r2, #6
    9f14:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
    9f18:	018b      	lsls	r3, r1, #6
    9f1a:	1a5b      	subs	r3, r3, r1
    9f1c:	eb64 0402 	sbc.w	r4, r4, r2
    9f20:	f04f 0100 	mov.w	r1, #0
    9f24:	f04f 0200 	mov.w	r2, #0
    9f28:	00e2      	lsls	r2, r4, #3
    9f2a:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
    9f2e:	00d9      	lsls	r1, r3, #3
    9f30:	460b      	mov	r3, r1
    9f32:	4614      	mov	r4, r2
    9f34:	195b      	adds	r3, r3, r5
    9f36:	eb44 0406 	adc.w	r4, r4, r6
    9f3a:	f04f 0100 	mov.w	r1, #0
    9f3e:	f04f 0200 	mov.w	r2, #0
    9f42:	0262      	lsls	r2, r4, #9
    9f44:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
    9f48:	0259      	lsls	r1, r3, #9
    9f4a:	460b      	mov	r3, r1
    9f4c:	4614      	mov	r4, r2
    9f4e:	4618      	mov	r0, r3
    9f50:	4621      	mov	r1, r4
    9f52:	687b      	ldr	r3, [r7, #4]
    9f54:	f04f 0400 	mov.w	r4, #0
    9f58:	461a      	mov	r2, r3
    9f5a:	4623      	mov	r3, r4
    9f5c:	f004 fc1a 	bl	e794 <__aeabi_uldivmod>
    9f60:	4603      	mov	r3, r0
    9f62:	460c      	mov	r4, r1
    9f64:	60fb      	str	r3, [r7, #12]
    9f66:	e049      	b.n	9ffc <HAL_RCC_GetSysClockFreq+0x178>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
    9f68:	4b2f      	ldr	r3, [pc, #188]	; (a028 <HAL_RCC_GetSysClockFreq+0x1a4>)
    9f6a:	685b      	ldr	r3, [r3, #4]
    9f6c:	099b      	lsrs	r3, r3, #6
    9f6e:	f04f 0400 	mov.w	r4, #0
    9f72:	f240 11ff 	movw	r1, #511	; 0x1ff
    9f76:	f04f 0200 	mov.w	r2, #0
    9f7a:	ea03 0501 	and.w	r5, r3, r1
    9f7e:	ea04 0602 	and.w	r6, r4, r2
    9f82:	4629      	mov	r1, r5
    9f84:	4632      	mov	r2, r6
    9f86:	f04f 0300 	mov.w	r3, #0
    9f8a:	f04f 0400 	mov.w	r4, #0
    9f8e:	0154      	lsls	r4, r2, #5
    9f90:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
    9f94:	014b      	lsls	r3, r1, #5
    9f96:	4619      	mov	r1, r3
    9f98:	4622      	mov	r2, r4
    9f9a:	1b49      	subs	r1, r1, r5
    9f9c:	eb62 0206 	sbc.w	r2, r2, r6
    9fa0:	f04f 0300 	mov.w	r3, #0
    9fa4:	f04f 0400 	mov.w	r4, #0
    9fa8:	0194      	lsls	r4, r2, #6
    9faa:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
    9fae:	018b      	lsls	r3, r1, #6
    9fb0:	1a5b      	subs	r3, r3, r1
    9fb2:	eb64 0402 	sbc.w	r4, r4, r2
    9fb6:	f04f 0100 	mov.w	r1, #0
    9fba:	f04f 0200 	mov.w	r2, #0
    9fbe:	00e2      	lsls	r2, r4, #3
    9fc0:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
    9fc4:	00d9      	lsls	r1, r3, #3
    9fc6:	460b      	mov	r3, r1
    9fc8:	4614      	mov	r4, r2
    9fca:	195b      	adds	r3, r3, r5
    9fcc:	eb44 0406 	adc.w	r4, r4, r6
    9fd0:	f04f 0100 	mov.w	r1, #0
    9fd4:	f04f 0200 	mov.w	r2, #0
    9fd8:	02a2      	lsls	r2, r4, #10
    9fda:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
    9fde:	0299      	lsls	r1, r3, #10
    9fe0:	460b      	mov	r3, r1
    9fe2:	4614      	mov	r4, r2
    9fe4:	4618      	mov	r0, r3
    9fe6:	4621      	mov	r1, r4
    9fe8:	687b      	ldr	r3, [r7, #4]
    9fea:	f04f 0400 	mov.w	r4, #0
    9fee:	461a      	mov	r2, r3
    9ff0:	4623      	mov	r3, r4
    9ff2:	f004 fbcf 	bl	e794 <__aeabi_uldivmod>
    9ff6:	4603      	mov	r3, r0
    9ff8:	460c      	mov	r4, r1
    9ffa:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
    9ffc:	4b0a      	ldr	r3, [pc, #40]	; (a028 <HAL_RCC_GetSysClockFreq+0x1a4>)
    9ffe:	685b      	ldr	r3, [r3, #4]
    a000:	0c1b      	lsrs	r3, r3, #16
    a002:	f003 0303 	and.w	r3, r3, #3
    a006:	3301      	adds	r3, #1
    a008:	005b      	lsls	r3, r3, #1
    a00a:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco/pllp;
    a00c:	68fa      	ldr	r2, [r7, #12]
    a00e:	683b      	ldr	r3, [r7, #0]
    a010:	fbb2 f3f3 	udiv	r3, r2, r3
    a014:	60bb      	str	r3, [r7, #8]
      break;
    a016:	e002      	b.n	a01e <HAL_RCC_GetSysClockFreq+0x19a>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
    a018:	4b04      	ldr	r3, [pc, #16]	; (a02c <HAL_RCC_GetSysClockFreq+0x1a8>)
    a01a:	60bb      	str	r3, [r7, #8]
      break;
    a01c:	bf00      	nop
    }
  }
  return sysclockfreq;
    a01e:	68bb      	ldr	r3, [r7, #8]
}
    a020:	4618      	mov	r0, r3
    a022:	3714      	adds	r7, #20
    a024:	46bd      	mov	sp, r7
    a026:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a028:	40023800 	.word	0x40023800
    a02c:	00f42400 	.word	0x00f42400
    a030:	007a1200 	.word	0x007a1200

0000a034 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
    a034:	b480      	push	{r7}
    a036:	af00      	add	r7, sp, #0
  return SystemCoreClock;
    a038:	4b03      	ldr	r3, [pc, #12]	; (a048 <HAL_RCC_GetHCLKFreq+0x14>)
    a03a:	681b      	ldr	r3, [r3, #0]
}
    a03c:	4618      	mov	r0, r3
    a03e:	46bd      	mov	sp, r7
    a040:	f85d 7b04 	ldr.w	r7, [sp], #4
    a044:	4770      	bx	lr
    a046:	bf00      	nop
    a048:	0001efcc 	.word	0x0001efcc

0000a04c <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
    a04c:	b580      	push	{r7, lr}
    a04e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
    a050:	f7ff fff0 	bl	a034 <HAL_RCC_GetHCLKFreq>
    a054:	4601      	mov	r1, r0
    a056:	4b05      	ldr	r3, [pc, #20]	; (a06c <HAL_RCC_GetPCLK1Freq+0x20>)
    a058:	689b      	ldr	r3, [r3, #8]
    a05a:	0a9b      	lsrs	r3, r3, #10
    a05c:	f003 0307 	and.w	r3, r3, #7
    a060:	4a03      	ldr	r2, [pc, #12]	; (a070 <HAL_RCC_GetPCLK1Freq+0x24>)
    a062:	5cd3      	ldrb	r3, [r2, r3]
    a064:	fa21 f303 	lsr.w	r3, r1, r3
}
    a068:	4618      	mov	r0, r3
    a06a:	bd80      	pop	{r7, pc}
    a06c:	40023800 	.word	0x40023800
    a070:	0000eb70 	.word	0x0000eb70

0000a074 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
    a074:	b580      	push	{r7, lr}
    a076:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
    a078:	f7ff ffdc 	bl	a034 <HAL_RCC_GetHCLKFreq>
    a07c:	4601      	mov	r1, r0
    a07e:	4b05      	ldr	r3, [pc, #20]	; (a094 <HAL_RCC_GetPCLK2Freq+0x20>)
    a080:	689b      	ldr	r3, [r3, #8]
    a082:	0b5b      	lsrs	r3, r3, #13
    a084:	f003 0307 	and.w	r3, r3, #7
    a088:	4a03      	ldr	r2, [pc, #12]	; (a098 <HAL_RCC_GetPCLK2Freq+0x24>)
    a08a:	5cd3      	ldrb	r3, [r2, r3]
    a08c:	fa21 f303 	lsr.w	r3, r1, r3
}
    a090:	4618      	mov	r0, r3
    a092:	bd80      	pop	{r7, pc}
    a094:	40023800 	.word	0x40023800
    a098:	0000eb70 	.word	0x0000eb70

0000a09c <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
    a09c:	b580      	push	{r7, lr}
    a09e:	b082      	sub	sp, #8
    a0a0:	af00      	add	r7, sp, #0
    a0a2:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
    a0a4:	687b      	ldr	r3, [r7, #4]
    a0a6:	2b00      	cmp	r3, #0
    a0a8:	d101      	bne.n	a0ae <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
    a0aa:	2301      	movs	r3, #1
    a0ac:	e03f      	b.n	a12e <HAL_UART_Init+0x92>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
    a0ae:	687b      	ldr	r3, [r7, #4]
    a0b0:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
    a0b4:	b2db      	uxtb	r3, r3
    a0b6:	2b00      	cmp	r3, #0
    a0b8:	d106      	bne.n	a0c8 <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
    a0ba:	687b      	ldr	r3, [r7, #4]
    a0bc:	2200      	movs	r2, #0
    a0be:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
    a0c2:	6878      	ldr	r0, [r7, #4]
    a0c4:	f7fe fffa 	bl	90bc <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
    a0c8:	687b      	ldr	r3, [r7, #4]
    a0ca:	2224      	movs	r2, #36	; 0x24
    a0cc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
    a0d0:	687b      	ldr	r3, [r7, #4]
    a0d2:	681b      	ldr	r3, [r3, #0]
    a0d4:	68da      	ldr	r2, [r3, #12]
    a0d6:	687b      	ldr	r3, [r7, #4]
    a0d8:	681b      	ldr	r3, [r3, #0]
    a0da:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
    a0de:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
    a0e0:	6878      	ldr	r0, [r7, #4]
    a0e2:	f000 f90b 	bl	a2fc <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
    a0e6:	687b      	ldr	r3, [r7, #4]
    a0e8:	681b      	ldr	r3, [r3, #0]
    a0ea:	691a      	ldr	r2, [r3, #16]
    a0ec:	687b      	ldr	r3, [r7, #4]
    a0ee:	681b      	ldr	r3, [r3, #0]
    a0f0:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
    a0f4:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
    a0f6:	687b      	ldr	r3, [r7, #4]
    a0f8:	681b      	ldr	r3, [r3, #0]
    a0fa:	695a      	ldr	r2, [r3, #20]
    a0fc:	687b      	ldr	r3, [r7, #4]
    a0fe:	681b      	ldr	r3, [r3, #0]
    a100:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
    a104:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
    a106:	687b      	ldr	r3, [r7, #4]
    a108:	681b      	ldr	r3, [r3, #0]
    a10a:	68da      	ldr	r2, [r3, #12]
    a10c:	687b      	ldr	r3, [r7, #4]
    a10e:	681b      	ldr	r3, [r3, #0]
    a110:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
    a114:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
    a116:	687b      	ldr	r3, [r7, #4]
    a118:	2200      	movs	r2, #0
    a11a:	63da      	str	r2, [r3, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
    a11c:	687b      	ldr	r3, [r7, #4]
    a11e:	2220      	movs	r2, #32
    a120:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
    a124:	687b      	ldr	r3, [r7, #4]
    a126:	2220      	movs	r2, #32
    a128:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

  return HAL_OK;
    a12c:	2300      	movs	r3, #0
}
    a12e:	4618      	mov	r0, r3
    a130:	3708      	adds	r7, #8
    a132:	46bd      	mov	sp, r7
    a134:	bd80      	pop	{r7, pc}

0000a136 <HAL_UART_Transmit>:
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
    a136:	b580      	push	{r7, lr}
    a138:	b088      	sub	sp, #32
    a13a:	af02      	add	r7, sp, #8
    a13c:	60f8      	str	r0, [r7, #12]
    a13e:	60b9      	str	r1, [r7, #8]
    a140:	603b      	str	r3, [r7, #0]
    a142:	4613      	mov	r3, r2
    a144:	80fb      	strh	r3, [r7, #6]
  uint16_t *tmp;
  uint32_t tickstart = 0U;
    a146:	2300      	movs	r3, #0
    a148:	617b      	str	r3, [r7, #20]

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
    a14a:	68fb      	ldr	r3, [r7, #12]
    a14c:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
    a150:	b2db      	uxtb	r3, r3
    a152:	2b20      	cmp	r3, #32
    a154:	f040 8083 	bne.w	a25e <HAL_UART_Transmit+0x128>
  {
    if ((pData == NULL) || (Size == 0U))
    a158:	68bb      	ldr	r3, [r7, #8]
    a15a:	2b00      	cmp	r3, #0
    a15c:	d002      	beq.n	a164 <HAL_UART_Transmit+0x2e>
    a15e:	88fb      	ldrh	r3, [r7, #6]
    a160:	2b00      	cmp	r3, #0
    a162:	d101      	bne.n	a168 <HAL_UART_Transmit+0x32>
    {
      return  HAL_ERROR;
    a164:	2301      	movs	r3, #1
    a166:	e07b      	b.n	a260 <HAL_UART_Transmit+0x12a>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
    a168:	68fb      	ldr	r3, [r7, #12]
    a16a:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
    a16e:	2b01      	cmp	r3, #1
    a170:	d101      	bne.n	a176 <HAL_UART_Transmit+0x40>
    a172:	2302      	movs	r3, #2
    a174:	e074      	b.n	a260 <HAL_UART_Transmit+0x12a>
    a176:	68fb      	ldr	r3, [r7, #12]
    a178:	2201      	movs	r2, #1
    a17a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    huart->ErrorCode = HAL_UART_ERROR_NONE;
    a17e:	68fb      	ldr	r3, [r7, #12]
    a180:	2200      	movs	r2, #0
    a182:	63da      	str	r2, [r3, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
    a184:	68fb      	ldr	r3, [r7, #12]
    a186:	2221      	movs	r2, #33	; 0x21
    a188:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    /* Init tickstart for timeout managment */
    tickstart = HAL_GetTick();
    a18c:	f7ff f876 	bl	927c <HAL_GetTick>
    a190:	6178      	str	r0, [r7, #20]

    huart->TxXferSize = Size;
    a192:	68fb      	ldr	r3, [r7, #12]
    a194:	88fa      	ldrh	r2, [r7, #6]
    a196:	849a      	strh	r2, [r3, #36]	; 0x24
    huart->TxXferCount = Size;
    a198:	68fb      	ldr	r3, [r7, #12]
    a19a:	88fa      	ldrh	r2, [r7, #6]
    a19c:	84da      	strh	r2, [r3, #38]	; 0x26

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
    a19e:	68fb      	ldr	r3, [r7, #12]
    a1a0:	2200      	movs	r2, #0
    a1a2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    while (huart->TxXferCount > 0U)
    a1a6:	e042      	b.n	a22e <HAL_UART_Transmit+0xf8>
    {
      huart->TxXferCount--;
    a1a8:	68fb      	ldr	r3, [r7, #12]
    a1aa:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
    a1ac:	b29b      	uxth	r3, r3
    a1ae:	3b01      	subs	r3, #1
    a1b0:	b29a      	uxth	r2, r3
    a1b2:	68fb      	ldr	r3, [r7, #12]
    a1b4:	84da      	strh	r2, [r3, #38]	; 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
    a1b6:	68fb      	ldr	r3, [r7, #12]
    a1b8:	689b      	ldr	r3, [r3, #8]
    a1ba:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    a1be:	d122      	bne.n	a206 <HAL_UART_Transmit+0xd0>
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
    a1c0:	683b      	ldr	r3, [r7, #0]
    a1c2:	9300      	str	r3, [sp, #0]
    a1c4:	697b      	ldr	r3, [r7, #20]
    a1c6:	2200      	movs	r2, #0
    a1c8:	2180      	movs	r1, #128	; 0x80
    a1ca:	68f8      	ldr	r0, [r7, #12]
    a1cc:	f000 f84c 	bl	a268 <UART_WaitOnFlagUntilTimeout>
    a1d0:	4603      	mov	r3, r0
    a1d2:	2b00      	cmp	r3, #0
    a1d4:	d001      	beq.n	a1da <HAL_UART_Transmit+0xa4>
        {
          return HAL_TIMEOUT;
    a1d6:	2303      	movs	r3, #3
    a1d8:	e042      	b.n	a260 <HAL_UART_Transmit+0x12a>
        }
        tmp = (uint16_t *) pData;
    a1da:	68bb      	ldr	r3, [r7, #8]
    a1dc:	613b      	str	r3, [r7, #16]
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
    a1de:	693b      	ldr	r3, [r7, #16]
    a1e0:	881b      	ldrh	r3, [r3, #0]
    a1e2:	461a      	mov	r2, r3
    a1e4:	68fb      	ldr	r3, [r7, #12]
    a1e6:	681b      	ldr	r3, [r3, #0]
    a1e8:	f3c2 0208 	ubfx	r2, r2, #0, #9
    a1ec:	605a      	str	r2, [r3, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
    a1ee:	68fb      	ldr	r3, [r7, #12]
    a1f0:	691b      	ldr	r3, [r3, #16]
    a1f2:	2b00      	cmp	r3, #0
    a1f4:	d103      	bne.n	a1fe <HAL_UART_Transmit+0xc8>
        {
          pData += 2U;
    a1f6:	68bb      	ldr	r3, [r7, #8]
    a1f8:	3302      	adds	r3, #2
    a1fa:	60bb      	str	r3, [r7, #8]
    a1fc:	e017      	b.n	a22e <HAL_UART_Transmit+0xf8>
        }
        else
        {
          pData += 1U;
    a1fe:	68bb      	ldr	r3, [r7, #8]
    a200:	3301      	adds	r3, #1
    a202:	60bb      	str	r3, [r7, #8]
    a204:	e013      	b.n	a22e <HAL_UART_Transmit+0xf8>
        }
      }
      else
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
    a206:	683b      	ldr	r3, [r7, #0]
    a208:	9300      	str	r3, [sp, #0]
    a20a:	697b      	ldr	r3, [r7, #20]
    a20c:	2200      	movs	r2, #0
    a20e:	2180      	movs	r1, #128	; 0x80
    a210:	68f8      	ldr	r0, [r7, #12]
    a212:	f000 f829 	bl	a268 <UART_WaitOnFlagUntilTimeout>
    a216:	4603      	mov	r3, r0
    a218:	2b00      	cmp	r3, #0
    a21a:	d001      	beq.n	a220 <HAL_UART_Transmit+0xea>
        {
          return HAL_TIMEOUT;
    a21c:	2303      	movs	r3, #3
    a21e:	e01f      	b.n	a260 <HAL_UART_Transmit+0x12a>
        }
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
    a220:	68bb      	ldr	r3, [r7, #8]
    a222:	1c5a      	adds	r2, r3, #1
    a224:	60ba      	str	r2, [r7, #8]
    a226:	781a      	ldrb	r2, [r3, #0]
    a228:	68fb      	ldr	r3, [r7, #12]
    a22a:	681b      	ldr	r3, [r3, #0]
    a22c:	605a      	str	r2, [r3, #4]
    while (huart->TxXferCount > 0U)
    a22e:	68fb      	ldr	r3, [r7, #12]
    a230:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
    a232:	b29b      	uxth	r3, r3
    a234:	2b00      	cmp	r3, #0
    a236:	d1b7      	bne.n	a1a8 <HAL_UART_Transmit+0x72>
      }
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
    a238:	683b      	ldr	r3, [r7, #0]
    a23a:	9300      	str	r3, [sp, #0]
    a23c:	697b      	ldr	r3, [r7, #20]
    a23e:	2200      	movs	r2, #0
    a240:	2140      	movs	r1, #64	; 0x40
    a242:	68f8      	ldr	r0, [r7, #12]
    a244:	f000 f810 	bl	a268 <UART_WaitOnFlagUntilTimeout>
    a248:	4603      	mov	r3, r0
    a24a:	2b00      	cmp	r3, #0
    a24c:	d001      	beq.n	a252 <HAL_UART_Transmit+0x11c>
    {
      return HAL_TIMEOUT;
    a24e:	2303      	movs	r3, #3
    a250:	e006      	b.n	a260 <HAL_UART_Transmit+0x12a>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
    a252:	68fb      	ldr	r3, [r7, #12]
    a254:	2220      	movs	r2, #32
    a256:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    return HAL_OK;
    a25a:	2300      	movs	r3, #0
    a25c:	e000      	b.n	a260 <HAL_UART_Transmit+0x12a>
  }
  else
  {
    return HAL_BUSY;
    a25e:	2302      	movs	r3, #2
  }
}
    a260:	4618      	mov	r0, r3
    a262:	3718      	adds	r7, #24
    a264:	46bd      	mov	sp, r7
    a266:	bd80      	pop	{r7, pc}

0000a268 <UART_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
    a268:	b580      	push	{r7, lr}
    a26a:	b084      	sub	sp, #16
    a26c:	af00      	add	r7, sp, #0
    a26e:	60f8      	str	r0, [r7, #12]
    a270:	60b9      	str	r1, [r7, #8]
    a272:	603b      	str	r3, [r7, #0]
    a274:	4613      	mov	r3, r2
    a276:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
    a278:	e02c      	b.n	a2d4 <UART_WaitOnFlagUntilTimeout+0x6c>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
    a27a:	69bb      	ldr	r3, [r7, #24]
    a27c:	f1b3 3fff 	cmp.w	r3, #4294967295
    a280:	d028      	beq.n	a2d4 <UART_WaitOnFlagUntilTimeout+0x6c>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
    a282:	69bb      	ldr	r3, [r7, #24]
    a284:	2b00      	cmp	r3, #0
    a286:	d007      	beq.n	a298 <UART_WaitOnFlagUntilTimeout+0x30>
    a288:	f7fe fff8 	bl	927c <HAL_GetTick>
    a28c:	4602      	mov	r2, r0
    a28e:	683b      	ldr	r3, [r7, #0]
    a290:	1ad3      	subs	r3, r2, r3
    a292:	69ba      	ldr	r2, [r7, #24]
    a294:	429a      	cmp	r2, r3
    a296:	d21d      	bcs.n	a2d4 <UART_WaitOnFlagUntilTimeout+0x6c>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
    a298:	68fb      	ldr	r3, [r7, #12]
    a29a:	681b      	ldr	r3, [r3, #0]
    a29c:	68da      	ldr	r2, [r3, #12]
    a29e:	68fb      	ldr	r3, [r7, #12]
    a2a0:	681b      	ldr	r3, [r3, #0]
    a2a2:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
    a2a6:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
    a2a8:	68fb      	ldr	r3, [r7, #12]
    a2aa:	681b      	ldr	r3, [r3, #0]
    a2ac:	695a      	ldr	r2, [r3, #20]
    a2ae:	68fb      	ldr	r3, [r7, #12]
    a2b0:	681b      	ldr	r3, [r3, #0]
    a2b2:	f022 0201 	bic.w	r2, r2, #1
    a2b6:	615a      	str	r2, [r3, #20]

        huart->gState  = HAL_UART_STATE_READY;
    a2b8:	68fb      	ldr	r3, [r7, #12]
    a2ba:	2220      	movs	r2, #32
    a2bc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        huart->RxState = HAL_UART_STATE_READY;
    a2c0:	68fb      	ldr	r3, [r7, #12]
    a2c2:	2220      	movs	r2, #32
    a2c4:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

        /* Process Unlocked */
        __HAL_UNLOCK(huart);
    a2c8:	68fb      	ldr	r3, [r7, #12]
    a2ca:	2200      	movs	r2, #0
    a2cc:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

        return HAL_TIMEOUT;
    a2d0:	2303      	movs	r3, #3
    a2d2:	e00f      	b.n	a2f4 <UART_WaitOnFlagUntilTimeout+0x8c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
    a2d4:	68fb      	ldr	r3, [r7, #12]
    a2d6:	681b      	ldr	r3, [r3, #0]
    a2d8:	681a      	ldr	r2, [r3, #0]
    a2da:	68bb      	ldr	r3, [r7, #8]
    a2dc:	4013      	ands	r3, r2
    a2de:	68ba      	ldr	r2, [r7, #8]
    a2e0:	429a      	cmp	r2, r3
    a2e2:	bf0c      	ite	eq
    a2e4:	2301      	moveq	r3, #1
    a2e6:	2300      	movne	r3, #0
    a2e8:	b2db      	uxtb	r3, r3
    a2ea:	461a      	mov	r2, r3
    a2ec:	79fb      	ldrb	r3, [r7, #7]
    a2ee:	429a      	cmp	r2, r3
    a2f0:	d0c3      	beq.n	a27a <UART_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
    a2f2:	2300      	movs	r3, #0
}
    a2f4:	4618      	mov	r0, r3
    a2f6:	3710      	adds	r7, #16
    a2f8:	46bd      	mov	sp, r7
    a2fa:	bd80      	pop	{r7, pc}

0000a2fc <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
    a2fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a300:	b085      	sub	sp, #20
    a302:	af00      	add	r7, sp, #0
    a304:	6078      	str	r0, [r7, #4]
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
    a306:	687b      	ldr	r3, [r7, #4]
    a308:	681b      	ldr	r3, [r3, #0]
    a30a:	691b      	ldr	r3, [r3, #16]
    a30c:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
    a310:	687b      	ldr	r3, [r7, #4]
    a312:	68da      	ldr	r2, [r3, #12]
    a314:	687b      	ldr	r3, [r7, #4]
    a316:	681b      	ldr	r3, [r3, #0]
    a318:	430a      	orrs	r2, r1
    a31a:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
    a31c:	687b      	ldr	r3, [r7, #4]
    a31e:	689a      	ldr	r2, [r3, #8]
    a320:	687b      	ldr	r3, [r7, #4]
    a322:	691b      	ldr	r3, [r3, #16]
    a324:	431a      	orrs	r2, r3
    a326:	687b      	ldr	r3, [r7, #4]
    a328:	695b      	ldr	r3, [r3, #20]
    a32a:	431a      	orrs	r2, r3
    a32c:	687b      	ldr	r3, [r7, #4]
    a32e:	69db      	ldr	r3, [r3, #28]
    a330:	4313      	orrs	r3, r2
    a332:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(huart->Instance->CR1,
    a334:	687b      	ldr	r3, [r7, #4]
    a336:	681b      	ldr	r3, [r3, #0]
    a338:	68db      	ldr	r3, [r3, #12]
    a33a:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
    a33e:	f023 030c 	bic.w	r3, r3, #12
    a342:	687a      	ldr	r2, [r7, #4]
    a344:	6812      	ldr	r2, [r2, #0]
    a346:	68f9      	ldr	r1, [r7, #12]
    a348:	430b      	orrs	r3, r1
    a34a:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
    a34c:	687b      	ldr	r3, [r7, #4]
    a34e:	681b      	ldr	r3, [r3, #0]
    a350:	695b      	ldr	r3, [r3, #20]
    a352:	f423 7140 	bic.w	r1, r3, #768	; 0x300
    a356:	687b      	ldr	r3, [r7, #4]
    a358:	699a      	ldr	r2, [r3, #24]
    a35a:	687b      	ldr	r3, [r7, #4]
    a35c:	681b      	ldr	r3, [r3, #0]
    a35e:	430a      	orrs	r2, r1
    a360:	615a      	str	r2, [r3, #20]

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
    a362:	687b      	ldr	r3, [r7, #4]
    a364:	69db      	ldr	r3, [r3, #28]
    a366:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    a36a:	f040 818b 	bne.w	a684 <UART_SetConfig+0x388>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
    a36e:	687b      	ldr	r3, [r7, #4]
    a370:	681b      	ldr	r3, [r3, #0]
    a372:	4ac1      	ldr	r2, [pc, #772]	; (a678 <UART_SetConfig+0x37c>)
    a374:	4293      	cmp	r3, r2
    a376:	d005      	beq.n	a384 <UART_SetConfig+0x88>
    a378:	687b      	ldr	r3, [r7, #4]
    a37a:	681b      	ldr	r3, [r3, #0]
    a37c:	4abf      	ldr	r2, [pc, #764]	; (a67c <UART_SetConfig+0x380>)
    a37e:	4293      	cmp	r3, r2
    a380:	f040 80bd 	bne.w	a4fe <UART_SetConfig+0x202>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    a384:	f7ff fe76 	bl	a074 <HAL_RCC_GetPCLK2Freq>
    a388:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    a38a:	68bb      	ldr	r3, [r7, #8]
    a38c:	461d      	mov	r5, r3
    a38e:	f04f 0600 	mov.w	r6, #0
    a392:	46a8      	mov	r8, r5
    a394:	46b1      	mov	r9, r6
    a396:	eb18 0308 	adds.w	r3, r8, r8
    a39a:	eb49 0409 	adc.w	r4, r9, r9
    a39e:	4698      	mov	r8, r3
    a3a0:	46a1      	mov	r9, r4
    a3a2:	eb18 0805 	adds.w	r8, r8, r5
    a3a6:	eb49 0906 	adc.w	r9, r9, r6
    a3aa:	f04f 0100 	mov.w	r1, #0
    a3ae:	f04f 0200 	mov.w	r2, #0
    a3b2:	ea4f 02c9 	mov.w	r2, r9, lsl #3
    a3b6:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
    a3ba:	ea4f 01c8 	mov.w	r1, r8, lsl #3
    a3be:	4688      	mov	r8, r1
    a3c0:	4691      	mov	r9, r2
    a3c2:	eb18 0005 	adds.w	r0, r8, r5
    a3c6:	eb49 0106 	adc.w	r1, r9, r6
    a3ca:	687b      	ldr	r3, [r7, #4]
    a3cc:	685b      	ldr	r3, [r3, #4]
    a3ce:	461d      	mov	r5, r3
    a3d0:	f04f 0600 	mov.w	r6, #0
    a3d4:	196b      	adds	r3, r5, r5
    a3d6:	eb46 0406 	adc.w	r4, r6, r6
    a3da:	461a      	mov	r2, r3
    a3dc:	4623      	mov	r3, r4
    a3de:	f004 f9d9 	bl	e794 <__aeabi_uldivmod>
    a3e2:	4603      	mov	r3, r0
    a3e4:	460c      	mov	r4, r1
    a3e6:	461a      	mov	r2, r3
    a3e8:	4ba5      	ldr	r3, [pc, #660]	; (a680 <UART_SetConfig+0x384>)
    a3ea:	fba3 2302 	umull	r2, r3, r3, r2
    a3ee:	095b      	lsrs	r3, r3, #5
    a3f0:	ea4f 1803 	mov.w	r8, r3, lsl #4
    a3f4:	68bb      	ldr	r3, [r7, #8]
    a3f6:	461d      	mov	r5, r3
    a3f8:	f04f 0600 	mov.w	r6, #0
    a3fc:	46a9      	mov	r9, r5
    a3fe:	46b2      	mov	sl, r6
    a400:	eb19 0309 	adds.w	r3, r9, r9
    a404:	eb4a 040a 	adc.w	r4, sl, sl
    a408:	4699      	mov	r9, r3
    a40a:	46a2      	mov	sl, r4
    a40c:	eb19 0905 	adds.w	r9, r9, r5
    a410:	eb4a 0a06 	adc.w	sl, sl, r6
    a414:	f04f 0100 	mov.w	r1, #0
    a418:	f04f 0200 	mov.w	r2, #0
    a41c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
    a420:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
    a424:	ea4f 01c9 	mov.w	r1, r9, lsl #3
    a428:	4689      	mov	r9, r1
    a42a:	4692      	mov	sl, r2
    a42c:	eb19 0005 	adds.w	r0, r9, r5
    a430:	eb4a 0106 	adc.w	r1, sl, r6
    a434:	687b      	ldr	r3, [r7, #4]
    a436:	685b      	ldr	r3, [r3, #4]
    a438:	461d      	mov	r5, r3
    a43a:	f04f 0600 	mov.w	r6, #0
    a43e:	196b      	adds	r3, r5, r5
    a440:	eb46 0406 	adc.w	r4, r6, r6
    a444:	461a      	mov	r2, r3
    a446:	4623      	mov	r3, r4
    a448:	f004 f9a4 	bl	e794 <__aeabi_uldivmod>
    a44c:	4603      	mov	r3, r0
    a44e:	460c      	mov	r4, r1
    a450:	461a      	mov	r2, r3
    a452:	4b8b      	ldr	r3, [pc, #556]	; (a680 <UART_SetConfig+0x384>)
    a454:	fba3 1302 	umull	r1, r3, r3, r2
    a458:	095b      	lsrs	r3, r3, #5
    a45a:	2164      	movs	r1, #100	; 0x64
    a45c:	fb01 f303 	mul.w	r3, r1, r3
    a460:	1ad3      	subs	r3, r2, r3
    a462:	00db      	lsls	r3, r3, #3
    a464:	3332      	adds	r3, #50	; 0x32
    a466:	4a86      	ldr	r2, [pc, #536]	; (a680 <UART_SetConfig+0x384>)
    a468:	fba2 2303 	umull	r2, r3, r2, r3
    a46c:	095b      	lsrs	r3, r3, #5
    a46e:	005b      	lsls	r3, r3, #1
    a470:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
    a474:	4498      	add	r8, r3
    a476:	68bb      	ldr	r3, [r7, #8]
    a478:	461d      	mov	r5, r3
    a47a:	f04f 0600 	mov.w	r6, #0
    a47e:	46a9      	mov	r9, r5
    a480:	46b2      	mov	sl, r6
    a482:	eb19 0309 	adds.w	r3, r9, r9
    a486:	eb4a 040a 	adc.w	r4, sl, sl
    a48a:	4699      	mov	r9, r3
    a48c:	46a2      	mov	sl, r4
    a48e:	eb19 0905 	adds.w	r9, r9, r5
    a492:	eb4a 0a06 	adc.w	sl, sl, r6
    a496:	f04f 0100 	mov.w	r1, #0
    a49a:	f04f 0200 	mov.w	r2, #0
    a49e:	ea4f 02ca 	mov.w	r2, sl, lsl #3
    a4a2:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
    a4a6:	ea4f 01c9 	mov.w	r1, r9, lsl #3
    a4aa:	4689      	mov	r9, r1
    a4ac:	4692      	mov	sl, r2
    a4ae:	eb19 0005 	adds.w	r0, r9, r5
    a4b2:	eb4a 0106 	adc.w	r1, sl, r6
    a4b6:	687b      	ldr	r3, [r7, #4]
    a4b8:	685b      	ldr	r3, [r3, #4]
    a4ba:	461d      	mov	r5, r3
    a4bc:	f04f 0600 	mov.w	r6, #0
    a4c0:	196b      	adds	r3, r5, r5
    a4c2:	eb46 0406 	adc.w	r4, r6, r6
    a4c6:	461a      	mov	r2, r3
    a4c8:	4623      	mov	r3, r4
    a4ca:	f004 f963 	bl	e794 <__aeabi_uldivmod>
    a4ce:	4603      	mov	r3, r0
    a4d0:	460c      	mov	r4, r1
    a4d2:	461a      	mov	r2, r3
    a4d4:	4b6a      	ldr	r3, [pc, #424]	; (a680 <UART_SetConfig+0x384>)
    a4d6:	fba3 1302 	umull	r1, r3, r3, r2
    a4da:	095b      	lsrs	r3, r3, #5
    a4dc:	2164      	movs	r1, #100	; 0x64
    a4de:	fb01 f303 	mul.w	r3, r1, r3
    a4e2:	1ad3      	subs	r3, r2, r3
    a4e4:	00db      	lsls	r3, r3, #3
    a4e6:	3332      	adds	r3, #50	; 0x32
    a4e8:	4a65      	ldr	r2, [pc, #404]	; (a680 <UART_SetConfig+0x384>)
    a4ea:	fba2 2303 	umull	r2, r3, r2, r3
    a4ee:	095b      	lsrs	r3, r3, #5
    a4f0:	f003 0207 	and.w	r2, r3, #7
    a4f4:	687b      	ldr	r3, [r7, #4]
    a4f6:	681b      	ldr	r3, [r3, #0]
    a4f8:	4442      	add	r2, r8
    a4fa:	609a      	str	r2, [r3, #8]
    a4fc:	e26f      	b.n	a9de <UART_SetConfig+0x6e2>
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    a4fe:	f7ff fda5 	bl	a04c <HAL_RCC_GetPCLK1Freq>
    a502:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    a504:	68bb      	ldr	r3, [r7, #8]
    a506:	461d      	mov	r5, r3
    a508:	f04f 0600 	mov.w	r6, #0
    a50c:	46a8      	mov	r8, r5
    a50e:	46b1      	mov	r9, r6
    a510:	eb18 0308 	adds.w	r3, r8, r8
    a514:	eb49 0409 	adc.w	r4, r9, r9
    a518:	4698      	mov	r8, r3
    a51a:	46a1      	mov	r9, r4
    a51c:	eb18 0805 	adds.w	r8, r8, r5
    a520:	eb49 0906 	adc.w	r9, r9, r6
    a524:	f04f 0100 	mov.w	r1, #0
    a528:	f04f 0200 	mov.w	r2, #0
    a52c:	ea4f 02c9 	mov.w	r2, r9, lsl #3
    a530:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
    a534:	ea4f 01c8 	mov.w	r1, r8, lsl #3
    a538:	4688      	mov	r8, r1
    a53a:	4691      	mov	r9, r2
    a53c:	eb18 0005 	adds.w	r0, r8, r5
    a540:	eb49 0106 	adc.w	r1, r9, r6
    a544:	687b      	ldr	r3, [r7, #4]
    a546:	685b      	ldr	r3, [r3, #4]
    a548:	461d      	mov	r5, r3
    a54a:	f04f 0600 	mov.w	r6, #0
    a54e:	196b      	adds	r3, r5, r5
    a550:	eb46 0406 	adc.w	r4, r6, r6
    a554:	461a      	mov	r2, r3
    a556:	4623      	mov	r3, r4
    a558:	f004 f91c 	bl	e794 <__aeabi_uldivmod>
    a55c:	4603      	mov	r3, r0
    a55e:	460c      	mov	r4, r1
    a560:	461a      	mov	r2, r3
    a562:	4b47      	ldr	r3, [pc, #284]	; (a680 <UART_SetConfig+0x384>)
    a564:	fba3 2302 	umull	r2, r3, r3, r2
    a568:	095b      	lsrs	r3, r3, #5
    a56a:	ea4f 1803 	mov.w	r8, r3, lsl #4
    a56e:	68bb      	ldr	r3, [r7, #8]
    a570:	461d      	mov	r5, r3
    a572:	f04f 0600 	mov.w	r6, #0
    a576:	46a9      	mov	r9, r5
    a578:	46b2      	mov	sl, r6
    a57a:	eb19 0309 	adds.w	r3, r9, r9
    a57e:	eb4a 040a 	adc.w	r4, sl, sl
    a582:	4699      	mov	r9, r3
    a584:	46a2      	mov	sl, r4
    a586:	eb19 0905 	adds.w	r9, r9, r5
    a58a:	eb4a 0a06 	adc.w	sl, sl, r6
    a58e:	f04f 0100 	mov.w	r1, #0
    a592:	f04f 0200 	mov.w	r2, #0
    a596:	ea4f 02ca 	mov.w	r2, sl, lsl #3
    a59a:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
    a59e:	ea4f 01c9 	mov.w	r1, r9, lsl #3
    a5a2:	4689      	mov	r9, r1
    a5a4:	4692      	mov	sl, r2
    a5a6:	eb19 0005 	adds.w	r0, r9, r5
    a5aa:	eb4a 0106 	adc.w	r1, sl, r6
    a5ae:	687b      	ldr	r3, [r7, #4]
    a5b0:	685b      	ldr	r3, [r3, #4]
    a5b2:	461d      	mov	r5, r3
    a5b4:	f04f 0600 	mov.w	r6, #0
    a5b8:	196b      	adds	r3, r5, r5
    a5ba:	eb46 0406 	adc.w	r4, r6, r6
    a5be:	461a      	mov	r2, r3
    a5c0:	4623      	mov	r3, r4
    a5c2:	f004 f8e7 	bl	e794 <__aeabi_uldivmod>
    a5c6:	4603      	mov	r3, r0
    a5c8:	460c      	mov	r4, r1
    a5ca:	461a      	mov	r2, r3
    a5cc:	4b2c      	ldr	r3, [pc, #176]	; (a680 <UART_SetConfig+0x384>)
    a5ce:	fba3 1302 	umull	r1, r3, r3, r2
    a5d2:	095b      	lsrs	r3, r3, #5
    a5d4:	2164      	movs	r1, #100	; 0x64
    a5d6:	fb01 f303 	mul.w	r3, r1, r3
    a5da:	1ad3      	subs	r3, r2, r3
    a5dc:	00db      	lsls	r3, r3, #3
    a5de:	3332      	adds	r3, #50	; 0x32
    a5e0:	4a27      	ldr	r2, [pc, #156]	; (a680 <UART_SetConfig+0x384>)
    a5e2:	fba2 2303 	umull	r2, r3, r2, r3
    a5e6:	095b      	lsrs	r3, r3, #5
    a5e8:	005b      	lsls	r3, r3, #1
    a5ea:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
    a5ee:	4498      	add	r8, r3
    a5f0:	68bb      	ldr	r3, [r7, #8]
    a5f2:	461d      	mov	r5, r3
    a5f4:	f04f 0600 	mov.w	r6, #0
    a5f8:	46a9      	mov	r9, r5
    a5fa:	46b2      	mov	sl, r6
    a5fc:	eb19 0309 	adds.w	r3, r9, r9
    a600:	eb4a 040a 	adc.w	r4, sl, sl
    a604:	4699      	mov	r9, r3
    a606:	46a2      	mov	sl, r4
    a608:	eb19 0905 	adds.w	r9, r9, r5
    a60c:	eb4a 0a06 	adc.w	sl, sl, r6
    a610:	f04f 0100 	mov.w	r1, #0
    a614:	f04f 0200 	mov.w	r2, #0
    a618:	ea4f 02ca 	mov.w	r2, sl, lsl #3
    a61c:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
    a620:	ea4f 01c9 	mov.w	r1, r9, lsl #3
    a624:	4689      	mov	r9, r1
    a626:	4692      	mov	sl, r2
    a628:	eb19 0005 	adds.w	r0, r9, r5
    a62c:	eb4a 0106 	adc.w	r1, sl, r6
    a630:	687b      	ldr	r3, [r7, #4]
    a632:	685b      	ldr	r3, [r3, #4]
    a634:	461d      	mov	r5, r3
    a636:	f04f 0600 	mov.w	r6, #0
    a63a:	196b      	adds	r3, r5, r5
    a63c:	eb46 0406 	adc.w	r4, r6, r6
    a640:	461a      	mov	r2, r3
    a642:	4623      	mov	r3, r4
    a644:	f004 f8a6 	bl	e794 <__aeabi_uldivmod>
    a648:	4603      	mov	r3, r0
    a64a:	460c      	mov	r4, r1
    a64c:	461a      	mov	r2, r3
    a64e:	4b0c      	ldr	r3, [pc, #48]	; (a680 <UART_SetConfig+0x384>)
    a650:	fba3 1302 	umull	r1, r3, r3, r2
    a654:	095b      	lsrs	r3, r3, #5
    a656:	2164      	movs	r1, #100	; 0x64
    a658:	fb01 f303 	mul.w	r3, r1, r3
    a65c:	1ad3      	subs	r3, r2, r3
    a65e:	00db      	lsls	r3, r3, #3
    a660:	3332      	adds	r3, #50	; 0x32
    a662:	4a07      	ldr	r2, [pc, #28]	; (a680 <UART_SetConfig+0x384>)
    a664:	fba2 2303 	umull	r2, r3, r2, r3
    a668:	095b      	lsrs	r3, r3, #5
    a66a:	f003 0207 	and.w	r2, r3, #7
    a66e:	687b      	ldr	r3, [r7, #4]
    a670:	681b      	ldr	r3, [r3, #0]
    a672:	4442      	add	r2, r8
    a674:	609a      	str	r2, [r3, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
    a676:	e1b2      	b.n	a9de <UART_SetConfig+0x6e2>
    a678:	40011000 	.word	0x40011000
    a67c:	40011400 	.word	0x40011400
    a680:	51eb851f 	.word	0x51eb851f
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
    a684:	687b      	ldr	r3, [r7, #4]
    a686:	681b      	ldr	r3, [r3, #0]
    a688:	4ad7      	ldr	r2, [pc, #860]	; (a9e8 <UART_SetConfig+0x6ec>)
    a68a:	4293      	cmp	r3, r2
    a68c:	d005      	beq.n	a69a <UART_SetConfig+0x39e>
    a68e:	687b      	ldr	r3, [r7, #4]
    a690:	681b      	ldr	r3, [r3, #0]
    a692:	4ad6      	ldr	r2, [pc, #856]	; (a9ec <UART_SetConfig+0x6f0>)
    a694:	4293      	cmp	r3, r2
    a696:	f040 80d1 	bne.w	a83c <UART_SetConfig+0x540>
      pclk = HAL_RCC_GetPCLK2Freq();
    a69a:	f7ff fceb 	bl	a074 <HAL_RCC_GetPCLK2Freq>
    a69e:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    a6a0:	68bb      	ldr	r3, [r7, #8]
    a6a2:	469a      	mov	sl, r3
    a6a4:	f04f 0b00 	mov.w	fp, #0
    a6a8:	46d0      	mov	r8, sl
    a6aa:	46d9      	mov	r9, fp
    a6ac:	eb18 0308 	adds.w	r3, r8, r8
    a6b0:	eb49 0409 	adc.w	r4, r9, r9
    a6b4:	4698      	mov	r8, r3
    a6b6:	46a1      	mov	r9, r4
    a6b8:	eb18 080a 	adds.w	r8, r8, sl
    a6bc:	eb49 090b 	adc.w	r9, r9, fp
    a6c0:	f04f 0100 	mov.w	r1, #0
    a6c4:	f04f 0200 	mov.w	r2, #0
    a6c8:	ea4f 02c9 	mov.w	r2, r9, lsl #3
    a6cc:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
    a6d0:	ea4f 01c8 	mov.w	r1, r8, lsl #3
    a6d4:	4688      	mov	r8, r1
    a6d6:	4691      	mov	r9, r2
    a6d8:	eb1a 0508 	adds.w	r5, sl, r8
    a6dc:	eb4b 0609 	adc.w	r6, fp, r9
    a6e0:	687b      	ldr	r3, [r7, #4]
    a6e2:	685b      	ldr	r3, [r3, #4]
    a6e4:	4619      	mov	r1, r3
    a6e6:	f04f 0200 	mov.w	r2, #0
    a6ea:	f04f 0300 	mov.w	r3, #0
    a6ee:	f04f 0400 	mov.w	r4, #0
    a6f2:	0094      	lsls	r4, r2, #2
    a6f4:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
    a6f8:	008b      	lsls	r3, r1, #2
    a6fa:	461a      	mov	r2, r3
    a6fc:	4623      	mov	r3, r4
    a6fe:	4628      	mov	r0, r5
    a700:	4631      	mov	r1, r6
    a702:	f004 f847 	bl	e794 <__aeabi_uldivmod>
    a706:	4603      	mov	r3, r0
    a708:	460c      	mov	r4, r1
    a70a:	461a      	mov	r2, r3
    a70c:	4bb8      	ldr	r3, [pc, #736]	; (a9f0 <UART_SetConfig+0x6f4>)
    a70e:	fba3 2302 	umull	r2, r3, r3, r2
    a712:	095b      	lsrs	r3, r3, #5
    a714:	ea4f 1803 	mov.w	r8, r3, lsl #4
    a718:	68bb      	ldr	r3, [r7, #8]
    a71a:	469b      	mov	fp, r3
    a71c:	f04f 0c00 	mov.w	ip, #0
    a720:	46d9      	mov	r9, fp
    a722:	46e2      	mov	sl, ip
    a724:	eb19 0309 	adds.w	r3, r9, r9
    a728:	eb4a 040a 	adc.w	r4, sl, sl
    a72c:	4699      	mov	r9, r3
    a72e:	46a2      	mov	sl, r4
    a730:	eb19 090b 	adds.w	r9, r9, fp
    a734:	eb4a 0a0c 	adc.w	sl, sl, ip
    a738:	f04f 0100 	mov.w	r1, #0
    a73c:	f04f 0200 	mov.w	r2, #0
    a740:	ea4f 02ca 	mov.w	r2, sl, lsl #3
    a744:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
    a748:	ea4f 01c9 	mov.w	r1, r9, lsl #3
    a74c:	4689      	mov	r9, r1
    a74e:	4692      	mov	sl, r2
    a750:	eb1b 0509 	adds.w	r5, fp, r9
    a754:	eb4c 060a 	adc.w	r6, ip, sl
    a758:	687b      	ldr	r3, [r7, #4]
    a75a:	685b      	ldr	r3, [r3, #4]
    a75c:	4619      	mov	r1, r3
    a75e:	f04f 0200 	mov.w	r2, #0
    a762:	f04f 0300 	mov.w	r3, #0
    a766:	f04f 0400 	mov.w	r4, #0
    a76a:	0094      	lsls	r4, r2, #2
    a76c:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
    a770:	008b      	lsls	r3, r1, #2
    a772:	461a      	mov	r2, r3
    a774:	4623      	mov	r3, r4
    a776:	4628      	mov	r0, r5
    a778:	4631      	mov	r1, r6
    a77a:	f004 f80b 	bl	e794 <__aeabi_uldivmod>
    a77e:	4603      	mov	r3, r0
    a780:	460c      	mov	r4, r1
    a782:	461a      	mov	r2, r3
    a784:	4b9a      	ldr	r3, [pc, #616]	; (a9f0 <UART_SetConfig+0x6f4>)
    a786:	fba3 1302 	umull	r1, r3, r3, r2
    a78a:	095b      	lsrs	r3, r3, #5
    a78c:	2164      	movs	r1, #100	; 0x64
    a78e:	fb01 f303 	mul.w	r3, r1, r3
    a792:	1ad3      	subs	r3, r2, r3
    a794:	011b      	lsls	r3, r3, #4
    a796:	3332      	adds	r3, #50	; 0x32
    a798:	4a95      	ldr	r2, [pc, #596]	; (a9f0 <UART_SetConfig+0x6f4>)
    a79a:	fba2 2303 	umull	r2, r3, r2, r3
    a79e:	095b      	lsrs	r3, r3, #5
    a7a0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    a7a4:	4498      	add	r8, r3
    a7a6:	68bb      	ldr	r3, [r7, #8]
    a7a8:	469b      	mov	fp, r3
    a7aa:	f04f 0c00 	mov.w	ip, #0
    a7ae:	46d9      	mov	r9, fp
    a7b0:	46e2      	mov	sl, ip
    a7b2:	eb19 0309 	adds.w	r3, r9, r9
    a7b6:	eb4a 040a 	adc.w	r4, sl, sl
    a7ba:	4699      	mov	r9, r3
    a7bc:	46a2      	mov	sl, r4
    a7be:	eb19 090b 	adds.w	r9, r9, fp
    a7c2:	eb4a 0a0c 	adc.w	sl, sl, ip
    a7c6:	f04f 0100 	mov.w	r1, #0
    a7ca:	f04f 0200 	mov.w	r2, #0
    a7ce:	ea4f 02ca 	mov.w	r2, sl, lsl #3
    a7d2:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
    a7d6:	ea4f 01c9 	mov.w	r1, r9, lsl #3
    a7da:	4689      	mov	r9, r1
    a7dc:	4692      	mov	sl, r2
    a7de:	eb1b 0509 	adds.w	r5, fp, r9
    a7e2:	eb4c 060a 	adc.w	r6, ip, sl
    a7e6:	687b      	ldr	r3, [r7, #4]
    a7e8:	685b      	ldr	r3, [r3, #4]
    a7ea:	4619      	mov	r1, r3
    a7ec:	f04f 0200 	mov.w	r2, #0
    a7f0:	f04f 0300 	mov.w	r3, #0
    a7f4:	f04f 0400 	mov.w	r4, #0
    a7f8:	0094      	lsls	r4, r2, #2
    a7fa:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
    a7fe:	008b      	lsls	r3, r1, #2
    a800:	461a      	mov	r2, r3
    a802:	4623      	mov	r3, r4
    a804:	4628      	mov	r0, r5
    a806:	4631      	mov	r1, r6
    a808:	f003 ffc4 	bl	e794 <__aeabi_uldivmod>
    a80c:	4603      	mov	r3, r0
    a80e:	460c      	mov	r4, r1
    a810:	461a      	mov	r2, r3
    a812:	4b77      	ldr	r3, [pc, #476]	; (a9f0 <UART_SetConfig+0x6f4>)
    a814:	fba3 1302 	umull	r1, r3, r3, r2
    a818:	095b      	lsrs	r3, r3, #5
    a81a:	2164      	movs	r1, #100	; 0x64
    a81c:	fb01 f303 	mul.w	r3, r1, r3
    a820:	1ad3      	subs	r3, r2, r3
    a822:	011b      	lsls	r3, r3, #4
    a824:	3332      	adds	r3, #50	; 0x32
    a826:	4a72      	ldr	r2, [pc, #456]	; (a9f0 <UART_SetConfig+0x6f4>)
    a828:	fba2 2303 	umull	r2, r3, r2, r3
    a82c:	095b      	lsrs	r3, r3, #5
    a82e:	f003 020f 	and.w	r2, r3, #15
    a832:	687b      	ldr	r3, [r7, #4]
    a834:	681b      	ldr	r3, [r3, #0]
    a836:	4442      	add	r2, r8
    a838:	609a      	str	r2, [r3, #8]
    a83a:	e0d0      	b.n	a9de <UART_SetConfig+0x6e2>
      pclk = HAL_RCC_GetPCLK1Freq();
    a83c:	f7ff fc06 	bl	a04c <HAL_RCC_GetPCLK1Freq>
    a840:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    a842:	68bb      	ldr	r3, [r7, #8]
    a844:	469a      	mov	sl, r3
    a846:	f04f 0b00 	mov.w	fp, #0
    a84a:	46d0      	mov	r8, sl
    a84c:	46d9      	mov	r9, fp
    a84e:	eb18 0308 	adds.w	r3, r8, r8
    a852:	eb49 0409 	adc.w	r4, r9, r9
    a856:	4698      	mov	r8, r3
    a858:	46a1      	mov	r9, r4
    a85a:	eb18 080a 	adds.w	r8, r8, sl
    a85e:	eb49 090b 	adc.w	r9, r9, fp
    a862:	f04f 0100 	mov.w	r1, #0
    a866:	f04f 0200 	mov.w	r2, #0
    a86a:	ea4f 02c9 	mov.w	r2, r9, lsl #3
    a86e:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
    a872:	ea4f 01c8 	mov.w	r1, r8, lsl #3
    a876:	4688      	mov	r8, r1
    a878:	4691      	mov	r9, r2
    a87a:	eb1a 0508 	adds.w	r5, sl, r8
    a87e:	eb4b 0609 	adc.w	r6, fp, r9
    a882:	687b      	ldr	r3, [r7, #4]
    a884:	685b      	ldr	r3, [r3, #4]
    a886:	4619      	mov	r1, r3
    a888:	f04f 0200 	mov.w	r2, #0
    a88c:	f04f 0300 	mov.w	r3, #0
    a890:	f04f 0400 	mov.w	r4, #0
    a894:	0094      	lsls	r4, r2, #2
    a896:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
    a89a:	008b      	lsls	r3, r1, #2
    a89c:	461a      	mov	r2, r3
    a89e:	4623      	mov	r3, r4
    a8a0:	4628      	mov	r0, r5
    a8a2:	4631      	mov	r1, r6
    a8a4:	f003 ff76 	bl	e794 <__aeabi_uldivmod>
    a8a8:	4603      	mov	r3, r0
    a8aa:	460c      	mov	r4, r1
    a8ac:	461a      	mov	r2, r3
    a8ae:	4b50      	ldr	r3, [pc, #320]	; (a9f0 <UART_SetConfig+0x6f4>)
    a8b0:	fba3 2302 	umull	r2, r3, r3, r2
    a8b4:	095b      	lsrs	r3, r3, #5
    a8b6:	ea4f 1803 	mov.w	r8, r3, lsl #4
    a8ba:	68bb      	ldr	r3, [r7, #8]
    a8bc:	469b      	mov	fp, r3
    a8be:	f04f 0c00 	mov.w	ip, #0
    a8c2:	46d9      	mov	r9, fp
    a8c4:	46e2      	mov	sl, ip
    a8c6:	eb19 0309 	adds.w	r3, r9, r9
    a8ca:	eb4a 040a 	adc.w	r4, sl, sl
    a8ce:	4699      	mov	r9, r3
    a8d0:	46a2      	mov	sl, r4
    a8d2:	eb19 090b 	adds.w	r9, r9, fp
    a8d6:	eb4a 0a0c 	adc.w	sl, sl, ip
    a8da:	f04f 0100 	mov.w	r1, #0
    a8de:	f04f 0200 	mov.w	r2, #0
    a8e2:	ea4f 02ca 	mov.w	r2, sl, lsl #3
    a8e6:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
    a8ea:	ea4f 01c9 	mov.w	r1, r9, lsl #3
    a8ee:	4689      	mov	r9, r1
    a8f0:	4692      	mov	sl, r2
    a8f2:	eb1b 0509 	adds.w	r5, fp, r9
    a8f6:	eb4c 060a 	adc.w	r6, ip, sl
    a8fa:	687b      	ldr	r3, [r7, #4]
    a8fc:	685b      	ldr	r3, [r3, #4]
    a8fe:	4619      	mov	r1, r3
    a900:	f04f 0200 	mov.w	r2, #0
    a904:	f04f 0300 	mov.w	r3, #0
    a908:	f04f 0400 	mov.w	r4, #0
    a90c:	0094      	lsls	r4, r2, #2
    a90e:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
    a912:	008b      	lsls	r3, r1, #2
    a914:	461a      	mov	r2, r3
    a916:	4623      	mov	r3, r4
    a918:	4628      	mov	r0, r5
    a91a:	4631      	mov	r1, r6
    a91c:	f003 ff3a 	bl	e794 <__aeabi_uldivmod>
    a920:	4603      	mov	r3, r0
    a922:	460c      	mov	r4, r1
    a924:	461a      	mov	r2, r3
    a926:	4b32      	ldr	r3, [pc, #200]	; (a9f0 <UART_SetConfig+0x6f4>)
    a928:	fba3 1302 	umull	r1, r3, r3, r2
    a92c:	095b      	lsrs	r3, r3, #5
    a92e:	2164      	movs	r1, #100	; 0x64
    a930:	fb01 f303 	mul.w	r3, r1, r3
    a934:	1ad3      	subs	r3, r2, r3
    a936:	011b      	lsls	r3, r3, #4
    a938:	3332      	adds	r3, #50	; 0x32
    a93a:	4a2d      	ldr	r2, [pc, #180]	; (a9f0 <UART_SetConfig+0x6f4>)
    a93c:	fba2 2303 	umull	r2, r3, r2, r3
    a940:	095b      	lsrs	r3, r3, #5
    a942:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    a946:	4498      	add	r8, r3
    a948:	68bb      	ldr	r3, [r7, #8]
    a94a:	469b      	mov	fp, r3
    a94c:	f04f 0c00 	mov.w	ip, #0
    a950:	46d9      	mov	r9, fp
    a952:	46e2      	mov	sl, ip
    a954:	eb19 0309 	adds.w	r3, r9, r9
    a958:	eb4a 040a 	adc.w	r4, sl, sl
    a95c:	4699      	mov	r9, r3
    a95e:	46a2      	mov	sl, r4
    a960:	eb19 090b 	adds.w	r9, r9, fp
    a964:	eb4a 0a0c 	adc.w	sl, sl, ip
    a968:	f04f 0100 	mov.w	r1, #0
    a96c:	f04f 0200 	mov.w	r2, #0
    a970:	ea4f 02ca 	mov.w	r2, sl, lsl #3
    a974:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
    a978:	ea4f 01c9 	mov.w	r1, r9, lsl #3
    a97c:	4689      	mov	r9, r1
    a97e:	4692      	mov	sl, r2
    a980:	eb1b 0509 	adds.w	r5, fp, r9
    a984:	eb4c 060a 	adc.w	r6, ip, sl
    a988:	687b      	ldr	r3, [r7, #4]
    a98a:	685b      	ldr	r3, [r3, #4]
    a98c:	4619      	mov	r1, r3
    a98e:	f04f 0200 	mov.w	r2, #0
    a992:	f04f 0300 	mov.w	r3, #0
    a996:	f04f 0400 	mov.w	r4, #0
    a99a:	0094      	lsls	r4, r2, #2
    a99c:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
    a9a0:	008b      	lsls	r3, r1, #2
    a9a2:	461a      	mov	r2, r3
    a9a4:	4623      	mov	r3, r4
    a9a6:	4628      	mov	r0, r5
    a9a8:	4631      	mov	r1, r6
    a9aa:	f003 fef3 	bl	e794 <__aeabi_uldivmod>
    a9ae:	4603      	mov	r3, r0
    a9b0:	460c      	mov	r4, r1
    a9b2:	461a      	mov	r2, r3
    a9b4:	4b0e      	ldr	r3, [pc, #56]	; (a9f0 <UART_SetConfig+0x6f4>)
    a9b6:	fba3 1302 	umull	r1, r3, r3, r2
    a9ba:	095b      	lsrs	r3, r3, #5
    a9bc:	2164      	movs	r1, #100	; 0x64
    a9be:	fb01 f303 	mul.w	r3, r1, r3
    a9c2:	1ad3      	subs	r3, r2, r3
    a9c4:	011b      	lsls	r3, r3, #4
    a9c6:	3332      	adds	r3, #50	; 0x32
    a9c8:	4a09      	ldr	r2, [pc, #36]	; (a9f0 <UART_SetConfig+0x6f4>)
    a9ca:	fba2 2303 	umull	r2, r3, r2, r3
    a9ce:	095b      	lsrs	r3, r3, #5
    a9d0:	f003 020f 	and.w	r2, r3, #15
    a9d4:	687b      	ldr	r3, [r7, #4]
    a9d6:	681b      	ldr	r3, [r3, #0]
    a9d8:	4442      	add	r2, r8
    a9da:	609a      	str	r2, [r3, #8]
}
    a9dc:	e7ff      	b.n	a9de <UART_SetConfig+0x6e2>
    a9de:	bf00      	nop
    a9e0:	3714      	adds	r7, #20
    a9e2:	46bd      	mov	sp, r7
    a9e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a9e8:	40011000 	.word	0x40011000
    a9ec:	40011400 	.word	0x40011400
    a9f0:	51eb851f 	.word	0x51eb851f

0000a9f4 <__errno>:
    a9f4:	4b01      	ldr	r3, [pc, #4]	; (a9fc <__errno+0x8>)
    a9f6:	6818      	ldr	r0, [r3, #0]
    a9f8:	4770      	bx	lr
    a9fa:	bf00      	nop
    a9fc:	0001efd8 	.word	0x0001efd8

0000aa00 <__libc_init_array>:
    aa00:	b570      	push	{r4, r5, r6, lr}
    aa02:	4e0d      	ldr	r6, [pc, #52]	; (aa38 <__libc_init_array+0x38>)
    aa04:	4c0d      	ldr	r4, [pc, #52]	; (aa3c <__libc_init_array+0x3c>)
    aa06:	1ba4      	subs	r4, r4, r6
    aa08:	10a4      	asrs	r4, r4, #2
    aa0a:	2500      	movs	r5, #0
    aa0c:	42a5      	cmp	r5, r4
    aa0e:	d109      	bne.n	aa24 <__libc_init_array+0x24>
    aa10:	4e0b      	ldr	r6, [pc, #44]	; (aa40 <__libc_init_array+0x40>)
    aa12:	4c0c      	ldr	r4, [pc, #48]	; (aa44 <__libc_init_array+0x44>)
    aa14:	f7fd faf4 	bl	8000 <_init>
    aa18:	1ba4      	subs	r4, r4, r6
    aa1a:	10a4      	asrs	r4, r4, #2
    aa1c:	2500      	movs	r5, #0
    aa1e:	42a5      	cmp	r5, r4
    aa20:	d105      	bne.n	aa2e <__libc_init_array+0x2e>
    aa22:	bd70      	pop	{r4, r5, r6, pc}
    aa24:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
    aa28:	4798      	blx	r3
    aa2a:	3501      	adds	r5, #1
    aa2c:	e7ee      	b.n	aa0c <__libc_init_array+0xc>
    aa2e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
    aa32:	4798      	blx	r3
    aa34:	3501      	adds	r5, #1
    aa36:	e7f2      	b.n	aa1e <__libc_init_array+0x1e>
    aa38:	0001efc4 	.word	0x0001efc4
    aa3c:	0001efc4 	.word	0x0001efc4
    aa40:	0001efc4 	.word	0x0001efc4
    aa44:	0001efc8 	.word	0x0001efc8

0000aa48 <malloc>:
    aa48:	4b02      	ldr	r3, [pc, #8]	; (aa54 <malloc+0xc>)
    aa4a:	4601      	mov	r1, r0
    aa4c:	6818      	ldr	r0, [r3, #0]
    aa4e:	f000 b861 	b.w	ab14 <_malloc_r>
    aa52:	bf00      	nop
    aa54:	0001efd8 	.word	0x0001efd8

0000aa58 <free>:
    aa58:	4b02      	ldr	r3, [pc, #8]	; (aa64 <free+0xc>)
    aa5a:	4601      	mov	r1, r0
    aa5c:	6818      	ldr	r0, [r3, #0]
    aa5e:	f000 b80b 	b.w	aa78 <_free_r>
    aa62:	bf00      	nop
    aa64:	0001efd8 	.word	0x0001efd8

0000aa68 <memset>:
    aa68:	4402      	add	r2, r0
    aa6a:	4603      	mov	r3, r0
    aa6c:	4293      	cmp	r3, r2
    aa6e:	d100      	bne.n	aa72 <memset+0xa>
    aa70:	4770      	bx	lr
    aa72:	f803 1b01 	strb.w	r1, [r3], #1
    aa76:	e7f9      	b.n	aa6c <memset+0x4>

0000aa78 <_free_r>:
    aa78:	b538      	push	{r3, r4, r5, lr}
    aa7a:	4605      	mov	r5, r0
    aa7c:	2900      	cmp	r1, #0
    aa7e:	d045      	beq.n	ab0c <_free_r+0x94>
    aa80:	f851 3c04 	ldr.w	r3, [r1, #-4]
    aa84:	1f0c      	subs	r4, r1, #4
    aa86:	2b00      	cmp	r3, #0
    aa88:	bfb8      	it	lt
    aa8a:	18e4      	addlt	r4, r4, r3
    aa8c:	f001 fbe3 	bl	c256 <__malloc_lock>
    aa90:	4a1f      	ldr	r2, [pc, #124]	; (ab10 <_free_r+0x98>)
    aa92:	6813      	ldr	r3, [r2, #0]
    aa94:	4610      	mov	r0, r2
    aa96:	b933      	cbnz	r3, aaa6 <_free_r+0x2e>
    aa98:	6063      	str	r3, [r4, #4]
    aa9a:	6014      	str	r4, [r2, #0]
    aa9c:	4628      	mov	r0, r5
    aa9e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    aaa2:	f001 bbd9 	b.w	c258 <__malloc_unlock>
    aaa6:	42a3      	cmp	r3, r4
    aaa8:	d90c      	bls.n	aac4 <_free_r+0x4c>
    aaaa:	6821      	ldr	r1, [r4, #0]
    aaac:	1862      	adds	r2, r4, r1
    aaae:	4293      	cmp	r3, r2
    aab0:	bf04      	itt	eq
    aab2:	681a      	ldreq	r2, [r3, #0]
    aab4:	685b      	ldreq	r3, [r3, #4]
    aab6:	6063      	str	r3, [r4, #4]
    aab8:	bf04      	itt	eq
    aaba:	1852      	addeq	r2, r2, r1
    aabc:	6022      	streq	r2, [r4, #0]
    aabe:	6004      	str	r4, [r0, #0]
    aac0:	e7ec      	b.n	aa9c <_free_r+0x24>
    aac2:	4613      	mov	r3, r2
    aac4:	685a      	ldr	r2, [r3, #4]
    aac6:	b10a      	cbz	r2, aacc <_free_r+0x54>
    aac8:	42a2      	cmp	r2, r4
    aaca:	d9fa      	bls.n	aac2 <_free_r+0x4a>
    aacc:	6819      	ldr	r1, [r3, #0]
    aace:	1858      	adds	r0, r3, r1
    aad0:	42a0      	cmp	r0, r4
    aad2:	d10b      	bne.n	aaec <_free_r+0x74>
    aad4:	6820      	ldr	r0, [r4, #0]
    aad6:	4401      	add	r1, r0
    aad8:	1858      	adds	r0, r3, r1
    aada:	4282      	cmp	r2, r0
    aadc:	6019      	str	r1, [r3, #0]
    aade:	d1dd      	bne.n	aa9c <_free_r+0x24>
    aae0:	6810      	ldr	r0, [r2, #0]
    aae2:	6852      	ldr	r2, [r2, #4]
    aae4:	605a      	str	r2, [r3, #4]
    aae6:	4401      	add	r1, r0
    aae8:	6019      	str	r1, [r3, #0]
    aaea:	e7d7      	b.n	aa9c <_free_r+0x24>
    aaec:	d902      	bls.n	aaf4 <_free_r+0x7c>
    aaee:	230c      	movs	r3, #12
    aaf0:	602b      	str	r3, [r5, #0]
    aaf2:	e7d3      	b.n	aa9c <_free_r+0x24>
    aaf4:	6820      	ldr	r0, [r4, #0]
    aaf6:	1821      	adds	r1, r4, r0
    aaf8:	428a      	cmp	r2, r1
    aafa:	bf04      	itt	eq
    aafc:	6811      	ldreq	r1, [r2, #0]
    aafe:	6852      	ldreq	r2, [r2, #4]
    ab00:	6062      	str	r2, [r4, #4]
    ab02:	bf04      	itt	eq
    ab04:	1809      	addeq	r1, r1, r0
    ab06:	6021      	streq	r1, [r4, #0]
    ab08:	605c      	str	r4, [r3, #4]
    ab0a:	e7c7      	b.n	aa9c <_free_r+0x24>
    ab0c:	bd38      	pop	{r3, r4, r5, pc}
    ab0e:	bf00      	nop
    ab10:	0001f1cc 	.word	0x0001f1cc

0000ab14 <_malloc_r>:
    ab14:	b570      	push	{r4, r5, r6, lr}
    ab16:	1ccd      	adds	r5, r1, #3
    ab18:	f025 0503 	bic.w	r5, r5, #3
    ab1c:	3508      	adds	r5, #8
    ab1e:	2d0c      	cmp	r5, #12
    ab20:	bf38      	it	cc
    ab22:	250c      	movcc	r5, #12
    ab24:	2d00      	cmp	r5, #0
    ab26:	4606      	mov	r6, r0
    ab28:	db01      	blt.n	ab2e <_malloc_r+0x1a>
    ab2a:	42a9      	cmp	r1, r5
    ab2c:	d903      	bls.n	ab36 <_malloc_r+0x22>
    ab2e:	230c      	movs	r3, #12
    ab30:	6033      	str	r3, [r6, #0]
    ab32:	2000      	movs	r0, #0
    ab34:	bd70      	pop	{r4, r5, r6, pc}
    ab36:	f001 fb8e 	bl	c256 <__malloc_lock>
    ab3a:	4a21      	ldr	r2, [pc, #132]	; (abc0 <_malloc_r+0xac>)
    ab3c:	6814      	ldr	r4, [r2, #0]
    ab3e:	4621      	mov	r1, r4
    ab40:	b991      	cbnz	r1, ab68 <_malloc_r+0x54>
    ab42:	4c20      	ldr	r4, [pc, #128]	; (abc4 <_malloc_r+0xb0>)
    ab44:	6823      	ldr	r3, [r4, #0]
    ab46:	b91b      	cbnz	r3, ab50 <_malloc_r+0x3c>
    ab48:	4630      	mov	r0, r6
    ab4a:	f000 fc99 	bl	b480 <_sbrk_r>
    ab4e:	6020      	str	r0, [r4, #0]
    ab50:	4629      	mov	r1, r5
    ab52:	4630      	mov	r0, r6
    ab54:	f000 fc94 	bl	b480 <_sbrk_r>
    ab58:	1c43      	adds	r3, r0, #1
    ab5a:	d124      	bne.n	aba6 <_malloc_r+0x92>
    ab5c:	230c      	movs	r3, #12
    ab5e:	6033      	str	r3, [r6, #0]
    ab60:	4630      	mov	r0, r6
    ab62:	f001 fb79 	bl	c258 <__malloc_unlock>
    ab66:	e7e4      	b.n	ab32 <_malloc_r+0x1e>
    ab68:	680b      	ldr	r3, [r1, #0]
    ab6a:	1b5b      	subs	r3, r3, r5
    ab6c:	d418      	bmi.n	aba0 <_malloc_r+0x8c>
    ab6e:	2b0b      	cmp	r3, #11
    ab70:	d90f      	bls.n	ab92 <_malloc_r+0x7e>
    ab72:	600b      	str	r3, [r1, #0]
    ab74:	50cd      	str	r5, [r1, r3]
    ab76:	18cc      	adds	r4, r1, r3
    ab78:	4630      	mov	r0, r6
    ab7a:	f001 fb6d 	bl	c258 <__malloc_unlock>
    ab7e:	f104 000b 	add.w	r0, r4, #11
    ab82:	1d23      	adds	r3, r4, #4
    ab84:	f020 0007 	bic.w	r0, r0, #7
    ab88:	1ac3      	subs	r3, r0, r3
    ab8a:	d0d3      	beq.n	ab34 <_malloc_r+0x20>
    ab8c:	425a      	negs	r2, r3
    ab8e:	50e2      	str	r2, [r4, r3]
    ab90:	e7d0      	b.n	ab34 <_malloc_r+0x20>
    ab92:	428c      	cmp	r4, r1
    ab94:	684b      	ldr	r3, [r1, #4]
    ab96:	bf16      	itet	ne
    ab98:	6063      	strne	r3, [r4, #4]
    ab9a:	6013      	streq	r3, [r2, #0]
    ab9c:	460c      	movne	r4, r1
    ab9e:	e7eb      	b.n	ab78 <_malloc_r+0x64>
    aba0:	460c      	mov	r4, r1
    aba2:	6849      	ldr	r1, [r1, #4]
    aba4:	e7cc      	b.n	ab40 <_malloc_r+0x2c>
    aba6:	1cc4      	adds	r4, r0, #3
    aba8:	f024 0403 	bic.w	r4, r4, #3
    abac:	42a0      	cmp	r0, r4
    abae:	d005      	beq.n	abbc <_malloc_r+0xa8>
    abb0:	1a21      	subs	r1, r4, r0
    abb2:	4630      	mov	r0, r6
    abb4:	f000 fc64 	bl	b480 <_sbrk_r>
    abb8:	3001      	adds	r0, #1
    abba:	d0cf      	beq.n	ab5c <_malloc_r+0x48>
    abbc:	6025      	str	r5, [r4, #0]
    abbe:	e7db      	b.n	ab78 <_malloc_r+0x64>
    abc0:	0001f1cc 	.word	0x0001f1cc
    abc4:	0001f1d0 	.word	0x0001f1d0

0000abc8 <__cvt>:
    abc8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
    abcc:	ec55 4b10 	vmov	r4, r5, d0
    abd0:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    abd2:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
    abd6:	2d00      	cmp	r5, #0
    abd8:	460e      	mov	r6, r1
    abda:	4691      	mov	r9, r2
    abdc:	4619      	mov	r1, r3
    abde:	bfb8      	it	lt
    abe0:	4622      	movlt	r2, r4
    abe2:	462b      	mov	r3, r5
    abe4:	f027 0720 	bic.w	r7, r7, #32
    abe8:	bfbb      	ittet	lt
    abea:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
    abee:	461d      	movlt	r5, r3
    abf0:	2300      	movge	r3, #0
    abf2:	232d      	movlt	r3, #45	; 0x2d
    abf4:	bfb8      	it	lt
    abf6:	4614      	movlt	r4, r2
    abf8:	2f46      	cmp	r7, #70	; 0x46
    abfa:	700b      	strb	r3, [r1, #0]
    abfc:	d004      	beq.n	ac08 <__cvt+0x40>
    abfe:	2f45      	cmp	r7, #69	; 0x45
    ac00:	d100      	bne.n	ac04 <__cvt+0x3c>
    ac02:	3601      	adds	r6, #1
    ac04:	2102      	movs	r1, #2
    ac06:	e000      	b.n	ac0a <__cvt+0x42>
    ac08:	2103      	movs	r1, #3
    ac0a:	ab03      	add	r3, sp, #12
    ac0c:	9301      	str	r3, [sp, #4]
    ac0e:	ab02      	add	r3, sp, #8
    ac10:	9300      	str	r3, [sp, #0]
    ac12:	4632      	mov	r2, r6
    ac14:	4653      	mov	r3, sl
    ac16:	ec45 4b10 	vmov	d0, r4, r5
    ac1a:	f000 fcf5 	bl	b608 <_dtoa_r>
    ac1e:	2f47      	cmp	r7, #71	; 0x47
    ac20:	4680      	mov	r8, r0
    ac22:	d102      	bne.n	ac2a <__cvt+0x62>
    ac24:	f019 0f01 	tst.w	r9, #1
    ac28:	d026      	beq.n	ac78 <__cvt+0xb0>
    ac2a:	2f46      	cmp	r7, #70	; 0x46
    ac2c:	eb08 0906 	add.w	r9, r8, r6
    ac30:	d111      	bne.n	ac56 <__cvt+0x8e>
    ac32:	f898 3000 	ldrb.w	r3, [r8]
    ac36:	2b30      	cmp	r3, #48	; 0x30
    ac38:	d10a      	bne.n	ac50 <__cvt+0x88>
    ac3a:	2200      	movs	r2, #0
    ac3c:	2300      	movs	r3, #0
    ac3e:	4620      	mov	r0, r4
    ac40:	4629      	mov	r1, r5
    ac42:	f003 fd37 	bl	e6b4 <__aeabi_dcmpeq>
    ac46:	b918      	cbnz	r0, ac50 <__cvt+0x88>
    ac48:	f1c6 0601 	rsb	r6, r6, #1
    ac4c:	f8ca 6000 	str.w	r6, [sl]
    ac50:	f8da 3000 	ldr.w	r3, [sl]
    ac54:	4499      	add	r9, r3
    ac56:	2200      	movs	r2, #0
    ac58:	2300      	movs	r3, #0
    ac5a:	4620      	mov	r0, r4
    ac5c:	4629      	mov	r1, r5
    ac5e:	f003 fd29 	bl	e6b4 <__aeabi_dcmpeq>
    ac62:	b938      	cbnz	r0, ac74 <__cvt+0xac>
    ac64:	2230      	movs	r2, #48	; 0x30
    ac66:	9b03      	ldr	r3, [sp, #12]
    ac68:	454b      	cmp	r3, r9
    ac6a:	d205      	bcs.n	ac78 <__cvt+0xb0>
    ac6c:	1c59      	adds	r1, r3, #1
    ac6e:	9103      	str	r1, [sp, #12]
    ac70:	701a      	strb	r2, [r3, #0]
    ac72:	e7f8      	b.n	ac66 <__cvt+0x9e>
    ac74:	f8cd 900c 	str.w	r9, [sp, #12]
    ac78:	9b03      	ldr	r3, [sp, #12]
    ac7a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    ac7c:	eba3 0308 	sub.w	r3, r3, r8
    ac80:	4640      	mov	r0, r8
    ac82:	6013      	str	r3, [r2, #0]
    ac84:	b004      	add	sp, #16
    ac86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0000ac8a <__exponent>:
    ac8a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    ac8c:	2900      	cmp	r1, #0
    ac8e:	4604      	mov	r4, r0
    ac90:	bfba      	itte	lt
    ac92:	4249      	neglt	r1, r1
    ac94:	232d      	movlt	r3, #45	; 0x2d
    ac96:	232b      	movge	r3, #43	; 0x2b
    ac98:	2909      	cmp	r1, #9
    ac9a:	f804 2b02 	strb.w	r2, [r4], #2
    ac9e:	7043      	strb	r3, [r0, #1]
    aca0:	dd20      	ble.n	ace4 <__exponent+0x5a>
    aca2:	f10d 0307 	add.w	r3, sp, #7
    aca6:	461f      	mov	r7, r3
    aca8:	260a      	movs	r6, #10
    acaa:	fb91 f5f6 	sdiv	r5, r1, r6
    acae:	fb06 1115 	mls	r1, r6, r5, r1
    acb2:	3130      	adds	r1, #48	; 0x30
    acb4:	2d09      	cmp	r5, #9
    acb6:	f803 1c01 	strb.w	r1, [r3, #-1]
    acba:	f103 32ff 	add.w	r2, r3, #4294967295
    acbe:	4629      	mov	r1, r5
    acc0:	dc09      	bgt.n	acd6 <__exponent+0x4c>
    acc2:	3130      	adds	r1, #48	; 0x30
    acc4:	3b02      	subs	r3, #2
    acc6:	f802 1c01 	strb.w	r1, [r2, #-1]
    acca:	42bb      	cmp	r3, r7
    accc:	4622      	mov	r2, r4
    acce:	d304      	bcc.n	acda <__exponent+0x50>
    acd0:	1a10      	subs	r0, r2, r0
    acd2:	b003      	add	sp, #12
    acd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    acd6:	4613      	mov	r3, r2
    acd8:	e7e7      	b.n	acaa <__exponent+0x20>
    acda:	f813 2b01 	ldrb.w	r2, [r3], #1
    acde:	f804 2b01 	strb.w	r2, [r4], #1
    ace2:	e7f2      	b.n	acca <__exponent+0x40>
    ace4:	2330      	movs	r3, #48	; 0x30
    ace6:	4419      	add	r1, r3
    ace8:	7083      	strb	r3, [r0, #2]
    acea:	1d02      	adds	r2, r0, #4
    acec:	70c1      	strb	r1, [r0, #3]
    acee:	e7ef      	b.n	acd0 <__exponent+0x46>

0000acf0 <_printf_float>:
    acf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    acf4:	b08d      	sub	sp, #52	; 0x34
    acf6:	460c      	mov	r4, r1
    acf8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
    acfc:	4616      	mov	r6, r2
    acfe:	461f      	mov	r7, r3
    ad00:	4605      	mov	r5, r0
    ad02:	f001 fa39 	bl	c178 <_localeconv_r>
    ad06:	6803      	ldr	r3, [r0, #0]
    ad08:	9304      	str	r3, [sp, #16]
    ad0a:	4618      	mov	r0, r3
    ad0c:	f000 fbe8 	bl	b4e0 <strlen>
    ad10:	2300      	movs	r3, #0
    ad12:	930a      	str	r3, [sp, #40]	; 0x28
    ad14:	f8d8 3000 	ldr.w	r3, [r8]
    ad18:	9005      	str	r0, [sp, #20]
    ad1a:	3307      	adds	r3, #7
    ad1c:	f023 0307 	bic.w	r3, r3, #7
    ad20:	f103 0208 	add.w	r2, r3, #8
    ad24:	f894 a018 	ldrb.w	sl, [r4, #24]
    ad28:	f8d4 b000 	ldr.w	fp, [r4]
    ad2c:	f8c8 2000 	str.w	r2, [r8]
    ad30:	e9d3 2300 	ldrd	r2, r3, [r3]
    ad34:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
    ad38:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
    ad3c:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
    ad40:	9307      	str	r3, [sp, #28]
    ad42:	f8cd 8018 	str.w	r8, [sp, #24]
    ad46:	f04f 32ff 	mov.w	r2, #4294967295
    ad4a:	4ba7      	ldr	r3, [pc, #668]	; (afe8 <_printf_float+0x2f8>)
    ad4c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    ad50:	f003 fce2 	bl	e718 <__aeabi_dcmpun>
    ad54:	bb70      	cbnz	r0, adb4 <_printf_float+0xc4>
    ad56:	f04f 32ff 	mov.w	r2, #4294967295
    ad5a:	4ba3      	ldr	r3, [pc, #652]	; (afe8 <_printf_float+0x2f8>)
    ad5c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    ad60:	f003 fcbc 	bl	e6dc <__aeabi_dcmple>
    ad64:	bb30      	cbnz	r0, adb4 <_printf_float+0xc4>
    ad66:	2200      	movs	r2, #0
    ad68:	2300      	movs	r3, #0
    ad6a:	4640      	mov	r0, r8
    ad6c:	4649      	mov	r1, r9
    ad6e:	f003 fcab 	bl	e6c8 <__aeabi_dcmplt>
    ad72:	b110      	cbz	r0, ad7a <_printf_float+0x8a>
    ad74:	232d      	movs	r3, #45	; 0x2d
    ad76:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    ad7a:	4a9c      	ldr	r2, [pc, #624]	; (afec <_printf_float+0x2fc>)
    ad7c:	4b9c      	ldr	r3, [pc, #624]	; (aff0 <_printf_float+0x300>)
    ad7e:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
    ad82:	bf8c      	ite	hi
    ad84:	4690      	movhi	r8, r2
    ad86:	4698      	movls	r8, r3
    ad88:	2303      	movs	r3, #3
    ad8a:	f02b 0204 	bic.w	r2, fp, #4
    ad8e:	6123      	str	r3, [r4, #16]
    ad90:	6022      	str	r2, [r4, #0]
    ad92:	f04f 0900 	mov.w	r9, #0
    ad96:	9700      	str	r7, [sp, #0]
    ad98:	4633      	mov	r3, r6
    ad9a:	aa0b      	add	r2, sp, #44	; 0x2c
    ad9c:	4621      	mov	r1, r4
    ad9e:	4628      	mov	r0, r5
    ada0:	f000 f9e6 	bl	b170 <_printf_common>
    ada4:	3001      	adds	r0, #1
    ada6:	f040 808d 	bne.w	aec4 <_printf_float+0x1d4>
    adaa:	f04f 30ff 	mov.w	r0, #4294967295
    adae:	b00d      	add	sp, #52	; 0x34
    adb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    adb4:	4642      	mov	r2, r8
    adb6:	464b      	mov	r3, r9
    adb8:	4640      	mov	r0, r8
    adba:	4649      	mov	r1, r9
    adbc:	f003 fcac 	bl	e718 <__aeabi_dcmpun>
    adc0:	b110      	cbz	r0, adc8 <_printf_float+0xd8>
    adc2:	4a8c      	ldr	r2, [pc, #560]	; (aff4 <_printf_float+0x304>)
    adc4:	4b8c      	ldr	r3, [pc, #560]	; (aff8 <_printf_float+0x308>)
    adc6:	e7da      	b.n	ad7e <_printf_float+0x8e>
    adc8:	6861      	ldr	r1, [r4, #4]
    adca:	1c4b      	adds	r3, r1, #1
    adcc:	f44b 6280 	orr.w	r2, fp, #1024	; 0x400
    add0:	a80a      	add	r0, sp, #40	; 0x28
    add2:	d13e      	bne.n	ae52 <_printf_float+0x162>
    add4:	2306      	movs	r3, #6
    add6:	6063      	str	r3, [r4, #4]
    add8:	2300      	movs	r3, #0
    adda:	e9cd 0302 	strd	r0, r3, [sp, #8]
    adde:	ab09      	add	r3, sp, #36	; 0x24
    ade0:	9300      	str	r3, [sp, #0]
    ade2:	ec49 8b10 	vmov	d0, r8, r9
    ade6:	f10d 0323 	add.w	r3, sp, #35	; 0x23
    adea:	6022      	str	r2, [r4, #0]
    adec:	f8cd a004 	str.w	sl, [sp, #4]
    adf0:	6861      	ldr	r1, [r4, #4]
    adf2:	4628      	mov	r0, r5
    adf4:	f7ff fee8 	bl	abc8 <__cvt>
    adf8:	f00a 03df 	and.w	r3, sl, #223	; 0xdf
    adfc:	2b47      	cmp	r3, #71	; 0x47
    adfe:	4680      	mov	r8, r0
    ae00:	d109      	bne.n	ae16 <_printf_float+0x126>
    ae02:	9b09      	ldr	r3, [sp, #36]	; 0x24
    ae04:	1cd8      	adds	r0, r3, #3
    ae06:	db02      	blt.n	ae0e <_printf_float+0x11e>
    ae08:	6862      	ldr	r2, [r4, #4]
    ae0a:	4293      	cmp	r3, r2
    ae0c:	dd47      	ble.n	ae9e <_printf_float+0x1ae>
    ae0e:	f1aa 0a02 	sub.w	sl, sl, #2
    ae12:	fa5f fa8a 	uxtb.w	sl, sl
    ae16:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
    ae1a:	9909      	ldr	r1, [sp, #36]	; 0x24
    ae1c:	d824      	bhi.n	ae68 <_printf_float+0x178>
    ae1e:	3901      	subs	r1, #1
    ae20:	4652      	mov	r2, sl
    ae22:	f104 0050 	add.w	r0, r4, #80	; 0x50
    ae26:	9109      	str	r1, [sp, #36]	; 0x24
    ae28:	f7ff ff2f 	bl	ac8a <__exponent>
    ae2c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    ae2e:	1813      	adds	r3, r2, r0
    ae30:	2a01      	cmp	r2, #1
    ae32:	4681      	mov	r9, r0
    ae34:	6123      	str	r3, [r4, #16]
    ae36:	dc02      	bgt.n	ae3e <_printf_float+0x14e>
    ae38:	6822      	ldr	r2, [r4, #0]
    ae3a:	07d1      	lsls	r1, r2, #31
    ae3c:	d501      	bpl.n	ae42 <_printf_float+0x152>
    ae3e:	3301      	adds	r3, #1
    ae40:	6123      	str	r3, [r4, #16]
    ae42:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
    ae46:	2b00      	cmp	r3, #0
    ae48:	d0a5      	beq.n	ad96 <_printf_float+0xa6>
    ae4a:	232d      	movs	r3, #45	; 0x2d
    ae4c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    ae50:	e7a1      	b.n	ad96 <_printf_float+0xa6>
    ae52:	f1ba 0f67 	cmp.w	sl, #103	; 0x67
    ae56:	f000 8177 	beq.w	b148 <_printf_float+0x458>
    ae5a:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
    ae5e:	d1bb      	bne.n	add8 <_printf_float+0xe8>
    ae60:	2900      	cmp	r1, #0
    ae62:	d1b9      	bne.n	add8 <_printf_float+0xe8>
    ae64:	2301      	movs	r3, #1
    ae66:	e7b6      	b.n	add6 <_printf_float+0xe6>
    ae68:	f1ba 0f66 	cmp.w	sl, #102	; 0x66
    ae6c:	d119      	bne.n	aea2 <_printf_float+0x1b2>
    ae6e:	2900      	cmp	r1, #0
    ae70:	6863      	ldr	r3, [r4, #4]
    ae72:	dd0c      	ble.n	ae8e <_printf_float+0x19e>
    ae74:	6121      	str	r1, [r4, #16]
    ae76:	b913      	cbnz	r3, ae7e <_printf_float+0x18e>
    ae78:	6822      	ldr	r2, [r4, #0]
    ae7a:	07d2      	lsls	r2, r2, #31
    ae7c:	d502      	bpl.n	ae84 <_printf_float+0x194>
    ae7e:	3301      	adds	r3, #1
    ae80:	440b      	add	r3, r1
    ae82:	6123      	str	r3, [r4, #16]
    ae84:	9b09      	ldr	r3, [sp, #36]	; 0x24
    ae86:	65a3      	str	r3, [r4, #88]	; 0x58
    ae88:	f04f 0900 	mov.w	r9, #0
    ae8c:	e7d9      	b.n	ae42 <_printf_float+0x152>
    ae8e:	b913      	cbnz	r3, ae96 <_printf_float+0x1a6>
    ae90:	6822      	ldr	r2, [r4, #0]
    ae92:	07d0      	lsls	r0, r2, #31
    ae94:	d501      	bpl.n	ae9a <_printf_float+0x1aa>
    ae96:	3302      	adds	r3, #2
    ae98:	e7f3      	b.n	ae82 <_printf_float+0x192>
    ae9a:	2301      	movs	r3, #1
    ae9c:	e7f1      	b.n	ae82 <_printf_float+0x192>
    ae9e:	f04f 0a67 	mov.w	sl, #103	; 0x67
    aea2:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
    aea6:	4293      	cmp	r3, r2
    aea8:	db05      	blt.n	aeb6 <_printf_float+0x1c6>
    aeaa:	6822      	ldr	r2, [r4, #0]
    aeac:	6123      	str	r3, [r4, #16]
    aeae:	07d1      	lsls	r1, r2, #31
    aeb0:	d5e8      	bpl.n	ae84 <_printf_float+0x194>
    aeb2:	3301      	adds	r3, #1
    aeb4:	e7e5      	b.n	ae82 <_printf_float+0x192>
    aeb6:	2b00      	cmp	r3, #0
    aeb8:	bfd4      	ite	le
    aeba:	f1c3 0302 	rsble	r3, r3, #2
    aebe:	2301      	movgt	r3, #1
    aec0:	4413      	add	r3, r2
    aec2:	e7de      	b.n	ae82 <_printf_float+0x192>
    aec4:	6823      	ldr	r3, [r4, #0]
    aec6:	055a      	lsls	r2, r3, #21
    aec8:	d407      	bmi.n	aeda <_printf_float+0x1ea>
    aeca:	6923      	ldr	r3, [r4, #16]
    aecc:	4642      	mov	r2, r8
    aece:	4631      	mov	r1, r6
    aed0:	4628      	mov	r0, r5
    aed2:	47b8      	blx	r7
    aed4:	3001      	adds	r0, #1
    aed6:	d12b      	bne.n	af30 <_printf_float+0x240>
    aed8:	e767      	b.n	adaa <_printf_float+0xba>
    aeda:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
    aede:	f240 80dc 	bls.w	b09a <_printf_float+0x3aa>
    aee2:	2200      	movs	r2, #0
    aee4:	2300      	movs	r3, #0
    aee6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    aeea:	f003 fbe3 	bl	e6b4 <__aeabi_dcmpeq>
    aeee:	2800      	cmp	r0, #0
    aef0:	d033      	beq.n	af5a <_printf_float+0x26a>
    aef2:	2301      	movs	r3, #1
    aef4:	4a41      	ldr	r2, [pc, #260]	; (affc <_printf_float+0x30c>)
    aef6:	4631      	mov	r1, r6
    aef8:	4628      	mov	r0, r5
    aefa:	47b8      	blx	r7
    aefc:	3001      	adds	r0, #1
    aefe:	f43f af54 	beq.w	adaa <_printf_float+0xba>
    af02:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    af06:	429a      	cmp	r2, r3
    af08:	db02      	blt.n	af10 <_printf_float+0x220>
    af0a:	6823      	ldr	r3, [r4, #0]
    af0c:	07d8      	lsls	r0, r3, #31
    af0e:	d50f      	bpl.n	af30 <_printf_float+0x240>
    af10:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    af14:	4631      	mov	r1, r6
    af16:	4628      	mov	r0, r5
    af18:	47b8      	blx	r7
    af1a:	3001      	adds	r0, #1
    af1c:	f43f af45 	beq.w	adaa <_printf_float+0xba>
    af20:	f04f 0800 	mov.w	r8, #0
    af24:	f104 091a 	add.w	r9, r4, #26
    af28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    af2a:	3b01      	subs	r3, #1
    af2c:	4543      	cmp	r3, r8
    af2e:	dc09      	bgt.n	af44 <_printf_float+0x254>
    af30:	6823      	ldr	r3, [r4, #0]
    af32:	079b      	lsls	r3, r3, #30
    af34:	f100 8103 	bmi.w	b13e <_printf_float+0x44e>
    af38:	68e0      	ldr	r0, [r4, #12]
    af3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    af3c:	4298      	cmp	r0, r3
    af3e:	bfb8      	it	lt
    af40:	4618      	movlt	r0, r3
    af42:	e734      	b.n	adae <_printf_float+0xbe>
    af44:	2301      	movs	r3, #1
    af46:	464a      	mov	r2, r9
    af48:	4631      	mov	r1, r6
    af4a:	4628      	mov	r0, r5
    af4c:	47b8      	blx	r7
    af4e:	3001      	adds	r0, #1
    af50:	f43f af2b 	beq.w	adaa <_printf_float+0xba>
    af54:	f108 0801 	add.w	r8, r8, #1
    af58:	e7e6      	b.n	af28 <_printf_float+0x238>
    af5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    af5c:	2b00      	cmp	r3, #0
    af5e:	dc2b      	bgt.n	afb8 <_printf_float+0x2c8>
    af60:	2301      	movs	r3, #1
    af62:	4a26      	ldr	r2, [pc, #152]	; (affc <_printf_float+0x30c>)
    af64:	4631      	mov	r1, r6
    af66:	4628      	mov	r0, r5
    af68:	47b8      	blx	r7
    af6a:	3001      	adds	r0, #1
    af6c:	f43f af1d 	beq.w	adaa <_printf_float+0xba>
    af70:	9b09      	ldr	r3, [sp, #36]	; 0x24
    af72:	b923      	cbnz	r3, af7e <_printf_float+0x28e>
    af74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    af76:	b913      	cbnz	r3, af7e <_printf_float+0x28e>
    af78:	6823      	ldr	r3, [r4, #0]
    af7a:	07d9      	lsls	r1, r3, #31
    af7c:	d5d8      	bpl.n	af30 <_printf_float+0x240>
    af7e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    af82:	4631      	mov	r1, r6
    af84:	4628      	mov	r0, r5
    af86:	47b8      	blx	r7
    af88:	3001      	adds	r0, #1
    af8a:	f43f af0e 	beq.w	adaa <_printf_float+0xba>
    af8e:	f04f 0900 	mov.w	r9, #0
    af92:	f104 0a1a 	add.w	sl, r4, #26
    af96:	9b09      	ldr	r3, [sp, #36]	; 0x24
    af98:	425b      	negs	r3, r3
    af9a:	454b      	cmp	r3, r9
    af9c:	dc01      	bgt.n	afa2 <_printf_float+0x2b2>
    af9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    afa0:	e794      	b.n	aecc <_printf_float+0x1dc>
    afa2:	2301      	movs	r3, #1
    afa4:	4652      	mov	r2, sl
    afa6:	4631      	mov	r1, r6
    afa8:	4628      	mov	r0, r5
    afaa:	47b8      	blx	r7
    afac:	3001      	adds	r0, #1
    afae:	f43f aefc 	beq.w	adaa <_printf_float+0xba>
    afb2:	f109 0901 	add.w	r9, r9, #1
    afb6:	e7ee      	b.n	af96 <_printf_float+0x2a6>
    afb8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    afba:	6da3      	ldr	r3, [r4, #88]	; 0x58
    afbc:	429a      	cmp	r2, r3
    afbe:	bfa8      	it	ge
    afc0:	461a      	movge	r2, r3
    afc2:	2a00      	cmp	r2, #0
    afc4:	4691      	mov	r9, r2
    afc6:	dd07      	ble.n	afd8 <_printf_float+0x2e8>
    afc8:	4613      	mov	r3, r2
    afca:	4631      	mov	r1, r6
    afcc:	4642      	mov	r2, r8
    afce:	4628      	mov	r0, r5
    afd0:	47b8      	blx	r7
    afd2:	3001      	adds	r0, #1
    afd4:	f43f aee9 	beq.w	adaa <_printf_float+0xba>
    afd8:	f104 031a 	add.w	r3, r4, #26
    afdc:	f04f 0b00 	mov.w	fp, #0
    afe0:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
    afe4:	9306      	str	r3, [sp, #24]
    afe6:	e015      	b.n	b014 <_printf_float+0x324>
    afe8:	7fefffff 	.word	0x7fefffff
    afec:	0000eb80 	.word	0x0000eb80
    aff0:	0000eb7c 	.word	0x0000eb7c
    aff4:	0000eb88 	.word	0x0000eb88
    aff8:	0000eb84 	.word	0x0000eb84
    affc:	0000eb8c 	.word	0x0000eb8c
    b000:	2301      	movs	r3, #1
    b002:	9a06      	ldr	r2, [sp, #24]
    b004:	4631      	mov	r1, r6
    b006:	4628      	mov	r0, r5
    b008:	47b8      	blx	r7
    b00a:	3001      	adds	r0, #1
    b00c:	f43f aecd 	beq.w	adaa <_printf_float+0xba>
    b010:	f10b 0b01 	add.w	fp, fp, #1
    b014:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
    b018:	ebaa 0309 	sub.w	r3, sl, r9
    b01c:	455b      	cmp	r3, fp
    b01e:	dcef      	bgt.n	b000 <_printf_float+0x310>
    b020:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    b024:	429a      	cmp	r2, r3
    b026:	44d0      	add	r8, sl
    b028:	db15      	blt.n	b056 <_printf_float+0x366>
    b02a:	6823      	ldr	r3, [r4, #0]
    b02c:	07da      	lsls	r2, r3, #31
    b02e:	d412      	bmi.n	b056 <_printf_float+0x366>
    b030:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b032:	9909      	ldr	r1, [sp, #36]	; 0x24
    b034:	eba3 020a 	sub.w	r2, r3, sl
    b038:	eba3 0a01 	sub.w	sl, r3, r1
    b03c:	4592      	cmp	sl, r2
    b03e:	bfa8      	it	ge
    b040:	4692      	movge	sl, r2
    b042:	f1ba 0f00 	cmp.w	sl, #0
    b046:	dc0e      	bgt.n	b066 <_printf_float+0x376>
    b048:	f04f 0800 	mov.w	r8, #0
    b04c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
    b050:	f104 091a 	add.w	r9, r4, #26
    b054:	e019      	b.n	b08a <_printf_float+0x39a>
    b056:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    b05a:	4631      	mov	r1, r6
    b05c:	4628      	mov	r0, r5
    b05e:	47b8      	blx	r7
    b060:	3001      	adds	r0, #1
    b062:	d1e5      	bne.n	b030 <_printf_float+0x340>
    b064:	e6a1      	b.n	adaa <_printf_float+0xba>
    b066:	4653      	mov	r3, sl
    b068:	4642      	mov	r2, r8
    b06a:	4631      	mov	r1, r6
    b06c:	4628      	mov	r0, r5
    b06e:	47b8      	blx	r7
    b070:	3001      	adds	r0, #1
    b072:	d1e9      	bne.n	b048 <_printf_float+0x358>
    b074:	e699      	b.n	adaa <_printf_float+0xba>
    b076:	2301      	movs	r3, #1
    b078:	464a      	mov	r2, r9
    b07a:	4631      	mov	r1, r6
    b07c:	4628      	mov	r0, r5
    b07e:	47b8      	blx	r7
    b080:	3001      	adds	r0, #1
    b082:	f43f ae92 	beq.w	adaa <_printf_float+0xba>
    b086:	f108 0801 	add.w	r8, r8, #1
    b08a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    b08e:	1a9b      	subs	r3, r3, r2
    b090:	eba3 030a 	sub.w	r3, r3, sl
    b094:	4543      	cmp	r3, r8
    b096:	dcee      	bgt.n	b076 <_printf_float+0x386>
    b098:	e74a      	b.n	af30 <_printf_float+0x240>
    b09a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    b09c:	2a01      	cmp	r2, #1
    b09e:	dc01      	bgt.n	b0a4 <_printf_float+0x3b4>
    b0a0:	07db      	lsls	r3, r3, #31
    b0a2:	d53a      	bpl.n	b11a <_printf_float+0x42a>
    b0a4:	2301      	movs	r3, #1
    b0a6:	4642      	mov	r2, r8
    b0a8:	4631      	mov	r1, r6
    b0aa:	4628      	mov	r0, r5
    b0ac:	47b8      	blx	r7
    b0ae:	3001      	adds	r0, #1
    b0b0:	f43f ae7b 	beq.w	adaa <_printf_float+0xba>
    b0b4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    b0b8:	4631      	mov	r1, r6
    b0ba:	4628      	mov	r0, r5
    b0bc:	47b8      	blx	r7
    b0be:	3001      	adds	r0, #1
    b0c0:	f108 0801 	add.w	r8, r8, #1
    b0c4:	f43f ae71 	beq.w	adaa <_printf_float+0xba>
    b0c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b0ca:	2200      	movs	r2, #0
    b0cc:	f103 3aff 	add.w	sl, r3, #4294967295
    b0d0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    b0d4:	2300      	movs	r3, #0
    b0d6:	f003 faed 	bl	e6b4 <__aeabi_dcmpeq>
    b0da:	b9c8      	cbnz	r0, b110 <_printf_float+0x420>
    b0dc:	4653      	mov	r3, sl
    b0de:	4642      	mov	r2, r8
    b0e0:	4631      	mov	r1, r6
    b0e2:	4628      	mov	r0, r5
    b0e4:	47b8      	blx	r7
    b0e6:	3001      	adds	r0, #1
    b0e8:	d10e      	bne.n	b108 <_printf_float+0x418>
    b0ea:	e65e      	b.n	adaa <_printf_float+0xba>
    b0ec:	2301      	movs	r3, #1
    b0ee:	4652      	mov	r2, sl
    b0f0:	4631      	mov	r1, r6
    b0f2:	4628      	mov	r0, r5
    b0f4:	47b8      	blx	r7
    b0f6:	3001      	adds	r0, #1
    b0f8:	f43f ae57 	beq.w	adaa <_printf_float+0xba>
    b0fc:	f108 0801 	add.w	r8, r8, #1
    b100:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b102:	3b01      	subs	r3, #1
    b104:	4543      	cmp	r3, r8
    b106:	dcf1      	bgt.n	b0ec <_printf_float+0x3fc>
    b108:	464b      	mov	r3, r9
    b10a:	f104 0250 	add.w	r2, r4, #80	; 0x50
    b10e:	e6de      	b.n	aece <_printf_float+0x1de>
    b110:	f04f 0800 	mov.w	r8, #0
    b114:	f104 0a1a 	add.w	sl, r4, #26
    b118:	e7f2      	b.n	b100 <_printf_float+0x410>
    b11a:	2301      	movs	r3, #1
    b11c:	e7df      	b.n	b0de <_printf_float+0x3ee>
    b11e:	2301      	movs	r3, #1
    b120:	464a      	mov	r2, r9
    b122:	4631      	mov	r1, r6
    b124:	4628      	mov	r0, r5
    b126:	47b8      	blx	r7
    b128:	3001      	adds	r0, #1
    b12a:	f43f ae3e 	beq.w	adaa <_printf_float+0xba>
    b12e:	f108 0801 	add.w	r8, r8, #1
    b132:	68e3      	ldr	r3, [r4, #12]
    b134:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    b136:	1a9b      	subs	r3, r3, r2
    b138:	4543      	cmp	r3, r8
    b13a:	dcf0      	bgt.n	b11e <_printf_float+0x42e>
    b13c:	e6fc      	b.n	af38 <_printf_float+0x248>
    b13e:	f04f 0800 	mov.w	r8, #0
    b142:	f104 0919 	add.w	r9, r4, #25
    b146:	e7f4      	b.n	b132 <_printf_float+0x442>
    b148:	2900      	cmp	r1, #0
    b14a:	f43f ae8b 	beq.w	ae64 <_printf_float+0x174>
    b14e:	2300      	movs	r3, #0
    b150:	e9cd 0302 	strd	r0, r3, [sp, #8]
    b154:	ab09      	add	r3, sp, #36	; 0x24
    b156:	9300      	str	r3, [sp, #0]
    b158:	ec49 8b10 	vmov	d0, r8, r9
    b15c:	6022      	str	r2, [r4, #0]
    b15e:	f8cd a004 	str.w	sl, [sp, #4]
    b162:	f10d 0323 	add.w	r3, sp, #35	; 0x23
    b166:	4628      	mov	r0, r5
    b168:	f7ff fd2e 	bl	abc8 <__cvt>
    b16c:	4680      	mov	r8, r0
    b16e:	e648      	b.n	ae02 <_printf_float+0x112>

0000b170 <_printf_common>:
    b170:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    b174:	4691      	mov	r9, r2
    b176:	461f      	mov	r7, r3
    b178:	688a      	ldr	r2, [r1, #8]
    b17a:	690b      	ldr	r3, [r1, #16]
    b17c:	f8dd 8020 	ldr.w	r8, [sp, #32]
    b180:	4293      	cmp	r3, r2
    b182:	bfb8      	it	lt
    b184:	4613      	movlt	r3, r2
    b186:	f8c9 3000 	str.w	r3, [r9]
    b18a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
    b18e:	4606      	mov	r6, r0
    b190:	460c      	mov	r4, r1
    b192:	b112      	cbz	r2, b19a <_printf_common+0x2a>
    b194:	3301      	adds	r3, #1
    b196:	f8c9 3000 	str.w	r3, [r9]
    b19a:	6823      	ldr	r3, [r4, #0]
    b19c:	0699      	lsls	r1, r3, #26
    b19e:	bf42      	ittt	mi
    b1a0:	f8d9 3000 	ldrmi.w	r3, [r9]
    b1a4:	3302      	addmi	r3, #2
    b1a6:	f8c9 3000 	strmi.w	r3, [r9]
    b1aa:	6825      	ldr	r5, [r4, #0]
    b1ac:	f015 0506 	ands.w	r5, r5, #6
    b1b0:	d107      	bne.n	b1c2 <_printf_common+0x52>
    b1b2:	f104 0a19 	add.w	sl, r4, #25
    b1b6:	68e3      	ldr	r3, [r4, #12]
    b1b8:	f8d9 2000 	ldr.w	r2, [r9]
    b1bc:	1a9b      	subs	r3, r3, r2
    b1be:	42ab      	cmp	r3, r5
    b1c0:	dc28      	bgt.n	b214 <_printf_common+0xa4>
    b1c2:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
    b1c6:	6822      	ldr	r2, [r4, #0]
    b1c8:	3300      	adds	r3, #0
    b1ca:	bf18      	it	ne
    b1cc:	2301      	movne	r3, #1
    b1ce:	0692      	lsls	r2, r2, #26
    b1d0:	d42d      	bmi.n	b22e <_printf_common+0xbe>
    b1d2:	f104 0243 	add.w	r2, r4, #67	; 0x43
    b1d6:	4639      	mov	r1, r7
    b1d8:	4630      	mov	r0, r6
    b1da:	47c0      	blx	r8
    b1dc:	3001      	adds	r0, #1
    b1de:	d020      	beq.n	b222 <_printf_common+0xb2>
    b1e0:	6823      	ldr	r3, [r4, #0]
    b1e2:	68e5      	ldr	r5, [r4, #12]
    b1e4:	f8d9 2000 	ldr.w	r2, [r9]
    b1e8:	f003 0306 	and.w	r3, r3, #6
    b1ec:	2b04      	cmp	r3, #4
    b1ee:	bf08      	it	eq
    b1f0:	1aad      	subeq	r5, r5, r2
    b1f2:	68a3      	ldr	r3, [r4, #8]
    b1f4:	6922      	ldr	r2, [r4, #16]
    b1f6:	bf0c      	ite	eq
    b1f8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
    b1fc:	2500      	movne	r5, #0
    b1fe:	4293      	cmp	r3, r2
    b200:	bfc4      	itt	gt
    b202:	1a9b      	subgt	r3, r3, r2
    b204:	18ed      	addgt	r5, r5, r3
    b206:	f04f 0900 	mov.w	r9, #0
    b20a:	341a      	adds	r4, #26
    b20c:	454d      	cmp	r5, r9
    b20e:	d11a      	bne.n	b246 <_printf_common+0xd6>
    b210:	2000      	movs	r0, #0
    b212:	e008      	b.n	b226 <_printf_common+0xb6>
    b214:	2301      	movs	r3, #1
    b216:	4652      	mov	r2, sl
    b218:	4639      	mov	r1, r7
    b21a:	4630      	mov	r0, r6
    b21c:	47c0      	blx	r8
    b21e:	3001      	adds	r0, #1
    b220:	d103      	bne.n	b22a <_printf_common+0xba>
    b222:	f04f 30ff 	mov.w	r0, #4294967295
    b226:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    b22a:	3501      	adds	r5, #1
    b22c:	e7c3      	b.n	b1b6 <_printf_common+0x46>
    b22e:	18e1      	adds	r1, r4, r3
    b230:	1c5a      	adds	r2, r3, #1
    b232:	2030      	movs	r0, #48	; 0x30
    b234:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
    b238:	4422      	add	r2, r4
    b23a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
    b23e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
    b242:	3302      	adds	r3, #2
    b244:	e7c5      	b.n	b1d2 <_printf_common+0x62>
    b246:	2301      	movs	r3, #1
    b248:	4622      	mov	r2, r4
    b24a:	4639      	mov	r1, r7
    b24c:	4630      	mov	r0, r6
    b24e:	47c0      	blx	r8
    b250:	3001      	adds	r0, #1
    b252:	d0e6      	beq.n	b222 <_printf_common+0xb2>
    b254:	f109 0901 	add.w	r9, r9, #1
    b258:	e7d8      	b.n	b20c <_printf_common+0x9c>
	...

0000b25c <_printf_i>:
    b25c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    b260:	f101 0c43 	add.w	ip, r1, #67	; 0x43
    b264:	460c      	mov	r4, r1
    b266:	7e09      	ldrb	r1, [r1, #24]
    b268:	b085      	sub	sp, #20
    b26a:	296e      	cmp	r1, #110	; 0x6e
    b26c:	4617      	mov	r7, r2
    b26e:	4606      	mov	r6, r0
    b270:	4698      	mov	r8, r3
    b272:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    b274:	f000 80b3 	beq.w	b3de <_printf_i+0x182>
    b278:	d822      	bhi.n	b2c0 <_printf_i+0x64>
    b27a:	2963      	cmp	r1, #99	; 0x63
    b27c:	d036      	beq.n	b2ec <_printf_i+0x90>
    b27e:	d80a      	bhi.n	b296 <_printf_i+0x3a>
    b280:	2900      	cmp	r1, #0
    b282:	f000 80b9 	beq.w	b3f8 <_printf_i+0x19c>
    b286:	2958      	cmp	r1, #88	; 0x58
    b288:	f000 8083 	beq.w	b392 <_printf_i+0x136>
    b28c:	f104 0542 	add.w	r5, r4, #66	; 0x42
    b290:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    b294:	e032      	b.n	b2fc <_printf_i+0xa0>
    b296:	2964      	cmp	r1, #100	; 0x64
    b298:	d001      	beq.n	b29e <_printf_i+0x42>
    b29a:	2969      	cmp	r1, #105	; 0x69
    b29c:	d1f6      	bne.n	b28c <_printf_i+0x30>
    b29e:	6820      	ldr	r0, [r4, #0]
    b2a0:	6813      	ldr	r3, [r2, #0]
    b2a2:	0605      	lsls	r5, r0, #24
    b2a4:	f103 0104 	add.w	r1, r3, #4
    b2a8:	d52a      	bpl.n	b300 <_printf_i+0xa4>
    b2aa:	681b      	ldr	r3, [r3, #0]
    b2ac:	6011      	str	r1, [r2, #0]
    b2ae:	2b00      	cmp	r3, #0
    b2b0:	da03      	bge.n	b2ba <_printf_i+0x5e>
    b2b2:	222d      	movs	r2, #45	; 0x2d
    b2b4:	425b      	negs	r3, r3
    b2b6:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
    b2ba:	486f      	ldr	r0, [pc, #444]	; (b478 <_printf_i+0x21c>)
    b2bc:	220a      	movs	r2, #10
    b2be:	e039      	b.n	b334 <_printf_i+0xd8>
    b2c0:	2973      	cmp	r1, #115	; 0x73
    b2c2:	f000 809d 	beq.w	b400 <_printf_i+0x1a4>
    b2c6:	d808      	bhi.n	b2da <_printf_i+0x7e>
    b2c8:	296f      	cmp	r1, #111	; 0x6f
    b2ca:	d020      	beq.n	b30e <_printf_i+0xb2>
    b2cc:	2970      	cmp	r1, #112	; 0x70
    b2ce:	d1dd      	bne.n	b28c <_printf_i+0x30>
    b2d0:	6823      	ldr	r3, [r4, #0]
    b2d2:	f043 0320 	orr.w	r3, r3, #32
    b2d6:	6023      	str	r3, [r4, #0]
    b2d8:	e003      	b.n	b2e2 <_printf_i+0x86>
    b2da:	2975      	cmp	r1, #117	; 0x75
    b2dc:	d017      	beq.n	b30e <_printf_i+0xb2>
    b2de:	2978      	cmp	r1, #120	; 0x78
    b2e0:	d1d4      	bne.n	b28c <_printf_i+0x30>
    b2e2:	2378      	movs	r3, #120	; 0x78
    b2e4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
    b2e8:	4864      	ldr	r0, [pc, #400]	; (b47c <_printf_i+0x220>)
    b2ea:	e055      	b.n	b398 <_printf_i+0x13c>
    b2ec:	6813      	ldr	r3, [r2, #0]
    b2ee:	1d19      	adds	r1, r3, #4
    b2f0:	681b      	ldr	r3, [r3, #0]
    b2f2:	6011      	str	r1, [r2, #0]
    b2f4:	f104 0542 	add.w	r5, r4, #66	; 0x42
    b2f8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    b2fc:	2301      	movs	r3, #1
    b2fe:	e08c      	b.n	b41a <_printf_i+0x1be>
    b300:	681b      	ldr	r3, [r3, #0]
    b302:	6011      	str	r1, [r2, #0]
    b304:	f010 0f40 	tst.w	r0, #64	; 0x40
    b308:	bf18      	it	ne
    b30a:	b21b      	sxthne	r3, r3
    b30c:	e7cf      	b.n	b2ae <_printf_i+0x52>
    b30e:	6813      	ldr	r3, [r2, #0]
    b310:	6825      	ldr	r5, [r4, #0]
    b312:	1d18      	adds	r0, r3, #4
    b314:	6010      	str	r0, [r2, #0]
    b316:	0628      	lsls	r0, r5, #24
    b318:	d501      	bpl.n	b31e <_printf_i+0xc2>
    b31a:	681b      	ldr	r3, [r3, #0]
    b31c:	e002      	b.n	b324 <_printf_i+0xc8>
    b31e:	0668      	lsls	r0, r5, #25
    b320:	d5fb      	bpl.n	b31a <_printf_i+0xbe>
    b322:	881b      	ldrh	r3, [r3, #0]
    b324:	4854      	ldr	r0, [pc, #336]	; (b478 <_printf_i+0x21c>)
    b326:	296f      	cmp	r1, #111	; 0x6f
    b328:	bf14      	ite	ne
    b32a:	220a      	movne	r2, #10
    b32c:	2208      	moveq	r2, #8
    b32e:	2100      	movs	r1, #0
    b330:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
    b334:	6865      	ldr	r5, [r4, #4]
    b336:	60a5      	str	r5, [r4, #8]
    b338:	2d00      	cmp	r5, #0
    b33a:	f2c0 8095 	blt.w	b468 <_printf_i+0x20c>
    b33e:	6821      	ldr	r1, [r4, #0]
    b340:	f021 0104 	bic.w	r1, r1, #4
    b344:	6021      	str	r1, [r4, #0]
    b346:	2b00      	cmp	r3, #0
    b348:	d13d      	bne.n	b3c6 <_printf_i+0x16a>
    b34a:	2d00      	cmp	r5, #0
    b34c:	f040 808e 	bne.w	b46c <_printf_i+0x210>
    b350:	4665      	mov	r5, ip
    b352:	2a08      	cmp	r2, #8
    b354:	d10b      	bne.n	b36e <_printf_i+0x112>
    b356:	6823      	ldr	r3, [r4, #0]
    b358:	07db      	lsls	r3, r3, #31
    b35a:	d508      	bpl.n	b36e <_printf_i+0x112>
    b35c:	6923      	ldr	r3, [r4, #16]
    b35e:	6862      	ldr	r2, [r4, #4]
    b360:	429a      	cmp	r2, r3
    b362:	bfde      	ittt	le
    b364:	2330      	movle	r3, #48	; 0x30
    b366:	f805 3c01 	strble.w	r3, [r5, #-1]
    b36a:	f105 35ff 	addle.w	r5, r5, #4294967295
    b36e:	ebac 0305 	sub.w	r3, ip, r5
    b372:	6123      	str	r3, [r4, #16]
    b374:	f8cd 8000 	str.w	r8, [sp]
    b378:	463b      	mov	r3, r7
    b37a:	aa03      	add	r2, sp, #12
    b37c:	4621      	mov	r1, r4
    b37e:	4630      	mov	r0, r6
    b380:	f7ff fef6 	bl	b170 <_printf_common>
    b384:	3001      	adds	r0, #1
    b386:	d14d      	bne.n	b424 <_printf_i+0x1c8>
    b388:	f04f 30ff 	mov.w	r0, #4294967295
    b38c:	b005      	add	sp, #20
    b38e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b392:	4839      	ldr	r0, [pc, #228]	; (b478 <_printf_i+0x21c>)
    b394:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
    b398:	6813      	ldr	r3, [r2, #0]
    b39a:	6821      	ldr	r1, [r4, #0]
    b39c:	1d1d      	adds	r5, r3, #4
    b39e:	681b      	ldr	r3, [r3, #0]
    b3a0:	6015      	str	r5, [r2, #0]
    b3a2:	060a      	lsls	r2, r1, #24
    b3a4:	d50b      	bpl.n	b3be <_printf_i+0x162>
    b3a6:	07ca      	lsls	r2, r1, #31
    b3a8:	bf44      	itt	mi
    b3aa:	f041 0120 	orrmi.w	r1, r1, #32
    b3ae:	6021      	strmi	r1, [r4, #0]
    b3b0:	b91b      	cbnz	r3, b3ba <_printf_i+0x15e>
    b3b2:	6822      	ldr	r2, [r4, #0]
    b3b4:	f022 0220 	bic.w	r2, r2, #32
    b3b8:	6022      	str	r2, [r4, #0]
    b3ba:	2210      	movs	r2, #16
    b3bc:	e7b7      	b.n	b32e <_printf_i+0xd2>
    b3be:	064d      	lsls	r5, r1, #25
    b3c0:	bf48      	it	mi
    b3c2:	b29b      	uxthmi	r3, r3
    b3c4:	e7ef      	b.n	b3a6 <_printf_i+0x14a>
    b3c6:	4665      	mov	r5, ip
    b3c8:	fbb3 f1f2 	udiv	r1, r3, r2
    b3cc:	fb02 3311 	mls	r3, r2, r1, r3
    b3d0:	5cc3      	ldrb	r3, [r0, r3]
    b3d2:	f805 3d01 	strb.w	r3, [r5, #-1]!
    b3d6:	460b      	mov	r3, r1
    b3d8:	2900      	cmp	r1, #0
    b3da:	d1f5      	bne.n	b3c8 <_printf_i+0x16c>
    b3dc:	e7b9      	b.n	b352 <_printf_i+0xf6>
    b3de:	6813      	ldr	r3, [r2, #0]
    b3e0:	6825      	ldr	r5, [r4, #0]
    b3e2:	6961      	ldr	r1, [r4, #20]
    b3e4:	1d18      	adds	r0, r3, #4
    b3e6:	6010      	str	r0, [r2, #0]
    b3e8:	0628      	lsls	r0, r5, #24
    b3ea:	681b      	ldr	r3, [r3, #0]
    b3ec:	d501      	bpl.n	b3f2 <_printf_i+0x196>
    b3ee:	6019      	str	r1, [r3, #0]
    b3f0:	e002      	b.n	b3f8 <_printf_i+0x19c>
    b3f2:	066a      	lsls	r2, r5, #25
    b3f4:	d5fb      	bpl.n	b3ee <_printf_i+0x192>
    b3f6:	8019      	strh	r1, [r3, #0]
    b3f8:	2300      	movs	r3, #0
    b3fa:	6123      	str	r3, [r4, #16]
    b3fc:	4665      	mov	r5, ip
    b3fe:	e7b9      	b.n	b374 <_printf_i+0x118>
    b400:	6813      	ldr	r3, [r2, #0]
    b402:	1d19      	adds	r1, r3, #4
    b404:	6011      	str	r1, [r2, #0]
    b406:	681d      	ldr	r5, [r3, #0]
    b408:	6862      	ldr	r2, [r4, #4]
    b40a:	2100      	movs	r1, #0
    b40c:	4628      	mov	r0, r5
    b40e:	f000 fec7 	bl	c1a0 <memchr>
    b412:	b108      	cbz	r0, b418 <_printf_i+0x1bc>
    b414:	1b40      	subs	r0, r0, r5
    b416:	6060      	str	r0, [r4, #4]
    b418:	6863      	ldr	r3, [r4, #4]
    b41a:	6123      	str	r3, [r4, #16]
    b41c:	2300      	movs	r3, #0
    b41e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    b422:	e7a7      	b.n	b374 <_printf_i+0x118>
    b424:	6923      	ldr	r3, [r4, #16]
    b426:	462a      	mov	r2, r5
    b428:	4639      	mov	r1, r7
    b42a:	4630      	mov	r0, r6
    b42c:	47c0      	blx	r8
    b42e:	3001      	adds	r0, #1
    b430:	d0aa      	beq.n	b388 <_printf_i+0x12c>
    b432:	6823      	ldr	r3, [r4, #0]
    b434:	079b      	lsls	r3, r3, #30
    b436:	d413      	bmi.n	b460 <_printf_i+0x204>
    b438:	68e0      	ldr	r0, [r4, #12]
    b43a:	9b03      	ldr	r3, [sp, #12]
    b43c:	4298      	cmp	r0, r3
    b43e:	bfb8      	it	lt
    b440:	4618      	movlt	r0, r3
    b442:	e7a3      	b.n	b38c <_printf_i+0x130>
    b444:	2301      	movs	r3, #1
    b446:	464a      	mov	r2, r9
    b448:	4639      	mov	r1, r7
    b44a:	4630      	mov	r0, r6
    b44c:	47c0      	blx	r8
    b44e:	3001      	adds	r0, #1
    b450:	d09a      	beq.n	b388 <_printf_i+0x12c>
    b452:	3501      	adds	r5, #1
    b454:	68e3      	ldr	r3, [r4, #12]
    b456:	9a03      	ldr	r2, [sp, #12]
    b458:	1a9b      	subs	r3, r3, r2
    b45a:	42ab      	cmp	r3, r5
    b45c:	dcf2      	bgt.n	b444 <_printf_i+0x1e8>
    b45e:	e7eb      	b.n	b438 <_printf_i+0x1dc>
    b460:	2500      	movs	r5, #0
    b462:	f104 0919 	add.w	r9, r4, #25
    b466:	e7f5      	b.n	b454 <_printf_i+0x1f8>
    b468:	2b00      	cmp	r3, #0
    b46a:	d1ac      	bne.n	b3c6 <_printf_i+0x16a>
    b46c:	7803      	ldrb	r3, [r0, #0]
    b46e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    b472:	f104 0542 	add.w	r5, r4, #66	; 0x42
    b476:	e76c      	b.n	b352 <_printf_i+0xf6>
    b478:	0000eb8e 	.word	0x0000eb8e
    b47c:	0000eb9f 	.word	0x0000eb9f

0000b480 <_sbrk_r>:
    b480:	b538      	push	{r3, r4, r5, lr}
    b482:	4c06      	ldr	r4, [pc, #24]	; (b49c <_sbrk_r+0x1c>)
    b484:	2300      	movs	r3, #0
    b486:	4605      	mov	r5, r0
    b488:	4608      	mov	r0, r1
    b48a:	6023      	str	r3, [r4, #0]
    b48c:	f7fd fe78 	bl	9180 <_sbrk>
    b490:	1c43      	adds	r3, r0, #1
    b492:	d102      	bne.n	b49a <_sbrk_r+0x1a>
    b494:	6823      	ldr	r3, [r4, #0]
    b496:	b103      	cbz	r3, b49a <_sbrk_r+0x1a>
    b498:	602b      	str	r3, [r5, #0]
    b49a:	bd38      	pop	{r3, r4, r5, pc}
    b49c:	0001f218 	.word	0x0001f218

0000b4a0 <siprintf>:
    b4a0:	b40e      	push	{r1, r2, r3}
    b4a2:	b500      	push	{lr}
    b4a4:	b09c      	sub	sp, #112	; 0x70
    b4a6:	ab1d      	add	r3, sp, #116	; 0x74
    b4a8:	9002      	str	r0, [sp, #8]
    b4aa:	9006      	str	r0, [sp, #24]
    b4ac:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    b4b0:	4809      	ldr	r0, [pc, #36]	; (b4d8 <siprintf+0x38>)
    b4b2:	9107      	str	r1, [sp, #28]
    b4b4:	9104      	str	r1, [sp, #16]
    b4b6:	4909      	ldr	r1, [pc, #36]	; (b4dc <siprintf+0x3c>)
    b4b8:	f853 2b04 	ldr.w	r2, [r3], #4
    b4bc:	9105      	str	r1, [sp, #20]
    b4be:	6800      	ldr	r0, [r0, #0]
    b4c0:	9301      	str	r3, [sp, #4]
    b4c2:	a902      	add	r1, sp, #8
    b4c4:	f001 fa0c 	bl	c8e0 <_svfiprintf_r>
    b4c8:	9b02      	ldr	r3, [sp, #8]
    b4ca:	2200      	movs	r2, #0
    b4cc:	701a      	strb	r2, [r3, #0]
    b4ce:	b01c      	add	sp, #112	; 0x70
    b4d0:	f85d eb04 	ldr.w	lr, [sp], #4
    b4d4:	b003      	add	sp, #12
    b4d6:	4770      	bx	lr
    b4d8:	0001efd8 	.word	0x0001efd8
    b4dc:	ffff0208 	.word	0xffff0208

0000b4e0 <strlen>:
    b4e0:	4603      	mov	r3, r0
    b4e2:	f813 2b01 	ldrb.w	r2, [r3], #1
    b4e6:	2a00      	cmp	r2, #0
    b4e8:	d1fb      	bne.n	b4e2 <strlen+0x2>
    b4ea:	1a18      	subs	r0, r3, r0
    b4ec:	3801      	subs	r0, #1
    b4ee:	4770      	bx	lr

0000b4f0 <quorem>:
    b4f0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b4f4:	6903      	ldr	r3, [r0, #16]
    b4f6:	690c      	ldr	r4, [r1, #16]
    b4f8:	42a3      	cmp	r3, r4
    b4fa:	4680      	mov	r8, r0
    b4fc:	f2c0 8082 	blt.w	b604 <quorem+0x114>
    b500:	3c01      	subs	r4, #1
    b502:	f101 0714 	add.w	r7, r1, #20
    b506:	ea4f 0c84 	mov.w	ip, r4, lsl #2
    b50a:	f100 0614 	add.w	r6, r0, #20
    b50e:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
    b512:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
    b516:	eb06 030c 	add.w	r3, r6, ip
    b51a:	3501      	adds	r5, #1
    b51c:	eb07 090c 	add.w	r9, r7, ip
    b520:	9301      	str	r3, [sp, #4]
    b522:	fbb0 f5f5 	udiv	r5, r0, r5
    b526:	b395      	cbz	r5, b58e <quorem+0x9e>
    b528:	f04f 0a00 	mov.w	sl, #0
    b52c:	4638      	mov	r0, r7
    b52e:	46b6      	mov	lr, r6
    b530:	46d3      	mov	fp, sl
    b532:	f850 2b04 	ldr.w	r2, [r0], #4
    b536:	b293      	uxth	r3, r2
    b538:	fb05 a303 	mla	r3, r5, r3, sl
    b53c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    b540:	b29b      	uxth	r3, r3
    b542:	ebab 0303 	sub.w	r3, fp, r3
    b546:	0c12      	lsrs	r2, r2, #16
    b548:	f8de b000 	ldr.w	fp, [lr]
    b54c:	fb05 a202 	mla	r2, r5, r2, sl
    b550:	fa13 f38b 	uxtah	r3, r3, fp
    b554:	ea4f 4a12 	mov.w	sl, r2, lsr #16
    b558:	fa1f fb82 	uxth.w	fp, r2
    b55c:	f8de 2000 	ldr.w	r2, [lr]
    b560:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
    b564:	eb02 4223 	add.w	r2, r2, r3, asr #16
    b568:	b29b      	uxth	r3, r3
    b56a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    b56e:	4581      	cmp	r9, r0
    b570:	ea4f 4b22 	mov.w	fp, r2, asr #16
    b574:	f84e 3b04 	str.w	r3, [lr], #4
    b578:	d2db      	bcs.n	b532 <quorem+0x42>
    b57a:	f856 300c 	ldr.w	r3, [r6, ip]
    b57e:	b933      	cbnz	r3, b58e <quorem+0x9e>
    b580:	9b01      	ldr	r3, [sp, #4]
    b582:	3b04      	subs	r3, #4
    b584:	429e      	cmp	r6, r3
    b586:	461a      	mov	r2, r3
    b588:	d330      	bcc.n	b5ec <quorem+0xfc>
    b58a:	f8c8 4010 	str.w	r4, [r8, #16]
    b58e:	4640      	mov	r0, r8
    b590:	f001 f878 	bl	c684 <__mcmp>
    b594:	2800      	cmp	r0, #0
    b596:	db25      	blt.n	b5e4 <quorem+0xf4>
    b598:	3501      	adds	r5, #1
    b59a:	4630      	mov	r0, r6
    b59c:	f04f 0c00 	mov.w	ip, #0
    b5a0:	f857 2b04 	ldr.w	r2, [r7], #4
    b5a4:	f8d0 e000 	ldr.w	lr, [r0]
    b5a8:	b293      	uxth	r3, r2
    b5aa:	ebac 0303 	sub.w	r3, ip, r3
    b5ae:	0c12      	lsrs	r2, r2, #16
    b5b0:	fa13 f38e 	uxtah	r3, r3, lr
    b5b4:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
    b5b8:	eb02 4223 	add.w	r2, r2, r3, asr #16
    b5bc:	b29b      	uxth	r3, r3
    b5be:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    b5c2:	45b9      	cmp	r9, r7
    b5c4:	ea4f 4c22 	mov.w	ip, r2, asr #16
    b5c8:	f840 3b04 	str.w	r3, [r0], #4
    b5cc:	d2e8      	bcs.n	b5a0 <quorem+0xb0>
    b5ce:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
    b5d2:	eb06 0384 	add.w	r3, r6, r4, lsl #2
    b5d6:	b92a      	cbnz	r2, b5e4 <quorem+0xf4>
    b5d8:	3b04      	subs	r3, #4
    b5da:	429e      	cmp	r6, r3
    b5dc:	461a      	mov	r2, r3
    b5de:	d30b      	bcc.n	b5f8 <quorem+0x108>
    b5e0:	f8c8 4010 	str.w	r4, [r8, #16]
    b5e4:	4628      	mov	r0, r5
    b5e6:	b003      	add	sp, #12
    b5e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b5ec:	6812      	ldr	r2, [r2, #0]
    b5ee:	3b04      	subs	r3, #4
    b5f0:	2a00      	cmp	r2, #0
    b5f2:	d1ca      	bne.n	b58a <quorem+0x9a>
    b5f4:	3c01      	subs	r4, #1
    b5f6:	e7c5      	b.n	b584 <quorem+0x94>
    b5f8:	6812      	ldr	r2, [r2, #0]
    b5fa:	3b04      	subs	r3, #4
    b5fc:	2a00      	cmp	r2, #0
    b5fe:	d1ef      	bne.n	b5e0 <quorem+0xf0>
    b600:	3c01      	subs	r4, #1
    b602:	e7ea      	b.n	b5da <quorem+0xea>
    b604:	2000      	movs	r0, #0
    b606:	e7ee      	b.n	b5e6 <quorem+0xf6>

0000b608 <_dtoa_r>:
    b608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b60c:	ec57 6b10 	vmov	r6, r7, d0
    b610:	b097      	sub	sp, #92	; 0x5c
    b612:	6a45      	ldr	r5, [r0, #36]	; 0x24
    b614:	9106      	str	r1, [sp, #24]
    b616:	4604      	mov	r4, r0
    b618:	920b      	str	r2, [sp, #44]	; 0x2c
    b61a:	9312      	str	r3, [sp, #72]	; 0x48
    b61c:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
    b620:	e9cd 6700 	strd	r6, r7, [sp]
    b624:	b93d      	cbnz	r5, b636 <_dtoa_r+0x2e>
    b626:	2010      	movs	r0, #16
    b628:	f7ff fa0e 	bl	aa48 <malloc>
    b62c:	6260      	str	r0, [r4, #36]	; 0x24
    b62e:	e9c0 5501 	strd	r5, r5, [r0, #4]
    b632:	6005      	str	r5, [r0, #0]
    b634:	60c5      	str	r5, [r0, #12]
    b636:	6a63      	ldr	r3, [r4, #36]	; 0x24
    b638:	6819      	ldr	r1, [r3, #0]
    b63a:	b151      	cbz	r1, b652 <_dtoa_r+0x4a>
    b63c:	685a      	ldr	r2, [r3, #4]
    b63e:	604a      	str	r2, [r1, #4]
    b640:	2301      	movs	r3, #1
    b642:	4093      	lsls	r3, r2
    b644:	608b      	str	r3, [r1, #8]
    b646:	4620      	mov	r0, r4
    b648:	f000 fe3b 	bl	c2c2 <_Bfree>
    b64c:	6a63      	ldr	r3, [r4, #36]	; 0x24
    b64e:	2200      	movs	r2, #0
    b650:	601a      	str	r2, [r3, #0]
    b652:	1e3b      	subs	r3, r7, #0
    b654:	bfbb      	ittet	lt
    b656:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
    b65a:	9301      	strlt	r3, [sp, #4]
    b65c:	2300      	movge	r3, #0
    b65e:	2201      	movlt	r2, #1
    b660:	bfac      	ite	ge
    b662:	f8c8 3000 	strge.w	r3, [r8]
    b666:	f8c8 2000 	strlt.w	r2, [r8]
    b66a:	4baf      	ldr	r3, [pc, #700]	; (b928 <_dtoa_r+0x320>)
    b66c:	f8dd 8004 	ldr.w	r8, [sp, #4]
    b670:	ea33 0308 	bics.w	r3, r3, r8
    b674:	d114      	bne.n	b6a0 <_dtoa_r+0x98>
    b676:	9a12      	ldr	r2, [sp, #72]	; 0x48
    b678:	f242 730f 	movw	r3, #9999	; 0x270f
    b67c:	6013      	str	r3, [r2, #0]
    b67e:	9b00      	ldr	r3, [sp, #0]
    b680:	b923      	cbnz	r3, b68c <_dtoa_r+0x84>
    b682:	f3c8 0013 	ubfx	r0, r8, #0, #20
    b686:	2800      	cmp	r0, #0
    b688:	f000 8542 	beq.w	c110 <_dtoa_r+0xb08>
    b68c:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b68e:	f8df b2ac 	ldr.w	fp, [pc, #684]	; b93c <_dtoa_r+0x334>
    b692:	2b00      	cmp	r3, #0
    b694:	f000 8544 	beq.w	c120 <_dtoa_r+0xb18>
    b698:	f10b 0303 	add.w	r3, fp, #3
    b69c:	f000 bd3e 	b.w	c11c <_dtoa_r+0xb14>
    b6a0:	e9dd 6700 	ldrd	r6, r7, [sp]
    b6a4:	2200      	movs	r2, #0
    b6a6:	2300      	movs	r3, #0
    b6a8:	4630      	mov	r0, r6
    b6aa:	4639      	mov	r1, r7
    b6ac:	f003 f802 	bl	e6b4 <__aeabi_dcmpeq>
    b6b0:	4681      	mov	r9, r0
    b6b2:	b168      	cbz	r0, b6d0 <_dtoa_r+0xc8>
    b6b4:	9a12      	ldr	r2, [sp, #72]	; 0x48
    b6b6:	2301      	movs	r3, #1
    b6b8:	6013      	str	r3, [r2, #0]
    b6ba:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b6bc:	2b00      	cmp	r3, #0
    b6be:	f000 8524 	beq.w	c10a <_dtoa_r+0xb02>
    b6c2:	4b9a      	ldr	r3, [pc, #616]	; (b92c <_dtoa_r+0x324>)
    b6c4:	9a21      	ldr	r2, [sp, #132]	; 0x84
    b6c6:	f103 3bff 	add.w	fp, r3, #4294967295
    b6ca:	6013      	str	r3, [r2, #0]
    b6cc:	f000 bd28 	b.w	c120 <_dtoa_r+0xb18>
    b6d0:	aa14      	add	r2, sp, #80	; 0x50
    b6d2:	a915      	add	r1, sp, #84	; 0x54
    b6d4:	ec47 6b10 	vmov	d0, r6, r7
    b6d8:	4620      	mov	r0, r4
    b6da:	f001 f84a 	bl	c772 <__d2b>
    b6de:	f3c8 550a 	ubfx	r5, r8, #20, #11
    b6e2:	9004      	str	r0, [sp, #16]
    b6e4:	2d00      	cmp	r5, #0
    b6e6:	d07c      	beq.n	b7e2 <_dtoa_r+0x1da>
    b6e8:	f3c7 0313 	ubfx	r3, r7, #0, #20
    b6ec:	f043 5b7f 	orr.w	fp, r3, #1069547520	; 0x3fc00000
    b6f0:	46b2      	mov	sl, r6
    b6f2:	f44b 1b40 	orr.w	fp, fp, #3145728	; 0x300000
    b6f6:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
    b6fa:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
    b6fe:	2200      	movs	r2, #0
    b700:	4b8b      	ldr	r3, [pc, #556]	; (b930 <_dtoa_r+0x328>)
    b702:	4650      	mov	r0, sl
    b704:	4659      	mov	r1, fp
    b706:	f002 fbb5 	bl	de74 <__aeabi_dsub>
    b70a:	a381      	add	r3, pc, #516	; (adr r3, b910 <_dtoa_r+0x308>)
    b70c:	e9d3 2300 	ldrd	r2, r3, [r3]
    b710:	f002 fd68 	bl	e1e4 <__aeabi_dmul>
    b714:	a380      	add	r3, pc, #512	; (adr r3, b918 <_dtoa_r+0x310>)
    b716:	e9d3 2300 	ldrd	r2, r3, [r3]
    b71a:	f002 fbad 	bl	de78 <__adddf3>
    b71e:	4606      	mov	r6, r0
    b720:	4628      	mov	r0, r5
    b722:	460f      	mov	r7, r1
    b724:	f002 fcf4 	bl	e110 <__aeabi_i2d>
    b728:	a37d      	add	r3, pc, #500	; (adr r3, b920 <_dtoa_r+0x318>)
    b72a:	e9d3 2300 	ldrd	r2, r3, [r3]
    b72e:	f002 fd59 	bl	e1e4 <__aeabi_dmul>
    b732:	4602      	mov	r2, r0
    b734:	460b      	mov	r3, r1
    b736:	4630      	mov	r0, r6
    b738:	4639      	mov	r1, r7
    b73a:	f002 fb9d 	bl	de78 <__adddf3>
    b73e:	4606      	mov	r6, r0
    b740:	460f      	mov	r7, r1
    b742:	f002 ffff 	bl	e744 <__aeabi_d2iz>
    b746:	2200      	movs	r2, #0
    b748:	4682      	mov	sl, r0
    b74a:	2300      	movs	r3, #0
    b74c:	4630      	mov	r0, r6
    b74e:	4639      	mov	r1, r7
    b750:	f002 ffba 	bl	e6c8 <__aeabi_dcmplt>
    b754:	b148      	cbz	r0, b76a <_dtoa_r+0x162>
    b756:	4650      	mov	r0, sl
    b758:	f002 fcda 	bl	e110 <__aeabi_i2d>
    b75c:	4632      	mov	r2, r6
    b75e:	463b      	mov	r3, r7
    b760:	f002 ffa8 	bl	e6b4 <__aeabi_dcmpeq>
    b764:	b908      	cbnz	r0, b76a <_dtoa_r+0x162>
    b766:	f10a 3aff 	add.w	sl, sl, #4294967295
    b76a:	f1ba 0f16 	cmp.w	sl, #22
    b76e:	d859      	bhi.n	b824 <_dtoa_r+0x21c>
    b770:	4970      	ldr	r1, [pc, #448]	; (b934 <_dtoa_r+0x32c>)
    b772:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
    b776:	e9dd 2300 	ldrd	r2, r3, [sp]
    b77a:	e9d1 0100 	ldrd	r0, r1, [r1]
    b77e:	f002 ffc1 	bl	e704 <__aeabi_dcmpgt>
    b782:	2800      	cmp	r0, #0
    b784:	d050      	beq.n	b828 <_dtoa_r+0x220>
    b786:	f10a 3aff 	add.w	sl, sl, #4294967295
    b78a:	2300      	movs	r3, #0
    b78c:	930f      	str	r3, [sp, #60]	; 0x3c
    b78e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    b790:	1b5d      	subs	r5, r3, r5
    b792:	f1b5 0801 	subs.w	r8, r5, #1
    b796:	bf49      	itett	mi
    b798:	f1c5 0301 	rsbmi	r3, r5, #1
    b79c:	2300      	movpl	r3, #0
    b79e:	9305      	strmi	r3, [sp, #20]
    b7a0:	f04f 0800 	movmi.w	r8, #0
    b7a4:	bf58      	it	pl
    b7a6:	9305      	strpl	r3, [sp, #20]
    b7a8:	f1ba 0f00 	cmp.w	sl, #0
    b7ac:	db3e      	blt.n	b82c <_dtoa_r+0x224>
    b7ae:	2300      	movs	r3, #0
    b7b0:	44d0      	add	r8, sl
    b7b2:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
    b7b6:	9307      	str	r3, [sp, #28]
    b7b8:	9b06      	ldr	r3, [sp, #24]
    b7ba:	2b09      	cmp	r3, #9
    b7bc:	f200 8090 	bhi.w	b8e0 <_dtoa_r+0x2d8>
    b7c0:	2b05      	cmp	r3, #5
    b7c2:	bfc4      	itt	gt
    b7c4:	3b04      	subgt	r3, #4
    b7c6:	9306      	strgt	r3, [sp, #24]
    b7c8:	9b06      	ldr	r3, [sp, #24]
    b7ca:	f1a3 0302 	sub.w	r3, r3, #2
    b7ce:	bfcc      	ite	gt
    b7d0:	2500      	movgt	r5, #0
    b7d2:	2501      	movle	r5, #1
    b7d4:	2b03      	cmp	r3, #3
    b7d6:	f200 808f 	bhi.w	b8f8 <_dtoa_r+0x2f0>
    b7da:	e8df f003 	tbb	[pc, r3]
    b7de:	7f7d      	.short	0x7f7d
    b7e0:	7131      	.short	0x7131
    b7e2:	e9dd 5314 	ldrd	r5, r3, [sp, #80]	; 0x50
    b7e6:	441d      	add	r5, r3
    b7e8:	f205 4032 	addw	r0, r5, #1074	; 0x432
    b7ec:	2820      	cmp	r0, #32
    b7ee:	dd13      	ble.n	b818 <_dtoa_r+0x210>
    b7f0:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
    b7f4:	9b00      	ldr	r3, [sp, #0]
    b7f6:	fa08 f800 	lsl.w	r8, r8, r0
    b7fa:	f205 4012 	addw	r0, r5, #1042	; 0x412
    b7fe:	fa23 f000 	lsr.w	r0, r3, r0
    b802:	ea48 0000 	orr.w	r0, r8, r0
    b806:	f002 fc73 	bl	e0f0 <__aeabi_ui2d>
    b80a:	2301      	movs	r3, #1
    b80c:	4682      	mov	sl, r0
    b80e:	f1a1 7bf8 	sub.w	fp, r1, #32505856	; 0x1f00000
    b812:	3d01      	subs	r5, #1
    b814:	9313      	str	r3, [sp, #76]	; 0x4c
    b816:	e772      	b.n	b6fe <_dtoa_r+0xf6>
    b818:	9b00      	ldr	r3, [sp, #0]
    b81a:	f1c0 0020 	rsb	r0, r0, #32
    b81e:	fa03 f000 	lsl.w	r0, r3, r0
    b822:	e7f0      	b.n	b806 <_dtoa_r+0x1fe>
    b824:	2301      	movs	r3, #1
    b826:	e7b1      	b.n	b78c <_dtoa_r+0x184>
    b828:	900f      	str	r0, [sp, #60]	; 0x3c
    b82a:	e7b0      	b.n	b78e <_dtoa_r+0x186>
    b82c:	9b05      	ldr	r3, [sp, #20]
    b82e:	eba3 030a 	sub.w	r3, r3, sl
    b832:	9305      	str	r3, [sp, #20]
    b834:	f1ca 0300 	rsb	r3, sl, #0
    b838:	9307      	str	r3, [sp, #28]
    b83a:	2300      	movs	r3, #0
    b83c:	930e      	str	r3, [sp, #56]	; 0x38
    b83e:	e7bb      	b.n	b7b8 <_dtoa_r+0x1b0>
    b840:	2301      	movs	r3, #1
    b842:	930a      	str	r3, [sp, #40]	; 0x28
    b844:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b846:	2b00      	cmp	r3, #0
    b848:	dd59      	ble.n	b8fe <_dtoa_r+0x2f6>
    b84a:	9302      	str	r3, [sp, #8]
    b84c:	4699      	mov	r9, r3
    b84e:	6a66      	ldr	r6, [r4, #36]	; 0x24
    b850:	2200      	movs	r2, #0
    b852:	6072      	str	r2, [r6, #4]
    b854:	2204      	movs	r2, #4
    b856:	f102 0014 	add.w	r0, r2, #20
    b85a:	4298      	cmp	r0, r3
    b85c:	6871      	ldr	r1, [r6, #4]
    b85e:	d953      	bls.n	b908 <_dtoa_r+0x300>
    b860:	4620      	mov	r0, r4
    b862:	f000 fcfa 	bl	c25a <_Balloc>
    b866:	6a63      	ldr	r3, [r4, #36]	; 0x24
    b868:	6030      	str	r0, [r6, #0]
    b86a:	f1b9 0f0e 	cmp.w	r9, #14
    b86e:	f8d3 b000 	ldr.w	fp, [r3]
    b872:	f200 80e6 	bhi.w	ba42 <_dtoa_r+0x43a>
    b876:	2d00      	cmp	r5, #0
    b878:	f000 80e3 	beq.w	ba42 <_dtoa_r+0x43a>
    b87c:	ed9d 7b00 	vldr	d7, [sp]
    b880:	f1ba 0f00 	cmp.w	sl, #0
    b884:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
    b888:	dd74      	ble.n	b974 <_dtoa_r+0x36c>
    b88a:	4a2a      	ldr	r2, [pc, #168]	; (b934 <_dtoa_r+0x32c>)
    b88c:	f00a 030f 	and.w	r3, sl, #15
    b890:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
    b894:	ed93 7b00 	vldr	d7, [r3]
    b898:	ea4f 162a 	mov.w	r6, sl, asr #4
    b89c:	06f0      	lsls	r0, r6, #27
    b89e:	ed8d 7b08 	vstr	d7, [sp, #32]
    b8a2:	d565      	bpl.n	b970 <_dtoa_r+0x368>
    b8a4:	4b24      	ldr	r3, [pc, #144]	; (b938 <_dtoa_r+0x330>)
    b8a6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
    b8aa:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
    b8ae:	f002 fdc3 	bl	e438 <__aeabi_ddiv>
    b8b2:	e9cd 0100 	strd	r0, r1, [sp]
    b8b6:	f006 060f 	and.w	r6, r6, #15
    b8ba:	2503      	movs	r5, #3
    b8bc:	4f1e      	ldr	r7, [pc, #120]	; (b938 <_dtoa_r+0x330>)
    b8be:	e04c      	b.n	b95a <_dtoa_r+0x352>
    b8c0:	2301      	movs	r3, #1
    b8c2:	930a      	str	r3, [sp, #40]	; 0x28
    b8c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b8c6:	4453      	add	r3, sl
    b8c8:	f103 0901 	add.w	r9, r3, #1
    b8cc:	9302      	str	r3, [sp, #8]
    b8ce:	464b      	mov	r3, r9
    b8d0:	2b01      	cmp	r3, #1
    b8d2:	bfb8      	it	lt
    b8d4:	2301      	movlt	r3, #1
    b8d6:	e7ba      	b.n	b84e <_dtoa_r+0x246>
    b8d8:	2300      	movs	r3, #0
    b8da:	e7b2      	b.n	b842 <_dtoa_r+0x23a>
    b8dc:	2300      	movs	r3, #0
    b8de:	e7f0      	b.n	b8c2 <_dtoa_r+0x2ba>
    b8e0:	2501      	movs	r5, #1
    b8e2:	2300      	movs	r3, #0
    b8e4:	9306      	str	r3, [sp, #24]
    b8e6:	950a      	str	r5, [sp, #40]	; 0x28
    b8e8:	f04f 33ff 	mov.w	r3, #4294967295
    b8ec:	9302      	str	r3, [sp, #8]
    b8ee:	4699      	mov	r9, r3
    b8f0:	2200      	movs	r2, #0
    b8f2:	2312      	movs	r3, #18
    b8f4:	920b      	str	r2, [sp, #44]	; 0x2c
    b8f6:	e7aa      	b.n	b84e <_dtoa_r+0x246>
    b8f8:	2301      	movs	r3, #1
    b8fa:	930a      	str	r3, [sp, #40]	; 0x28
    b8fc:	e7f4      	b.n	b8e8 <_dtoa_r+0x2e0>
    b8fe:	2301      	movs	r3, #1
    b900:	9302      	str	r3, [sp, #8]
    b902:	4699      	mov	r9, r3
    b904:	461a      	mov	r2, r3
    b906:	e7f5      	b.n	b8f4 <_dtoa_r+0x2ec>
    b908:	3101      	adds	r1, #1
    b90a:	6071      	str	r1, [r6, #4]
    b90c:	0052      	lsls	r2, r2, #1
    b90e:	e7a2      	b.n	b856 <_dtoa_r+0x24e>
    b910:	636f4361 	.word	0x636f4361
    b914:	3fd287a7 	.word	0x3fd287a7
    b918:	8b60c8b3 	.word	0x8b60c8b3
    b91c:	3fc68a28 	.word	0x3fc68a28
    b920:	509f79fb 	.word	0x509f79fb
    b924:	3fd34413 	.word	0x3fd34413
    b928:	7ff00000 	.word	0x7ff00000
    b92c:	0000eb8d 	.word	0x0000eb8d
    b930:	3ff80000 	.word	0x3ff80000
    b934:	0000ebe8 	.word	0x0000ebe8
    b938:	0000ebc0 	.word	0x0000ebc0
    b93c:	0000ebb9 	.word	0x0000ebb9
    b940:	07f1      	lsls	r1, r6, #31
    b942:	d508      	bpl.n	b956 <_dtoa_r+0x34e>
    b944:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
    b948:	e9d7 2300 	ldrd	r2, r3, [r7]
    b94c:	f002 fc4a 	bl	e1e4 <__aeabi_dmul>
    b950:	e9cd 0108 	strd	r0, r1, [sp, #32]
    b954:	3501      	adds	r5, #1
    b956:	1076      	asrs	r6, r6, #1
    b958:	3708      	adds	r7, #8
    b95a:	2e00      	cmp	r6, #0
    b95c:	d1f0      	bne.n	b940 <_dtoa_r+0x338>
    b95e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
    b962:	e9dd 0100 	ldrd	r0, r1, [sp]
    b966:	f002 fd67 	bl	e438 <__aeabi_ddiv>
    b96a:	e9cd 0100 	strd	r0, r1, [sp]
    b96e:	e01a      	b.n	b9a6 <_dtoa_r+0x39e>
    b970:	2502      	movs	r5, #2
    b972:	e7a3      	b.n	b8bc <_dtoa_r+0x2b4>
    b974:	f000 80a0 	beq.w	bab8 <_dtoa_r+0x4b0>
    b978:	f1ca 0600 	rsb	r6, sl, #0
    b97c:	4b9f      	ldr	r3, [pc, #636]	; (bbfc <_dtoa_r+0x5f4>)
    b97e:	4fa0      	ldr	r7, [pc, #640]	; (bc00 <_dtoa_r+0x5f8>)
    b980:	f006 020f 	and.w	r2, r6, #15
    b984:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    b988:	e9d3 2300 	ldrd	r2, r3, [r3]
    b98c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
    b990:	f002 fc28 	bl	e1e4 <__aeabi_dmul>
    b994:	e9cd 0100 	strd	r0, r1, [sp]
    b998:	1136      	asrs	r6, r6, #4
    b99a:	2300      	movs	r3, #0
    b99c:	2502      	movs	r5, #2
    b99e:	2e00      	cmp	r6, #0
    b9a0:	d17f      	bne.n	baa2 <_dtoa_r+0x49a>
    b9a2:	2b00      	cmp	r3, #0
    b9a4:	d1e1      	bne.n	b96a <_dtoa_r+0x362>
    b9a6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b9a8:	2b00      	cmp	r3, #0
    b9aa:	f000 8087 	beq.w	babc <_dtoa_r+0x4b4>
    b9ae:	e9dd 6700 	ldrd	r6, r7, [sp]
    b9b2:	2200      	movs	r2, #0
    b9b4:	4b93      	ldr	r3, [pc, #588]	; (bc04 <_dtoa_r+0x5fc>)
    b9b6:	4630      	mov	r0, r6
    b9b8:	4639      	mov	r1, r7
    b9ba:	f002 fe85 	bl	e6c8 <__aeabi_dcmplt>
    b9be:	2800      	cmp	r0, #0
    b9c0:	d07c      	beq.n	babc <_dtoa_r+0x4b4>
    b9c2:	f1b9 0f00 	cmp.w	r9, #0
    b9c6:	d079      	beq.n	babc <_dtoa_r+0x4b4>
    b9c8:	9b02      	ldr	r3, [sp, #8]
    b9ca:	2b00      	cmp	r3, #0
    b9cc:	dd35      	ble.n	ba3a <_dtoa_r+0x432>
    b9ce:	f10a 33ff 	add.w	r3, sl, #4294967295
    b9d2:	9308      	str	r3, [sp, #32]
    b9d4:	4639      	mov	r1, r7
    b9d6:	2200      	movs	r2, #0
    b9d8:	4b8b      	ldr	r3, [pc, #556]	; (bc08 <_dtoa_r+0x600>)
    b9da:	4630      	mov	r0, r6
    b9dc:	f002 fc02 	bl	e1e4 <__aeabi_dmul>
    b9e0:	e9cd 0100 	strd	r0, r1, [sp]
    b9e4:	9f02      	ldr	r7, [sp, #8]
    b9e6:	3501      	adds	r5, #1
    b9e8:	4628      	mov	r0, r5
    b9ea:	f002 fb91 	bl	e110 <__aeabi_i2d>
    b9ee:	e9dd 2300 	ldrd	r2, r3, [sp]
    b9f2:	f002 fbf7 	bl	e1e4 <__aeabi_dmul>
    b9f6:	2200      	movs	r2, #0
    b9f8:	4b84      	ldr	r3, [pc, #528]	; (bc0c <_dtoa_r+0x604>)
    b9fa:	f002 fa3d 	bl	de78 <__adddf3>
    b9fe:	4605      	mov	r5, r0
    ba00:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
    ba04:	2f00      	cmp	r7, #0
    ba06:	d15d      	bne.n	bac4 <_dtoa_r+0x4bc>
    ba08:	2200      	movs	r2, #0
    ba0a:	4b81      	ldr	r3, [pc, #516]	; (bc10 <_dtoa_r+0x608>)
    ba0c:	e9dd 0100 	ldrd	r0, r1, [sp]
    ba10:	f002 fa30 	bl	de74 <__aeabi_dsub>
    ba14:	462a      	mov	r2, r5
    ba16:	4633      	mov	r3, r6
    ba18:	e9cd 0100 	strd	r0, r1, [sp]
    ba1c:	f002 fe72 	bl	e704 <__aeabi_dcmpgt>
    ba20:	2800      	cmp	r0, #0
    ba22:	f040 8288 	bne.w	bf36 <_dtoa_r+0x92e>
    ba26:	462a      	mov	r2, r5
    ba28:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
    ba2c:	e9dd 0100 	ldrd	r0, r1, [sp]
    ba30:	f002 fe4a 	bl	e6c8 <__aeabi_dcmplt>
    ba34:	2800      	cmp	r0, #0
    ba36:	f040 827c 	bne.w	bf32 <_dtoa_r+0x92a>
    ba3a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
    ba3e:	e9cd 2300 	strd	r2, r3, [sp]
    ba42:	9b15      	ldr	r3, [sp, #84]	; 0x54
    ba44:	2b00      	cmp	r3, #0
    ba46:	f2c0 8150 	blt.w	bcea <_dtoa_r+0x6e2>
    ba4a:	f1ba 0f0e 	cmp.w	sl, #14
    ba4e:	f300 814c 	bgt.w	bcea <_dtoa_r+0x6e2>
    ba52:	4b6a      	ldr	r3, [pc, #424]	; (bbfc <_dtoa_r+0x5f4>)
    ba54:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
    ba58:	ed93 7b00 	vldr	d7, [r3]
    ba5c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ba5e:	2b00      	cmp	r3, #0
    ba60:	ed8d 7b02 	vstr	d7, [sp, #8]
    ba64:	f280 80d8 	bge.w	bc18 <_dtoa_r+0x610>
    ba68:	f1b9 0f00 	cmp.w	r9, #0
    ba6c:	f300 80d4 	bgt.w	bc18 <_dtoa_r+0x610>
    ba70:	f040 825e 	bne.w	bf30 <_dtoa_r+0x928>
    ba74:	2200      	movs	r2, #0
    ba76:	4b66      	ldr	r3, [pc, #408]	; (bc10 <_dtoa_r+0x608>)
    ba78:	ec51 0b17 	vmov	r0, r1, d7
    ba7c:	f002 fbb2 	bl	e1e4 <__aeabi_dmul>
    ba80:	e9dd 2300 	ldrd	r2, r3, [sp]
    ba84:	f002 fe34 	bl	e6f0 <__aeabi_dcmpge>
    ba88:	464f      	mov	r7, r9
    ba8a:	464e      	mov	r6, r9
    ba8c:	2800      	cmp	r0, #0
    ba8e:	f040 8234 	bne.w	befa <_dtoa_r+0x8f2>
    ba92:	2331      	movs	r3, #49	; 0x31
    ba94:	f10b 0501 	add.w	r5, fp, #1
    ba98:	f88b 3000 	strb.w	r3, [fp]
    ba9c:	f10a 0a01 	add.w	sl, sl, #1
    baa0:	e22f      	b.n	bf02 <_dtoa_r+0x8fa>
    baa2:	07f2      	lsls	r2, r6, #31
    baa4:	d505      	bpl.n	bab2 <_dtoa_r+0x4aa>
    baa6:	e9d7 2300 	ldrd	r2, r3, [r7]
    baaa:	f002 fb9b 	bl	e1e4 <__aeabi_dmul>
    baae:	3501      	adds	r5, #1
    bab0:	2301      	movs	r3, #1
    bab2:	1076      	asrs	r6, r6, #1
    bab4:	3708      	adds	r7, #8
    bab6:	e772      	b.n	b99e <_dtoa_r+0x396>
    bab8:	2502      	movs	r5, #2
    baba:	e774      	b.n	b9a6 <_dtoa_r+0x39e>
    babc:	f8cd a020 	str.w	sl, [sp, #32]
    bac0:	464f      	mov	r7, r9
    bac2:	e791      	b.n	b9e8 <_dtoa_r+0x3e0>
    bac4:	4b4d      	ldr	r3, [pc, #308]	; (bbfc <_dtoa_r+0x5f4>)
    bac6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
    baca:	e953 0102 	ldrd	r0, r1, [r3, #-8]
    bace:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    bad0:	2b00      	cmp	r3, #0
    bad2:	d047      	beq.n	bb64 <_dtoa_r+0x55c>
    bad4:	4602      	mov	r2, r0
    bad6:	460b      	mov	r3, r1
    bad8:	2000      	movs	r0, #0
    bada:	494e      	ldr	r1, [pc, #312]	; (bc14 <_dtoa_r+0x60c>)
    badc:	f002 fcac 	bl	e438 <__aeabi_ddiv>
    bae0:	462a      	mov	r2, r5
    bae2:	4633      	mov	r3, r6
    bae4:	f002 f9c6 	bl	de74 <__aeabi_dsub>
    bae8:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
    baec:	465d      	mov	r5, fp
    baee:	e9dd 0100 	ldrd	r0, r1, [sp]
    baf2:	f002 fe27 	bl	e744 <__aeabi_d2iz>
    baf6:	4606      	mov	r6, r0
    baf8:	f002 fb0a 	bl	e110 <__aeabi_i2d>
    bafc:	4602      	mov	r2, r0
    bafe:	460b      	mov	r3, r1
    bb00:	e9dd 0100 	ldrd	r0, r1, [sp]
    bb04:	f002 f9b6 	bl	de74 <__aeabi_dsub>
    bb08:	3630      	adds	r6, #48	; 0x30
    bb0a:	f805 6b01 	strb.w	r6, [r5], #1
    bb0e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
    bb12:	e9cd 0100 	strd	r0, r1, [sp]
    bb16:	f002 fdd7 	bl	e6c8 <__aeabi_dcmplt>
    bb1a:	2800      	cmp	r0, #0
    bb1c:	d163      	bne.n	bbe6 <_dtoa_r+0x5de>
    bb1e:	e9dd 2300 	ldrd	r2, r3, [sp]
    bb22:	2000      	movs	r0, #0
    bb24:	4937      	ldr	r1, [pc, #220]	; (bc04 <_dtoa_r+0x5fc>)
    bb26:	f002 f9a5 	bl	de74 <__aeabi_dsub>
    bb2a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
    bb2e:	f002 fdcb 	bl	e6c8 <__aeabi_dcmplt>
    bb32:	2800      	cmp	r0, #0
    bb34:	f040 80b7 	bne.w	bca6 <_dtoa_r+0x69e>
    bb38:	eba5 030b 	sub.w	r3, r5, fp
    bb3c:	429f      	cmp	r7, r3
    bb3e:	f77f af7c 	ble.w	ba3a <_dtoa_r+0x432>
    bb42:	2200      	movs	r2, #0
    bb44:	4b30      	ldr	r3, [pc, #192]	; (bc08 <_dtoa_r+0x600>)
    bb46:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
    bb4a:	f002 fb4b 	bl	e1e4 <__aeabi_dmul>
    bb4e:	2200      	movs	r2, #0
    bb50:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
    bb54:	4b2c      	ldr	r3, [pc, #176]	; (bc08 <_dtoa_r+0x600>)
    bb56:	e9dd 0100 	ldrd	r0, r1, [sp]
    bb5a:	f002 fb43 	bl	e1e4 <__aeabi_dmul>
    bb5e:	e9cd 0100 	strd	r0, r1, [sp]
    bb62:	e7c4      	b.n	baee <_dtoa_r+0x4e6>
    bb64:	462a      	mov	r2, r5
    bb66:	4633      	mov	r3, r6
    bb68:	f002 fb3c 	bl	e1e4 <__aeabi_dmul>
    bb6c:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
    bb70:	eb0b 0507 	add.w	r5, fp, r7
    bb74:	465e      	mov	r6, fp
    bb76:	e9dd 0100 	ldrd	r0, r1, [sp]
    bb7a:	f002 fde3 	bl	e744 <__aeabi_d2iz>
    bb7e:	4607      	mov	r7, r0
    bb80:	f002 fac6 	bl	e110 <__aeabi_i2d>
    bb84:	3730      	adds	r7, #48	; 0x30
    bb86:	4602      	mov	r2, r0
    bb88:	460b      	mov	r3, r1
    bb8a:	e9dd 0100 	ldrd	r0, r1, [sp]
    bb8e:	f002 f971 	bl	de74 <__aeabi_dsub>
    bb92:	f806 7b01 	strb.w	r7, [r6], #1
    bb96:	42ae      	cmp	r6, r5
    bb98:	e9cd 0100 	strd	r0, r1, [sp]
    bb9c:	f04f 0200 	mov.w	r2, #0
    bba0:	d126      	bne.n	bbf0 <_dtoa_r+0x5e8>
    bba2:	4b1c      	ldr	r3, [pc, #112]	; (bc14 <_dtoa_r+0x60c>)
    bba4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
    bba8:	f002 f966 	bl	de78 <__adddf3>
    bbac:	4602      	mov	r2, r0
    bbae:	460b      	mov	r3, r1
    bbb0:	e9dd 0100 	ldrd	r0, r1, [sp]
    bbb4:	f002 fda6 	bl	e704 <__aeabi_dcmpgt>
    bbb8:	2800      	cmp	r0, #0
    bbba:	d174      	bne.n	bca6 <_dtoa_r+0x69e>
    bbbc:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
    bbc0:	2000      	movs	r0, #0
    bbc2:	4914      	ldr	r1, [pc, #80]	; (bc14 <_dtoa_r+0x60c>)
    bbc4:	f002 f956 	bl	de74 <__aeabi_dsub>
    bbc8:	4602      	mov	r2, r0
    bbca:	460b      	mov	r3, r1
    bbcc:	e9dd 0100 	ldrd	r0, r1, [sp]
    bbd0:	f002 fd7a 	bl	e6c8 <__aeabi_dcmplt>
    bbd4:	2800      	cmp	r0, #0
    bbd6:	f43f af30 	beq.w	ba3a <_dtoa_r+0x432>
    bbda:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    bbde:	2b30      	cmp	r3, #48	; 0x30
    bbe0:	f105 32ff 	add.w	r2, r5, #4294967295
    bbe4:	d002      	beq.n	bbec <_dtoa_r+0x5e4>
    bbe6:	f8dd a020 	ldr.w	sl, [sp, #32]
    bbea:	e04a      	b.n	bc82 <_dtoa_r+0x67a>
    bbec:	4615      	mov	r5, r2
    bbee:	e7f4      	b.n	bbda <_dtoa_r+0x5d2>
    bbf0:	4b05      	ldr	r3, [pc, #20]	; (bc08 <_dtoa_r+0x600>)
    bbf2:	f002 faf7 	bl	e1e4 <__aeabi_dmul>
    bbf6:	e9cd 0100 	strd	r0, r1, [sp]
    bbfa:	e7bc      	b.n	bb76 <_dtoa_r+0x56e>
    bbfc:	0000ebe8 	.word	0x0000ebe8
    bc00:	0000ebc0 	.word	0x0000ebc0
    bc04:	3ff00000 	.word	0x3ff00000
    bc08:	40240000 	.word	0x40240000
    bc0c:	401c0000 	.word	0x401c0000
    bc10:	40140000 	.word	0x40140000
    bc14:	3fe00000 	.word	0x3fe00000
    bc18:	e9dd 6700 	ldrd	r6, r7, [sp]
    bc1c:	465d      	mov	r5, fp
    bc1e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    bc22:	4630      	mov	r0, r6
    bc24:	4639      	mov	r1, r7
    bc26:	f002 fc07 	bl	e438 <__aeabi_ddiv>
    bc2a:	f002 fd8b 	bl	e744 <__aeabi_d2iz>
    bc2e:	4680      	mov	r8, r0
    bc30:	f002 fa6e 	bl	e110 <__aeabi_i2d>
    bc34:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    bc38:	f002 fad4 	bl	e1e4 <__aeabi_dmul>
    bc3c:	4602      	mov	r2, r0
    bc3e:	460b      	mov	r3, r1
    bc40:	4630      	mov	r0, r6
    bc42:	4639      	mov	r1, r7
    bc44:	f108 0630 	add.w	r6, r8, #48	; 0x30
    bc48:	f002 f914 	bl	de74 <__aeabi_dsub>
    bc4c:	f805 6b01 	strb.w	r6, [r5], #1
    bc50:	eba5 060b 	sub.w	r6, r5, fp
    bc54:	45b1      	cmp	r9, r6
    bc56:	4602      	mov	r2, r0
    bc58:	460b      	mov	r3, r1
    bc5a:	d139      	bne.n	bcd0 <_dtoa_r+0x6c8>
    bc5c:	f002 f90c 	bl	de78 <__adddf3>
    bc60:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    bc64:	4606      	mov	r6, r0
    bc66:	460f      	mov	r7, r1
    bc68:	f002 fd4c 	bl	e704 <__aeabi_dcmpgt>
    bc6c:	b9c8      	cbnz	r0, bca2 <_dtoa_r+0x69a>
    bc6e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    bc72:	4630      	mov	r0, r6
    bc74:	4639      	mov	r1, r7
    bc76:	f002 fd1d 	bl	e6b4 <__aeabi_dcmpeq>
    bc7a:	b110      	cbz	r0, bc82 <_dtoa_r+0x67a>
    bc7c:	f018 0f01 	tst.w	r8, #1
    bc80:	d10f      	bne.n	bca2 <_dtoa_r+0x69a>
    bc82:	9904      	ldr	r1, [sp, #16]
    bc84:	4620      	mov	r0, r4
    bc86:	f000 fb1c 	bl	c2c2 <_Bfree>
    bc8a:	2300      	movs	r3, #0
    bc8c:	9a12      	ldr	r2, [sp, #72]	; 0x48
    bc8e:	702b      	strb	r3, [r5, #0]
    bc90:	f10a 0301 	add.w	r3, sl, #1
    bc94:	6013      	str	r3, [r2, #0]
    bc96:	9b21      	ldr	r3, [sp, #132]	; 0x84
    bc98:	2b00      	cmp	r3, #0
    bc9a:	f000 8241 	beq.w	c120 <_dtoa_r+0xb18>
    bc9e:	601d      	str	r5, [r3, #0]
    bca0:	e23e      	b.n	c120 <_dtoa_r+0xb18>
    bca2:	f8cd a020 	str.w	sl, [sp, #32]
    bca6:	f815 2c01 	ldrb.w	r2, [r5, #-1]
    bcaa:	2a39      	cmp	r2, #57	; 0x39
    bcac:	f105 33ff 	add.w	r3, r5, #4294967295
    bcb0:	d108      	bne.n	bcc4 <_dtoa_r+0x6bc>
    bcb2:	459b      	cmp	fp, r3
    bcb4:	d10a      	bne.n	bccc <_dtoa_r+0x6c4>
    bcb6:	9b08      	ldr	r3, [sp, #32]
    bcb8:	3301      	adds	r3, #1
    bcba:	9308      	str	r3, [sp, #32]
    bcbc:	2330      	movs	r3, #48	; 0x30
    bcbe:	f88b 3000 	strb.w	r3, [fp]
    bcc2:	465b      	mov	r3, fp
    bcc4:	781a      	ldrb	r2, [r3, #0]
    bcc6:	3201      	adds	r2, #1
    bcc8:	701a      	strb	r2, [r3, #0]
    bcca:	e78c      	b.n	bbe6 <_dtoa_r+0x5de>
    bccc:	461d      	mov	r5, r3
    bcce:	e7ea      	b.n	bca6 <_dtoa_r+0x69e>
    bcd0:	2200      	movs	r2, #0
    bcd2:	4b9b      	ldr	r3, [pc, #620]	; (bf40 <_dtoa_r+0x938>)
    bcd4:	f002 fa86 	bl	e1e4 <__aeabi_dmul>
    bcd8:	2200      	movs	r2, #0
    bcda:	2300      	movs	r3, #0
    bcdc:	4606      	mov	r6, r0
    bcde:	460f      	mov	r7, r1
    bce0:	f002 fce8 	bl	e6b4 <__aeabi_dcmpeq>
    bce4:	2800      	cmp	r0, #0
    bce6:	d09a      	beq.n	bc1e <_dtoa_r+0x616>
    bce8:	e7cb      	b.n	bc82 <_dtoa_r+0x67a>
    bcea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    bcec:	2a00      	cmp	r2, #0
    bcee:	f000 808b 	beq.w	be08 <_dtoa_r+0x800>
    bcf2:	9a06      	ldr	r2, [sp, #24]
    bcf4:	2a01      	cmp	r2, #1
    bcf6:	dc6e      	bgt.n	bdd6 <_dtoa_r+0x7ce>
    bcf8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    bcfa:	2a00      	cmp	r2, #0
    bcfc:	d067      	beq.n	bdce <_dtoa_r+0x7c6>
    bcfe:	f203 4333 	addw	r3, r3, #1075	; 0x433
    bd02:	9f07      	ldr	r7, [sp, #28]
    bd04:	9d05      	ldr	r5, [sp, #20]
    bd06:	9a05      	ldr	r2, [sp, #20]
    bd08:	2101      	movs	r1, #1
    bd0a:	441a      	add	r2, r3
    bd0c:	4620      	mov	r0, r4
    bd0e:	9205      	str	r2, [sp, #20]
    bd10:	4498      	add	r8, r3
    bd12:	f000 fb76 	bl	c402 <__i2b>
    bd16:	4606      	mov	r6, r0
    bd18:	2d00      	cmp	r5, #0
    bd1a:	dd0c      	ble.n	bd36 <_dtoa_r+0x72e>
    bd1c:	f1b8 0f00 	cmp.w	r8, #0
    bd20:	dd09      	ble.n	bd36 <_dtoa_r+0x72e>
    bd22:	4545      	cmp	r5, r8
    bd24:	9a05      	ldr	r2, [sp, #20]
    bd26:	462b      	mov	r3, r5
    bd28:	bfa8      	it	ge
    bd2a:	4643      	movge	r3, r8
    bd2c:	1ad2      	subs	r2, r2, r3
    bd2e:	9205      	str	r2, [sp, #20]
    bd30:	1aed      	subs	r5, r5, r3
    bd32:	eba8 0803 	sub.w	r8, r8, r3
    bd36:	9b07      	ldr	r3, [sp, #28]
    bd38:	b1eb      	cbz	r3, bd76 <_dtoa_r+0x76e>
    bd3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    bd3c:	2b00      	cmp	r3, #0
    bd3e:	d067      	beq.n	be10 <_dtoa_r+0x808>
    bd40:	b18f      	cbz	r7, bd66 <_dtoa_r+0x75e>
    bd42:	4631      	mov	r1, r6
    bd44:	463a      	mov	r2, r7
    bd46:	4620      	mov	r0, r4
    bd48:	f000 fbfa 	bl	c540 <__pow5mult>
    bd4c:	9a04      	ldr	r2, [sp, #16]
    bd4e:	4601      	mov	r1, r0
    bd50:	4606      	mov	r6, r0
    bd52:	4620      	mov	r0, r4
    bd54:	f000 fb5e 	bl	c414 <__multiply>
    bd58:	9904      	ldr	r1, [sp, #16]
    bd5a:	9008      	str	r0, [sp, #32]
    bd5c:	4620      	mov	r0, r4
    bd5e:	f000 fab0 	bl	c2c2 <_Bfree>
    bd62:	9b08      	ldr	r3, [sp, #32]
    bd64:	9304      	str	r3, [sp, #16]
    bd66:	9b07      	ldr	r3, [sp, #28]
    bd68:	1bda      	subs	r2, r3, r7
    bd6a:	d004      	beq.n	bd76 <_dtoa_r+0x76e>
    bd6c:	9904      	ldr	r1, [sp, #16]
    bd6e:	4620      	mov	r0, r4
    bd70:	f000 fbe6 	bl	c540 <__pow5mult>
    bd74:	9004      	str	r0, [sp, #16]
    bd76:	2101      	movs	r1, #1
    bd78:	4620      	mov	r0, r4
    bd7a:	f000 fb42 	bl	c402 <__i2b>
    bd7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bd80:	4607      	mov	r7, r0
    bd82:	2b00      	cmp	r3, #0
    bd84:	f000 81d0 	beq.w	c128 <_dtoa_r+0xb20>
    bd88:	461a      	mov	r2, r3
    bd8a:	4601      	mov	r1, r0
    bd8c:	4620      	mov	r0, r4
    bd8e:	f000 fbd7 	bl	c540 <__pow5mult>
    bd92:	9b06      	ldr	r3, [sp, #24]
    bd94:	2b01      	cmp	r3, #1
    bd96:	4607      	mov	r7, r0
    bd98:	dc40      	bgt.n	be1c <_dtoa_r+0x814>
    bd9a:	9b00      	ldr	r3, [sp, #0]
    bd9c:	2b00      	cmp	r3, #0
    bd9e:	d139      	bne.n	be14 <_dtoa_r+0x80c>
    bda0:	9b01      	ldr	r3, [sp, #4]
    bda2:	f3c3 0313 	ubfx	r3, r3, #0, #20
    bda6:	2b00      	cmp	r3, #0
    bda8:	d136      	bne.n	be18 <_dtoa_r+0x810>
    bdaa:	9b01      	ldr	r3, [sp, #4]
    bdac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
    bdb0:	0d1b      	lsrs	r3, r3, #20
    bdb2:	051b      	lsls	r3, r3, #20
    bdb4:	b12b      	cbz	r3, bdc2 <_dtoa_r+0x7ba>
    bdb6:	9b05      	ldr	r3, [sp, #20]
    bdb8:	3301      	adds	r3, #1
    bdba:	9305      	str	r3, [sp, #20]
    bdbc:	f108 0801 	add.w	r8, r8, #1
    bdc0:	2301      	movs	r3, #1
    bdc2:	9307      	str	r3, [sp, #28]
    bdc4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bdc6:	2b00      	cmp	r3, #0
    bdc8:	d12a      	bne.n	be20 <_dtoa_r+0x818>
    bdca:	2001      	movs	r0, #1
    bdcc:	e030      	b.n	be30 <_dtoa_r+0x828>
    bdce:	9b14      	ldr	r3, [sp, #80]	; 0x50
    bdd0:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
    bdd4:	e795      	b.n	bd02 <_dtoa_r+0x6fa>
    bdd6:	9b07      	ldr	r3, [sp, #28]
    bdd8:	f109 37ff 	add.w	r7, r9, #4294967295
    bddc:	42bb      	cmp	r3, r7
    bdde:	bfbf      	itttt	lt
    bde0:	9b07      	ldrlt	r3, [sp, #28]
    bde2:	9707      	strlt	r7, [sp, #28]
    bde4:	1afa      	sublt	r2, r7, r3
    bde6:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
    bde8:	bfbb      	ittet	lt
    bdea:	189b      	addlt	r3, r3, r2
    bdec:	930e      	strlt	r3, [sp, #56]	; 0x38
    bdee:	1bdf      	subge	r7, r3, r7
    bdf0:	2700      	movlt	r7, #0
    bdf2:	f1b9 0f00 	cmp.w	r9, #0
    bdf6:	bfb5      	itete	lt
    bdf8:	9b05      	ldrlt	r3, [sp, #20]
    bdfa:	9d05      	ldrge	r5, [sp, #20]
    bdfc:	eba3 0509 	sublt.w	r5, r3, r9
    be00:	464b      	movge	r3, r9
    be02:	bfb8      	it	lt
    be04:	2300      	movlt	r3, #0
    be06:	e77e      	b.n	bd06 <_dtoa_r+0x6fe>
    be08:	9f07      	ldr	r7, [sp, #28]
    be0a:	9d05      	ldr	r5, [sp, #20]
    be0c:	9e0a      	ldr	r6, [sp, #40]	; 0x28
    be0e:	e783      	b.n	bd18 <_dtoa_r+0x710>
    be10:	9a07      	ldr	r2, [sp, #28]
    be12:	e7ab      	b.n	bd6c <_dtoa_r+0x764>
    be14:	2300      	movs	r3, #0
    be16:	e7d4      	b.n	bdc2 <_dtoa_r+0x7ba>
    be18:	9b00      	ldr	r3, [sp, #0]
    be1a:	e7d2      	b.n	bdc2 <_dtoa_r+0x7ba>
    be1c:	2300      	movs	r3, #0
    be1e:	9307      	str	r3, [sp, #28]
    be20:	693b      	ldr	r3, [r7, #16]
    be22:	eb07 0383 	add.w	r3, r7, r3, lsl #2
    be26:	6918      	ldr	r0, [r3, #16]
    be28:	f000 fa9d 	bl	c366 <__hi0bits>
    be2c:	f1c0 0020 	rsb	r0, r0, #32
    be30:	4440      	add	r0, r8
    be32:	f010 001f 	ands.w	r0, r0, #31
    be36:	d047      	beq.n	bec8 <_dtoa_r+0x8c0>
    be38:	f1c0 0320 	rsb	r3, r0, #32
    be3c:	2b04      	cmp	r3, #4
    be3e:	dd3b      	ble.n	beb8 <_dtoa_r+0x8b0>
    be40:	9b05      	ldr	r3, [sp, #20]
    be42:	f1c0 001c 	rsb	r0, r0, #28
    be46:	4403      	add	r3, r0
    be48:	9305      	str	r3, [sp, #20]
    be4a:	4405      	add	r5, r0
    be4c:	4480      	add	r8, r0
    be4e:	9b05      	ldr	r3, [sp, #20]
    be50:	2b00      	cmp	r3, #0
    be52:	dd05      	ble.n	be60 <_dtoa_r+0x858>
    be54:	461a      	mov	r2, r3
    be56:	9904      	ldr	r1, [sp, #16]
    be58:	4620      	mov	r0, r4
    be5a:	f000 fbbf 	bl	c5dc <__lshift>
    be5e:	9004      	str	r0, [sp, #16]
    be60:	f1b8 0f00 	cmp.w	r8, #0
    be64:	dd05      	ble.n	be72 <_dtoa_r+0x86a>
    be66:	4639      	mov	r1, r7
    be68:	4642      	mov	r2, r8
    be6a:	4620      	mov	r0, r4
    be6c:	f000 fbb6 	bl	c5dc <__lshift>
    be70:	4607      	mov	r7, r0
    be72:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    be74:	b353      	cbz	r3, becc <_dtoa_r+0x8c4>
    be76:	4639      	mov	r1, r7
    be78:	9804      	ldr	r0, [sp, #16]
    be7a:	f000 fc03 	bl	c684 <__mcmp>
    be7e:	2800      	cmp	r0, #0
    be80:	da24      	bge.n	becc <_dtoa_r+0x8c4>
    be82:	2300      	movs	r3, #0
    be84:	220a      	movs	r2, #10
    be86:	9904      	ldr	r1, [sp, #16]
    be88:	4620      	mov	r0, r4
    be8a:	f000 fa31 	bl	c2f0 <__multadd>
    be8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    be90:	9004      	str	r0, [sp, #16]
    be92:	f10a 3aff 	add.w	sl, sl, #4294967295
    be96:	2b00      	cmp	r3, #0
    be98:	f000 814d 	beq.w	c136 <_dtoa_r+0xb2e>
    be9c:	2300      	movs	r3, #0
    be9e:	4631      	mov	r1, r6
    bea0:	220a      	movs	r2, #10
    bea2:	4620      	mov	r0, r4
    bea4:	f000 fa24 	bl	c2f0 <__multadd>
    bea8:	9b02      	ldr	r3, [sp, #8]
    beaa:	2b00      	cmp	r3, #0
    beac:	4606      	mov	r6, r0
    beae:	dc4f      	bgt.n	bf50 <_dtoa_r+0x948>
    beb0:	9b06      	ldr	r3, [sp, #24]
    beb2:	2b02      	cmp	r3, #2
    beb4:	dd4c      	ble.n	bf50 <_dtoa_r+0x948>
    beb6:	e011      	b.n	bedc <_dtoa_r+0x8d4>
    beb8:	d0c9      	beq.n	be4e <_dtoa_r+0x846>
    beba:	9a05      	ldr	r2, [sp, #20]
    bebc:	331c      	adds	r3, #28
    bebe:	441a      	add	r2, r3
    bec0:	9205      	str	r2, [sp, #20]
    bec2:	441d      	add	r5, r3
    bec4:	4498      	add	r8, r3
    bec6:	e7c2      	b.n	be4e <_dtoa_r+0x846>
    bec8:	4603      	mov	r3, r0
    beca:	e7f6      	b.n	beba <_dtoa_r+0x8b2>
    becc:	f1b9 0f00 	cmp.w	r9, #0
    bed0:	dc38      	bgt.n	bf44 <_dtoa_r+0x93c>
    bed2:	9b06      	ldr	r3, [sp, #24]
    bed4:	2b02      	cmp	r3, #2
    bed6:	dd35      	ble.n	bf44 <_dtoa_r+0x93c>
    bed8:	f8cd 9008 	str.w	r9, [sp, #8]
    bedc:	9b02      	ldr	r3, [sp, #8]
    bede:	b963      	cbnz	r3, befa <_dtoa_r+0x8f2>
    bee0:	4639      	mov	r1, r7
    bee2:	2205      	movs	r2, #5
    bee4:	4620      	mov	r0, r4
    bee6:	f000 fa03 	bl	c2f0 <__multadd>
    beea:	4601      	mov	r1, r0
    beec:	4607      	mov	r7, r0
    beee:	9804      	ldr	r0, [sp, #16]
    bef0:	f000 fbc8 	bl	c684 <__mcmp>
    bef4:	2800      	cmp	r0, #0
    bef6:	f73f adcc 	bgt.w	ba92 <_dtoa_r+0x48a>
    befa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    befc:	465d      	mov	r5, fp
    befe:	ea6f 0a03 	mvn.w	sl, r3
    bf02:	f04f 0900 	mov.w	r9, #0
    bf06:	4639      	mov	r1, r7
    bf08:	4620      	mov	r0, r4
    bf0a:	f000 f9da 	bl	c2c2 <_Bfree>
    bf0e:	2e00      	cmp	r6, #0
    bf10:	f43f aeb7 	beq.w	bc82 <_dtoa_r+0x67a>
    bf14:	f1b9 0f00 	cmp.w	r9, #0
    bf18:	d005      	beq.n	bf26 <_dtoa_r+0x91e>
    bf1a:	45b1      	cmp	r9, r6
    bf1c:	d003      	beq.n	bf26 <_dtoa_r+0x91e>
    bf1e:	4649      	mov	r1, r9
    bf20:	4620      	mov	r0, r4
    bf22:	f000 f9ce 	bl	c2c2 <_Bfree>
    bf26:	4631      	mov	r1, r6
    bf28:	4620      	mov	r0, r4
    bf2a:	f000 f9ca 	bl	c2c2 <_Bfree>
    bf2e:	e6a8      	b.n	bc82 <_dtoa_r+0x67a>
    bf30:	2700      	movs	r7, #0
    bf32:	463e      	mov	r6, r7
    bf34:	e7e1      	b.n	befa <_dtoa_r+0x8f2>
    bf36:	f8dd a020 	ldr.w	sl, [sp, #32]
    bf3a:	463e      	mov	r6, r7
    bf3c:	e5a9      	b.n	ba92 <_dtoa_r+0x48a>
    bf3e:	bf00      	nop
    bf40:	40240000 	.word	0x40240000
    bf44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    bf46:	f8cd 9008 	str.w	r9, [sp, #8]
    bf4a:	2b00      	cmp	r3, #0
    bf4c:	f000 80fa 	beq.w	c144 <_dtoa_r+0xb3c>
    bf50:	2d00      	cmp	r5, #0
    bf52:	dd05      	ble.n	bf60 <_dtoa_r+0x958>
    bf54:	4631      	mov	r1, r6
    bf56:	462a      	mov	r2, r5
    bf58:	4620      	mov	r0, r4
    bf5a:	f000 fb3f 	bl	c5dc <__lshift>
    bf5e:	4606      	mov	r6, r0
    bf60:	9b07      	ldr	r3, [sp, #28]
    bf62:	2b00      	cmp	r3, #0
    bf64:	d04c      	beq.n	c000 <_dtoa_r+0x9f8>
    bf66:	6871      	ldr	r1, [r6, #4]
    bf68:	4620      	mov	r0, r4
    bf6a:	f000 f976 	bl	c25a <_Balloc>
    bf6e:	6932      	ldr	r2, [r6, #16]
    bf70:	3202      	adds	r2, #2
    bf72:	4605      	mov	r5, r0
    bf74:	0092      	lsls	r2, r2, #2
    bf76:	f106 010c 	add.w	r1, r6, #12
    bf7a:	300c      	adds	r0, #12
    bf7c:	f000 f960 	bl	c240 <memcpy>
    bf80:	2201      	movs	r2, #1
    bf82:	4629      	mov	r1, r5
    bf84:	4620      	mov	r0, r4
    bf86:	f000 fb29 	bl	c5dc <__lshift>
    bf8a:	9b00      	ldr	r3, [sp, #0]
    bf8c:	f8cd b014 	str.w	fp, [sp, #20]
    bf90:	f003 0301 	and.w	r3, r3, #1
    bf94:	46b1      	mov	r9, r6
    bf96:	9307      	str	r3, [sp, #28]
    bf98:	4606      	mov	r6, r0
    bf9a:	4639      	mov	r1, r7
    bf9c:	9804      	ldr	r0, [sp, #16]
    bf9e:	f7ff faa7 	bl	b4f0 <quorem>
    bfa2:	4649      	mov	r1, r9
    bfa4:	4605      	mov	r5, r0
    bfa6:	f100 0830 	add.w	r8, r0, #48	; 0x30
    bfaa:	9804      	ldr	r0, [sp, #16]
    bfac:	f000 fb6a 	bl	c684 <__mcmp>
    bfb0:	4632      	mov	r2, r6
    bfb2:	9000      	str	r0, [sp, #0]
    bfb4:	4639      	mov	r1, r7
    bfb6:	4620      	mov	r0, r4
    bfb8:	f000 fb7e 	bl	c6b8 <__mdiff>
    bfbc:	68c3      	ldr	r3, [r0, #12]
    bfbe:	4602      	mov	r2, r0
    bfc0:	bb03      	cbnz	r3, c004 <_dtoa_r+0x9fc>
    bfc2:	4601      	mov	r1, r0
    bfc4:	9008      	str	r0, [sp, #32]
    bfc6:	9804      	ldr	r0, [sp, #16]
    bfc8:	f000 fb5c 	bl	c684 <__mcmp>
    bfcc:	9a08      	ldr	r2, [sp, #32]
    bfce:	4603      	mov	r3, r0
    bfd0:	4611      	mov	r1, r2
    bfd2:	4620      	mov	r0, r4
    bfd4:	9308      	str	r3, [sp, #32]
    bfd6:	f000 f974 	bl	c2c2 <_Bfree>
    bfda:	9b08      	ldr	r3, [sp, #32]
    bfdc:	b9a3      	cbnz	r3, c008 <_dtoa_r+0xa00>
    bfde:	9a06      	ldr	r2, [sp, #24]
    bfe0:	b992      	cbnz	r2, c008 <_dtoa_r+0xa00>
    bfe2:	9a07      	ldr	r2, [sp, #28]
    bfe4:	b982      	cbnz	r2, c008 <_dtoa_r+0xa00>
    bfe6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
    bfea:	d029      	beq.n	c040 <_dtoa_r+0xa38>
    bfec:	9b00      	ldr	r3, [sp, #0]
    bfee:	2b00      	cmp	r3, #0
    bff0:	dd01      	ble.n	bff6 <_dtoa_r+0x9ee>
    bff2:	f105 0831 	add.w	r8, r5, #49	; 0x31
    bff6:	9b05      	ldr	r3, [sp, #20]
    bff8:	1c5d      	adds	r5, r3, #1
    bffa:	f883 8000 	strb.w	r8, [r3]
    bffe:	e782      	b.n	bf06 <_dtoa_r+0x8fe>
    c000:	4630      	mov	r0, r6
    c002:	e7c2      	b.n	bf8a <_dtoa_r+0x982>
    c004:	2301      	movs	r3, #1
    c006:	e7e3      	b.n	bfd0 <_dtoa_r+0x9c8>
    c008:	9a00      	ldr	r2, [sp, #0]
    c00a:	2a00      	cmp	r2, #0
    c00c:	db04      	blt.n	c018 <_dtoa_r+0xa10>
    c00e:	d125      	bne.n	c05c <_dtoa_r+0xa54>
    c010:	9a06      	ldr	r2, [sp, #24]
    c012:	bb1a      	cbnz	r2, c05c <_dtoa_r+0xa54>
    c014:	9a07      	ldr	r2, [sp, #28]
    c016:	bb0a      	cbnz	r2, c05c <_dtoa_r+0xa54>
    c018:	2b00      	cmp	r3, #0
    c01a:	ddec      	ble.n	bff6 <_dtoa_r+0x9ee>
    c01c:	2201      	movs	r2, #1
    c01e:	9904      	ldr	r1, [sp, #16]
    c020:	4620      	mov	r0, r4
    c022:	f000 fadb 	bl	c5dc <__lshift>
    c026:	4639      	mov	r1, r7
    c028:	9004      	str	r0, [sp, #16]
    c02a:	f000 fb2b 	bl	c684 <__mcmp>
    c02e:	2800      	cmp	r0, #0
    c030:	dc03      	bgt.n	c03a <_dtoa_r+0xa32>
    c032:	d1e0      	bne.n	bff6 <_dtoa_r+0x9ee>
    c034:	f018 0f01 	tst.w	r8, #1
    c038:	d0dd      	beq.n	bff6 <_dtoa_r+0x9ee>
    c03a:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
    c03e:	d1d8      	bne.n	bff2 <_dtoa_r+0x9ea>
    c040:	9b05      	ldr	r3, [sp, #20]
    c042:	9a05      	ldr	r2, [sp, #20]
    c044:	1c5d      	adds	r5, r3, #1
    c046:	2339      	movs	r3, #57	; 0x39
    c048:	7013      	strb	r3, [r2, #0]
    c04a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    c04e:	2b39      	cmp	r3, #57	; 0x39
    c050:	f105 32ff 	add.w	r2, r5, #4294967295
    c054:	d04f      	beq.n	c0f6 <_dtoa_r+0xaee>
    c056:	3301      	adds	r3, #1
    c058:	7013      	strb	r3, [r2, #0]
    c05a:	e754      	b.n	bf06 <_dtoa_r+0x8fe>
    c05c:	9a05      	ldr	r2, [sp, #20]
    c05e:	2b00      	cmp	r3, #0
    c060:	f102 0501 	add.w	r5, r2, #1
    c064:	dd06      	ble.n	c074 <_dtoa_r+0xa6c>
    c066:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
    c06a:	d0e9      	beq.n	c040 <_dtoa_r+0xa38>
    c06c:	f108 0801 	add.w	r8, r8, #1
    c070:	9b05      	ldr	r3, [sp, #20]
    c072:	e7c2      	b.n	bffa <_dtoa_r+0x9f2>
    c074:	9a02      	ldr	r2, [sp, #8]
    c076:	f805 8c01 	strb.w	r8, [r5, #-1]
    c07a:	eba5 030b 	sub.w	r3, r5, fp
    c07e:	4293      	cmp	r3, r2
    c080:	d021      	beq.n	c0c6 <_dtoa_r+0xabe>
    c082:	2300      	movs	r3, #0
    c084:	220a      	movs	r2, #10
    c086:	9904      	ldr	r1, [sp, #16]
    c088:	4620      	mov	r0, r4
    c08a:	f000 f931 	bl	c2f0 <__multadd>
    c08e:	45b1      	cmp	r9, r6
    c090:	9004      	str	r0, [sp, #16]
    c092:	f04f 0300 	mov.w	r3, #0
    c096:	f04f 020a 	mov.w	r2, #10
    c09a:	4649      	mov	r1, r9
    c09c:	4620      	mov	r0, r4
    c09e:	d105      	bne.n	c0ac <_dtoa_r+0xaa4>
    c0a0:	f000 f926 	bl	c2f0 <__multadd>
    c0a4:	4681      	mov	r9, r0
    c0a6:	4606      	mov	r6, r0
    c0a8:	9505      	str	r5, [sp, #20]
    c0aa:	e776      	b.n	bf9a <_dtoa_r+0x992>
    c0ac:	f000 f920 	bl	c2f0 <__multadd>
    c0b0:	4631      	mov	r1, r6
    c0b2:	4681      	mov	r9, r0
    c0b4:	2300      	movs	r3, #0
    c0b6:	220a      	movs	r2, #10
    c0b8:	4620      	mov	r0, r4
    c0ba:	f000 f919 	bl	c2f0 <__multadd>
    c0be:	4606      	mov	r6, r0
    c0c0:	e7f2      	b.n	c0a8 <_dtoa_r+0xaa0>
    c0c2:	f04f 0900 	mov.w	r9, #0
    c0c6:	2201      	movs	r2, #1
    c0c8:	9904      	ldr	r1, [sp, #16]
    c0ca:	4620      	mov	r0, r4
    c0cc:	f000 fa86 	bl	c5dc <__lshift>
    c0d0:	4639      	mov	r1, r7
    c0d2:	9004      	str	r0, [sp, #16]
    c0d4:	f000 fad6 	bl	c684 <__mcmp>
    c0d8:	2800      	cmp	r0, #0
    c0da:	dcb6      	bgt.n	c04a <_dtoa_r+0xa42>
    c0dc:	d102      	bne.n	c0e4 <_dtoa_r+0xadc>
    c0de:	f018 0f01 	tst.w	r8, #1
    c0e2:	d1b2      	bne.n	c04a <_dtoa_r+0xa42>
    c0e4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    c0e8:	2b30      	cmp	r3, #48	; 0x30
    c0ea:	f105 32ff 	add.w	r2, r5, #4294967295
    c0ee:	f47f af0a 	bne.w	bf06 <_dtoa_r+0x8fe>
    c0f2:	4615      	mov	r5, r2
    c0f4:	e7f6      	b.n	c0e4 <_dtoa_r+0xadc>
    c0f6:	4593      	cmp	fp, r2
    c0f8:	d105      	bne.n	c106 <_dtoa_r+0xafe>
    c0fa:	2331      	movs	r3, #49	; 0x31
    c0fc:	f10a 0a01 	add.w	sl, sl, #1
    c100:	f88b 3000 	strb.w	r3, [fp]
    c104:	e6ff      	b.n	bf06 <_dtoa_r+0x8fe>
    c106:	4615      	mov	r5, r2
    c108:	e79f      	b.n	c04a <_dtoa_r+0xa42>
    c10a:	f8df b064 	ldr.w	fp, [pc, #100]	; c170 <_dtoa_r+0xb68>
    c10e:	e007      	b.n	c120 <_dtoa_r+0xb18>
    c110:	9b21      	ldr	r3, [sp, #132]	; 0x84
    c112:	f8df b060 	ldr.w	fp, [pc, #96]	; c174 <_dtoa_r+0xb6c>
    c116:	b11b      	cbz	r3, c120 <_dtoa_r+0xb18>
    c118:	f10b 0308 	add.w	r3, fp, #8
    c11c:	9a21      	ldr	r2, [sp, #132]	; 0x84
    c11e:	6013      	str	r3, [r2, #0]
    c120:	4658      	mov	r0, fp
    c122:	b017      	add	sp, #92	; 0x5c
    c124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c128:	9b06      	ldr	r3, [sp, #24]
    c12a:	2b01      	cmp	r3, #1
    c12c:	f77f ae35 	ble.w	bd9a <_dtoa_r+0x792>
    c130:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c132:	9307      	str	r3, [sp, #28]
    c134:	e649      	b.n	bdca <_dtoa_r+0x7c2>
    c136:	9b02      	ldr	r3, [sp, #8]
    c138:	2b00      	cmp	r3, #0
    c13a:	dc03      	bgt.n	c144 <_dtoa_r+0xb3c>
    c13c:	9b06      	ldr	r3, [sp, #24]
    c13e:	2b02      	cmp	r3, #2
    c140:	f73f aecc 	bgt.w	bedc <_dtoa_r+0x8d4>
    c144:	465d      	mov	r5, fp
    c146:	4639      	mov	r1, r7
    c148:	9804      	ldr	r0, [sp, #16]
    c14a:	f7ff f9d1 	bl	b4f0 <quorem>
    c14e:	f100 0830 	add.w	r8, r0, #48	; 0x30
    c152:	f805 8b01 	strb.w	r8, [r5], #1
    c156:	9a02      	ldr	r2, [sp, #8]
    c158:	eba5 030b 	sub.w	r3, r5, fp
    c15c:	429a      	cmp	r2, r3
    c15e:	ddb0      	ble.n	c0c2 <_dtoa_r+0xaba>
    c160:	2300      	movs	r3, #0
    c162:	220a      	movs	r2, #10
    c164:	9904      	ldr	r1, [sp, #16]
    c166:	4620      	mov	r0, r4
    c168:	f000 f8c2 	bl	c2f0 <__multadd>
    c16c:	9004      	str	r0, [sp, #16]
    c16e:	e7ea      	b.n	c146 <_dtoa_r+0xb3e>
    c170:	0000eb8c 	.word	0x0000eb8c
    c174:	0000ebb0 	.word	0x0000ebb0

0000c178 <_localeconv_r>:
    c178:	4b04      	ldr	r3, [pc, #16]	; (c18c <_localeconv_r+0x14>)
    c17a:	681b      	ldr	r3, [r3, #0]
    c17c:	6a18      	ldr	r0, [r3, #32]
    c17e:	4b04      	ldr	r3, [pc, #16]	; (c190 <_localeconv_r+0x18>)
    c180:	2800      	cmp	r0, #0
    c182:	bf08      	it	eq
    c184:	4618      	moveq	r0, r3
    c186:	30f0      	adds	r0, #240	; 0xf0
    c188:	4770      	bx	lr
    c18a:	bf00      	nop
    c18c:	0001efd8 	.word	0x0001efd8
    c190:	0001f03c 	.word	0x0001f03c
	...

0000c1a0 <memchr>:
    c1a0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    c1a4:	2a10      	cmp	r2, #16
    c1a6:	db2b      	blt.n	c200 <memchr+0x60>
    c1a8:	f010 0f07 	tst.w	r0, #7
    c1ac:	d008      	beq.n	c1c0 <memchr+0x20>
    c1ae:	f810 3b01 	ldrb.w	r3, [r0], #1
    c1b2:	3a01      	subs	r2, #1
    c1b4:	428b      	cmp	r3, r1
    c1b6:	d02d      	beq.n	c214 <memchr+0x74>
    c1b8:	f010 0f07 	tst.w	r0, #7
    c1bc:	b342      	cbz	r2, c210 <memchr+0x70>
    c1be:	d1f6      	bne.n	c1ae <memchr+0xe>
    c1c0:	b4f0      	push	{r4, r5, r6, r7}
    c1c2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
    c1c6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
    c1ca:	f022 0407 	bic.w	r4, r2, #7
    c1ce:	f07f 0700 	mvns.w	r7, #0
    c1d2:	2300      	movs	r3, #0
    c1d4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
    c1d8:	3c08      	subs	r4, #8
    c1da:	ea85 0501 	eor.w	r5, r5, r1
    c1de:	ea86 0601 	eor.w	r6, r6, r1
    c1e2:	fa85 f547 	uadd8	r5, r5, r7
    c1e6:	faa3 f587 	sel	r5, r3, r7
    c1ea:	fa86 f647 	uadd8	r6, r6, r7
    c1ee:	faa5 f687 	sel	r6, r5, r7
    c1f2:	b98e      	cbnz	r6, c218 <memchr+0x78>
    c1f4:	d1ee      	bne.n	c1d4 <memchr+0x34>
    c1f6:	bcf0      	pop	{r4, r5, r6, r7}
    c1f8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    c1fc:	f002 0207 	and.w	r2, r2, #7
    c200:	b132      	cbz	r2, c210 <memchr+0x70>
    c202:	f810 3b01 	ldrb.w	r3, [r0], #1
    c206:	3a01      	subs	r2, #1
    c208:	ea83 0301 	eor.w	r3, r3, r1
    c20c:	b113      	cbz	r3, c214 <memchr+0x74>
    c20e:	d1f8      	bne.n	c202 <memchr+0x62>
    c210:	2000      	movs	r0, #0
    c212:	4770      	bx	lr
    c214:	3801      	subs	r0, #1
    c216:	4770      	bx	lr
    c218:	2d00      	cmp	r5, #0
    c21a:	bf06      	itte	eq
    c21c:	4635      	moveq	r5, r6
    c21e:	3803      	subeq	r0, #3
    c220:	3807      	subne	r0, #7
    c222:	f015 0f01 	tst.w	r5, #1
    c226:	d107      	bne.n	c238 <memchr+0x98>
    c228:	3001      	adds	r0, #1
    c22a:	f415 7f80 	tst.w	r5, #256	; 0x100
    c22e:	bf02      	ittt	eq
    c230:	3001      	addeq	r0, #1
    c232:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
    c236:	3001      	addeq	r0, #1
    c238:	bcf0      	pop	{r4, r5, r6, r7}
    c23a:	3801      	subs	r0, #1
    c23c:	4770      	bx	lr
    c23e:	bf00      	nop

0000c240 <memcpy>:
    c240:	b510      	push	{r4, lr}
    c242:	1e43      	subs	r3, r0, #1
    c244:	440a      	add	r2, r1
    c246:	4291      	cmp	r1, r2
    c248:	d100      	bne.n	c24c <memcpy+0xc>
    c24a:	bd10      	pop	{r4, pc}
    c24c:	f811 4b01 	ldrb.w	r4, [r1], #1
    c250:	f803 4f01 	strb.w	r4, [r3, #1]!
    c254:	e7f7      	b.n	c246 <memcpy+0x6>

0000c256 <__malloc_lock>:
    c256:	4770      	bx	lr

0000c258 <__malloc_unlock>:
    c258:	4770      	bx	lr

0000c25a <_Balloc>:
    c25a:	b570      	push	{r4, r5, r6, lr}
    c25c:	6a45      	ldr	r5, [r0, #36]	; 0x24
    c25e:	4604      	mov	r4, r0
    c260:	460e      	mov	r6, r1
    c262:	b93d      	cbnz	r5, c274 <_Balloc+0x1a>
    c264:	2010      	movs	r0, #16
    c266:	f7fe fbef 	bl	aa48 <malloc>
    c26a:	6260      	str	r0, [r4, #36]	; 0x24
    c26c:	e9c0 5501 	strd	r5, r5, [r0, #4]
    c270:	6005      	str	r5, [r0, #0]
    c272:	60c5      	str	r5, [r0, #12]
    c274:	6a65      	ldr	r5, [r4, #36]	; 0x24
    c276:	68eb      	ldr	r3, [r5, #12]
    c278:	b183      	cbz	r3, c29c <_Balloc+0x42>
    c27a:	6a63      	ldr	r3, [r4, #36]	; 0x24
    c27c:	68db      	ldr	r3, [r3, #12]
    c27e:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
    c282:	b9b8      	cbnz	r0, c2b4 <_Balloc+0x5a>
    c284:	2101      	movs	r1, #1
    c286:	fa01 f506 	lsl.w	r5, r1, r6
    c28a:	1d6a      	adds	r2, r5, #5
    c28c:	0092      	lsls	r2, r2, #2
    c28e:	4620      	mov	r0, r4
    c290:	f000 fabe 	bl	c810 <_calloc_r>
    c294:	b160      	cbz	r0, c2b0 <_Balloc+0x56>
    c296:	e9c0 6501 	strd	r6, r5, [r0, #4]
    c29a:	e00e      	b.n	c2ba <_Balloc+0x60>
    c29c:	2221      	movs	r2, #33	; 0x21
    c29e:	2104      	movs	r1, #4
    c2a0:	4620      	mov	r0, r4
    c2a2:	f000 fab5 	bl	c810 <_calloc_r>
    c2a6:	6a63      	ldr	r3, [r4, #36]	; 0x24
    c2a8:	60e8      	str	r0, [r5, #12]
    c2aa:	68db      	ldr	r3, [r3, #12]
    c2ac:	2b00      	cmp	r3, #0
    c2ae:	d1e4      	bne.n	c27a <_Balloc+0x20>
    c2b0:	2000      	movs	r0, #0
    c2b2:	bd70      	pop	{r4, r5, r6, pc}
    c2b4:	6802      	ldr	r2, [r0, #0]
    c2b6:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
    c2ba:	2300      	movs	r3, #0
    c2bc:	e9c0 3303 	strd	r3, r3, [r0, #12]
    c2c0:	e7f7      	b.n	c2b2 <_Balloc+0x58>

0000c2c2 <_Bfree>:
    c2c2:	b570      	push	{r4, r5, r6, lr}
    c2c4:	6a44      	ldr	r4, [r0, #36]	; 0x24
    c2c6:	4606      	mov	r6, r0
    c2c8:	460d      	mov	r5, r1
    c2ca:	b93c      	cbnz	r4, c2dc <_Bfree+0x1a>
    c2cc:	2010      	movs	r0, #16
    c2ce:	f7fe fbbb 	bl	aa48 <malloc>
    c2d2:	6270      	str	r0, [r6, #36]	; 0x24
    c2d4:	e9c0 4401 	strd	r4, r4, [r0, #4]
    c2d8:	6004      	str	r4, [r0, #0]
    c2da:	60c4      	str	r4, [r0, #12]
    c2dc:	b13d      	cbz	r5, c2ee <_Bfree+0x2c>
    c2de:	6a73      	ldr	r3, [r6, #36]	; 0x24
    c2e0:	686a      	ldr	r2, [r5, #4]
    c2e2:	68db      	ldr	r3, [r3, #12]
    c2e4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    c2e8:	6029      	str	r1, [r5, #0]
    c2ea:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
    c2ee:	bd70      	pop	{r4, r5, r6, pc}

0000c2f0 <__multadd>:
    c2f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    c2f4:	690d      	ldr	r5, [r1, #16]
    c2f6:	461f      	mov	r7, r3
    c2f8:	4606      	mov	r6, r0
    c2fa:	460c      	mov	r4, r1
    c2fc:	f101 0c14 	add.w	ip, r1, #20
    c300:	2300      	movs	r3, #0
    c302:	f8dc 0000 	ldr.w	r0, [ip]
    c306:	b281      	uxth	r1, r0
    c308:	fb02 7101 	mla	r1, r2, r1, r7
    c30c:	0c0f      	lsrs	r7, r1, #16
    c30e:	0c00      	lsrs	r0, r0, #16
    c310:	fb02 7000 	mla	r0, r2, r0, r7
    c314:	b289      	uxth	r1, r1
    c316:	3301      	adds	r3, #1
    c318:	eb01 4100 	add.w	r1, r1, r0, lsl #16
    c31c:	429d      	cmp	r5, r3
    c31e:	ea4f 4710 	mov.w	r7, r0, lsr #16
    c322:	f84c 1b04 	str.w	r1, [ip], #4
    c326:	dcec      	bgt.n	c302 <__multadd+0x12>
    c328:	b1d7      	cbz	r7, c360 <__multadd+0x70>
    c32a:	68a3      	ldr	r3, [r4, #8]
    c32c:	42ab      	cmp	r3, r5
    c32e:	dc12      	bgt.n	c356 <__multadd+0x66>
    c330:	6861      	ldr	r1, [r4, #4]
    c332:	4630      	mov	r0, r6
    c334:	3101      	adds	r1, #1
    c336:	f7ff ff90 	bl	c25a <_Balloc>
    c33a:	6922      	ldr	r2, [r4, #16]
    c33c:	3202      	adds	r2, #2
    c33e:	f104 010c 	add.w	r1, r4, #12
    c342:	4680      	mov	r8, r0
    c344:	0092      	lsls	r2, r2, #2
    c346:	300c      	adds	r0, #12
    c348:	f7ff ff7a 	bl	c240 <memcpy>
    c34c:	4621      	mov	r1, r4
    c34e:	4630      	mov	r0, r6
    c350:	f7ff ffb7 	bl	c2c2 <_Bfree>
    c354:	4644      	mov	r4, r8
    c356:	eb04 0385 	add.w	r3, r4, r5, lsl #2
    c35a:	3501      	adds	r5, #1
    c35c:	615f      	str	r7, [r3, #20]
    c35e:	6125      	str	r5, [r4, #16]
    c360:	4620      	mov	r0, r4
    c362:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000c366 <__hi0bits>:
    c366:	0c02      	lsrs	r2, r0, #16
    c368:	0412      	lsls	r2, r2, #16
    c36a:	4603      	mov	r3, r0
    c36c:	b9b2      	cbnz	r2, c39c <__hi0bits+0x36>
    c36e:	0403      	lsls	r3, r0, #16
    c370:	2010      	movs	r0, #16
    c372:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
    c376:	bf04      	itt	eq
    c378:	021b      	lsleq	r3, r3, #8
    c37a:	3008      	addeq	r0, #8
    c37c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
    c380:	bf04      	itt	eq
    c382:	011b      	lsleq	r3, r3, #4
    c384:	3004      	addeq	r0, #4
    c386:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
    c38a:	bf04      	itt	eq
    c38c:	009b      	lsleq	r3, r3, #2
    c38e:	3002      	addeq	r0, #2
    c390:	2b00      	cmp	r3, #0
    c392:	db06      	blt.n	c3a2 <__hi0bits+0x3c>
    c394:	005b      	lsls	r3, r3, #1
    c396:	d503      	bpl.n	c3a0 <__hi0bits+0x3a>
    c398:	3001      	adds	r0, #1
    c39a:	4770      	bx	lr
    c39c:	2000      	movs	r0, #0
    c39e:	e7e8      	b.n	c372 <__hi0bits+0xc>
    c3a0:	2020      	movs	r0, #32
    c3a2:	4770      	bx	lr

0000c3a4 <__lo0bits>:
    c3a4:	6803      	ldr	r3, [r0, #0]
    c3a6:	f013 0207 	ands.w	r2, r3, #7
    c3aa:	4601      	mov	r1, r0
    c3ac:	d00b      	beq.n	c3c6 <__lo0bits+0x22>
    c3ae:	07da      	lsls	r2, r3, #31
    c3b0:	d423      	bmi.n	c3fa <__lo0bits+0x56>
    c3b2:	0798      	lsls	r0, r3, #30
    c3b4:	bf49      	itett	mi
    c3b6:	085b      	lsrmi	r3, r3, #1
    c3b8:	089b      	lsrpl	r3, r3, #2
    c3ba:	2001      	movmi	r0, #1
    c3bc:	600b      	strmi	r3, [r1, #0]
    c3be:	bf5c      	itt	pl
    c3c0:	600b      	strpl	r3, [r1, #0]
    c3c2:	2002      	movpl	r0, #2
    c3c4:	4770      	bx	lr
    c3c6:	b298      	uxth	r0, r3
    c3c8:	b9a8      	cbnz	r0, c3f6 <__lo0bits+0x52>
    c3ca:	0c1b      	lsrs	r3, r3, #16
    c3cc:	2010      	movs	r0, #16
    c3ce:	f013 0fff 	tst.w	r3, #255	; 0xff
    c3d2:	bf04      	itt	eq
    c3d4:	0a1b      	lsreq	r3, r3, #8
    c3d6:	3008      	addeq	r0, #8
    c3d8:	071a      	lsls	r2, r3, #28
    c3da:	bf04      	itt	eq
    c3dc:	091b      	lsreq	r3, r3, #4
    c3de:	3004      	addeq	r0, #4
    c3e0:	079a      	lsls	r2, r3, #30
    c3e2:	bf04      	itt	eq
    c3e4:	089b      	lsreq	r3, r3, #2
    c3e6:	3002      	addeq	r0, #2
    c3e8:	07da      	lsls	r2, r3, #31
    c3ea:	d402      	bmi.n	c3f2 <__lo0bits+0x4e>
    c3ec:	085b      	lsrs	r3, r3, #1
    c3ee:	d006      	beq.n	c3fe <__lo0bits+0x5a>
    c3f0:	3001      	adds	r0, #1
    c3f2:	600b      	str	r3, [r1, #0]
    c3f4:	4770      	bx	lr
    c3f6:	4610      	mov	r0, r2
    c3f8:	e7e9      	b.n	c3ce <__lo0bits+0x2a>
    c3fa:	2000      	movs	r0, #0
    c3fc:	4770      	bx	lr
    c3fe:	2020      	movs	r0, #32
    c400:	4770      	bx	lr

0000c402 <__i2b>:
    c402:	b510      	push	{r4, lr}
    c404:	460c      	mov	r4, r1
    c406:	2101      	movs	r1, #1
    c408:	f7ff ff27 	bl	c25a <_Balloc>
    c40c:	2201      	movs	r2, #1
    c40e:	6144      	str	r4, [r0, #20]
    c410:	6102      	str	r2, [r0, #16]
    c412:	bd10      	pop	{r4, pc}

0000c414 <__multiply>:
    c414:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c418:	4614      	mov	r4, r2
    c41a:	690a      	ldr	r2, [r1, #16]
    c41c:	6923      	ldr	r3, [r4, #16]
    c41e:	429a      	cmp	r2, r3
    c420:	bfb8      	it	lt
    c422:	460b      	movlt	r3, r1
    c424:	4688      	mov	r8, r1
    c426:	bfbc      	itt	lt
    c428:	46a0      	movlt	r8, r4
    c42a:	461c      	movlt	r4, r3
    c42c:	f8d8 7010 	ldr.w	r7, [r8, #16]
    c430:	f8d4 9010 	ldr.w	r9, [r4, #16]
    c434:	f8d8 3008 	ldr.w	r3, [r8, #8]
    c438:	f8d8 1004 	ldr.w	r1, [r8, #4]
    c43c:	eb07 0609 	add.w	r6, r7, r9
    c440:	42b3      	cmp	r3, r6
    c442:	bfb8      	it	lt
    c444:	3101      	addlt	r1, #1
    c446:	f7ff ff08 	bl	c25a <_Balloc>
    c44a:	f100 0514 	add.w	r5, r0, #20
    c44e:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
    c452:	462b      	mov	r3, r5
    c454:	2200      	movs	r2, #0
    c456:	4573      	cmp	r3, lr
    c458:	d316      	bcc.n	c488 <__multiply+0x74>
    c45a:	f104 0214 	add.w	r2, r4, #20
    c45e:	f108 0114 	add.w	r1, r8, #20
    c462:	eb02 0389 	add.w	r3, r2, r9, lsl #2
    c466:	eb01 0787 	add.w	r7, r1, r7, lsl #2
    c46a:	9300      	str	r3, [sp, #0]
    c46c:	9b00      	ldr	r3, [sp, #0]
    c46e:	9201      	str	r2, [sp, #4]
    c470:	4293      	cmp	r3, r2
    c472:	d80c      	bhi.n	c48e <__multiply+0x7a>
    c474:	2e00      	cmp	r6, #0
    c476:	dd03      	ble.n	c480 <__multiply+0x6c>
    c478:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
    c47c:	2b00      	cmp	r3, #0
    c47e:	d05d      	beq.n	c53c <__multiply+0x128>
    c480:	6106      	str	r6, [r0, #16]
    c482:	b003      	add	sp, #12
    c484:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c488:	f843 2b04 	str.w	r2, [r3], #4
    c48c:	e7e3      	b.n	c456 <__multiply+0x42>
    c48e:	f8b2 b000 	ldrh.w	fp, [r2]
    c492:	f1bb 0f00 	cmp.w	fp, #0
    c496:	d023      	beq.n	c4e0 <__multiply+0xcc>
    c498:	4689      	mov	r9, r1
    c49a:	46ac      	mov	ip, r5
    c49c:	f04f 0800 	mov.w	r8, #0
    c4a0:	f859 4b04 	ldr.w	r4, [r9], #4
    c4a4:	f8dc a000 	ldr.w	sl, [ip]
    c4a8:	b2a3      	uxth	r3, r4
    c4aa:	fa1f fa8a 	uxth.w	sl, sl
    c4ae:	fb0b a303 	mla	r3, fp, r3, sl
    c4b2:	ea4f 4a14 	mov.w	sl, r4, lsr #16
    c4b6:	f8dc 4000 	ldr.w	r4, [ip]
    c4ba:	4443      	add	r3, r8
    c4bc:	ea4f 4814 	mov.w	r8, r4, lsr #16
    c4c0:	fb0b 840a 	mla	r4, fp, sl, r8
    c4c4:	eb04 4413 	add.w	r4, r4, r3, lsr #16
    c4c8:	46e2      	mov	sl, ip
    c4ca:	b29b      	uxth	r3, r3
    c4cc:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
    c4d0:	454f      	cmp	r7, r9
    c4d2:	ea4f 4814 	mov.w	r8, r4, lsr #16
    c4d6:	f84a 3b04 	str.w	r3, [sl], #4
    c4da:	d82b      	bhi.n	c534 <__multiply+0x120>
    c4dc:	f8cc 8004 	str.w	r8, [ip, #4]
    c4e0:	9b01      	ldr	r3, [sp, #4]
    c4e2:	f8b3 a002 	ldrh.w	sl, [r3, #2]
    c4e6:	3204      	adds	r2, #4
    c4e8:	f1ba 0f00 	cmp.w	sl, #0
    c4ec:	d020      	beq.n	c530 <__multiply+0x11c>
    c4ee:	682b      	ldr	r3, [r5, #0]
    c4f0:	4689      	mov	r9, r1
    c4f2:	46a8      	mov	r8, r5
    c4f4:	f04f 0b00 	mov.w	fp, #0
    c4f8:	f8b9 c000 	ldrh.w	ip, [r9]
    c4fc:	f8b8 4002 	ldrh.w	r4, [r8, #2]
    c500:	fb0a 440c 	mla	r4, sl, ip, r4
    c504:	445c      	add	r4, fp
    c506:	46c4      	mov	ip, r8
    c508:	b29b      	uxth	r3, r3
    c50a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
    c50e:	f84c 3b04 	str.w	r3, [ip], #4
    c512:	f859 3b04 	ldr.w	r3, [r9], #4
    c516:	f8b8 b004 	ldrh.w	fp, [r8, #4]
    c51a:	0c1b      	lsrs	r3, r3, #16
    c51c:	fb0a b303 	mla	r3, sl, r3, fp
    c520:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    c524:	454f      	cmp	r7, r9
    c526:	ea4f 4b13 	mov.w	fp, r3, lsr #16
    c52a:	d805      	bhi.n	c538 <__multiply+0x124>
    c52c:	f8c8 3004 	str.w	r3, [r8, #4]
    c530:	3504      	adds	r5, #4
    c532:	e79b      	b.n	c46c <__multiply+0x58>
    c534:	46d4      	mov	ip, sl
    c536:	e7b3      	b.n	c4a0 <__multiply+0x8c>
    c538:	46e0      	mov	r8, ip
    c53a:	e7dd      	b.n	c4f8 <__multiply+0xe4>
    c53c:	3e01      	subs	r6, #1
    c53e:	e799      	b.n	c474 <__multiply+0x60>

0000c540 <__pow5mult>:
    c540:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    c544:	4615      	mov	r5, r2
    c546:	f012 0203 	ands.w	r2, r2, #3
    c54a:	4606      	mov	r6, r0
    c54c:	460f      	mov	r7, r1
    c54e:	d007      	beq.n	c560 <__pow5mult+0x20>
    c550:	3a01      	subs	r2, #1
    c552:	4c21      	ldr	r4, [pc, #132]	; (c5d8 <__pow5mult+0x98>)
    c554:	2300      	movs	r3, #0
    c556:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
    c55a:	f7ff fec9 	bl	c2f0 <__multadd>
    c55e:	4607      	mov	r7, r0
    c560:	10ad      	asrs	r5, r5, #2
    c562:	d035      	beq.n	c5d0 <__pow5mult+0x90>
    c564:	6a74      	ldr	r4, [r6, #36]	; 0x24
    c566:	b93c      	cbnz	r4, c578 <__pow5mult+0x38>
    c568:	2010      	movs	r0, #16
    c56a:	f7fe fa6d 	bl	aa48 <malloc>
    c56e:	6270      	str	r0, [r6, #36]	; 0x24
    c570:	e9c0 4401 	strd	r4, r4, [r0, #4]
    c574:	6004      	str	r4, [r0, #0]
    c576:	60c4      	str	r4, [r0, #12]
    c578:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
    c57c:	f8d8 4008 	ldr.w	r4, [r8, #8]
    c580:	b94c      	cbnz	r4, c596 <__pow5mult+0x56>
    c582:	f240 2171 	movw	r1, #625	; 0x271
    c586:	4630      	mov	r0, r6
    c588:	f7ff ff3b 	bl	c402 <__i2b>
    c58c:	2300      	movs	r3, #0
    c58e:	f8c8 0008 	str.w	r0, [r8, #8]
    c592:	4604      	mov	r4, r0
    c594:	6003      	str	r3, [r0, #0]
    c596:	f04f 0800 	mov.w	r8, #0
    c59a:	07eb      	lsls	r3, r5, #31
    c59c:	d50a      	bpl.n	c5b4 <__pow5mult+0x74>
    c59e:	4639      	mov	r1, r7
    c5a0:	4622      	mov	r2, r4
    c5a2:	4630      	mov	r0, r6
    c5a4:	f7ff ff36 	bl	c414 <__multiply>
    c5a8:	4639      	mov	r1, r7
    c5aa:	4681      	mov	r9, r0
    c5ac:	4630      	mov	r0, r6
    c5ae:	f7ff fe88 	bl	c2c2 <_Bfree>
    c5b2:	464f      	mov	r7, r9
    c5b4:	106d      	asrs	r5, r5, #1
    c5b6:	d00b      	beq.n	c5d0 <__pow5mult+0x90>
    c5b8:	6820      	ldr	r0, [r4, #0]
    c5ba:	b938      	cbnz	r0, c5cc <__pow5mult+0x8c>
    c5bc:	4622      	mov	r2, r4
    c5be:	4621      	mov	r1, r4
    c5c0:	4630      	mov	r0, r6
    c5c2:	f7ff ff27 	bl	c414 <__multiply>
    c5c6:	6020      	str	r0, [r4, #0]
    c5c8:	f8c0 8000 	str.w	r8, [r0]
    c5cc:	4604      	mov	r4, r0
    c5ce:	e7e4      	b.n	c59a <__pow5mult+0x5a>
    c5d0:	4638      	mov	r0, r7
    c5d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    c5d6:	bf00      	nop
    c5d8:	0000ecb0 	.word	0x0000ecb0

0000c5dc <__lshift>:
    c5dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    c5e0:	460c      	mov	r4, r1
    c5e2:	ea4f 1a62 	mov.w	sl, r2, asr #5
    c5e6:	6923      	ldr	r3, [r4, #16]
    c5e8:	6849      	ldr	r1, [r1, #4]
    c5ea:	eb0a 0903 	add.w	r9, sl, r3
    c5ee:	68a3      	ldr	r3, [r4, #8]
    c5f0:	4607      	mov	r7, r0
    c5f2:	4616      	mov	r6, r2
    c5f4:	f109 0501 	add.w	r5, r9, #1
    c5f8:	42ab      	cmp	r3, r5
    c5fa:	db32      	blt.n	c662 <__lshift+0x86>
    c5fc:	4638      	mov	r0, r7
    c5fe:	f7ff fe2c 	bl	c25a <_Balloc>
    c602:	2300      	movs	r3, #0
    c604:	4680      	mov	r8, r0
    c606:	f100 0114 	add.w	r1, r0, #20
    c60a:	461a      	mov	r2, r3
    c60c:	4553      	cmp	r3, sl
    c60e:	db2b      	blt.n	c668 <__lshift+0x8c>
    c610:	6920      	ldr	r0, [r4, #16]
    c612:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
    c616:	f104 0314 	add.w	r3, r4, #20
    c61a:	f016 021f 	ands.w	r2, r6, #31
    c61e:	eb01 018a 	add.w	r1, r1, sl, lsl #2
    c622:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
    c626:	d025      	beq.n	c674 <__lshift+0x98>
    c628:	f1c2 0e20 	rsb	lr, r2, #32
    c62c:	2000      	movs	r0, #0
    c62e:	681e      	ldr	r6, [r3, #0]
    c630:	468a      	mov	sl, r1
    c632:	4096      	lsls	r6, r2
    c634:	4330      	orrs	r0, r6
    c636:	f84a 0b04 	str.w	r0, [sl], #4
    c63a:	f853 0b04 	ldr.w	r0, [r3], #4
    c63e:	459c      	cmp	ip, r3
    c640:	fa20 f00e 	lsr.w	r0, r0, lr
    c644:	d814      	bhi.n	c670 <__lshift+0x94>
    c646:	6048      	str	r0, [r1, #4]
    c648:	b108      	cbz	r0, c64e <__lshift+0x72>
    c64a:	f109 0502 	add.w	r5, r9, #2
    c64e:	3d01      	subs	r5, #1
    c650:	4638      	mov	r0, r7
    c652:	f8c8 5010 	str.w	r5, [r8, #16]
    c656:	4621      	mov	r1, r4
    c658:	f7ff fe33 	bl	c2c2 <_Bfree>
    c65c:	4640      	mov	r0, r8
    c65e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    c662:	3101      	adds	r1, #1
    c664:	005b      	lsls	r3, r3, #1
    c666:	e7c7      	b.n	c5f8 <__lshift+0x1c>
    c668:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    c66c:	3301      	adds	r3, #1
    c66e:	e7cd      	b.n	c60c <__lshift+0x30>
    c670:	4651      	mov	r1, sl
    c672:	e7dc      	b.n	c62e <__lshift+0x52>
    c674:	3904      	subs	r1, #4
    c676:	f853 2b04 	ldr.w	r2, [r3], #4
    c67a:	f841 2f04 	str.w	r2, [r1, #4]!
    c67e:	459c      	cmp	ip, r3
    c680:	d8f9      	bhi.n	c676 <__lshift+0x9a>
    c682:	e7e4      	b.n	c64e <__lshift+0x72>

0000c684 <__mcmp>:
    c684:	6903      	ldr	r3, [r0, #16]
    c686:	690a      	ldr	r2, [r1, #16]
    c688:	1a9b      	subs	r3, r3, r2
    c68a:	b530      	push	{r4, r5, lr}
    c68c:	d10c      	bne.n	c6a8 <__mcmp+0x24>
    c68e:	0092      	lsls	r2, r2, #2
    c690:	3014      	adds	r0, #20
    c692:	3114      	adds	r1, #20
    c694:	1884      	adds	r4, r0, r2
    c696:	4411      	add	r1, r2
    c698:	f854 5d04 	ldr.w	r5, [r4, #-4]!
    c69c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
    c6a0:	4295      	cmp	r5, r2
    c6a2:	d003      	beq.n	c6ac <__mcmp+0x28>
    c6a4:	d305      	bcc.n	c6b2 <__mcmp+0x2e>
    c6a6:	2301      	movs	r3, #1
    c6a8:	4618      	mov	r0, r3
    c6aa:	bd30      	pop	{r4, r5, pc}
    c6ac:	42a0      	cmp	r0, r4
    c6ae:	d3f3      	bcc.n	c698 <__mcmp+0x14>
    c6b0:	e7fa      	b.n	c6a8 <__mcmp+0x24>
    c6b2:	f04f 33ff 	mov.w	r3, #4294967295
    c6b6:	e7f7      	b.n	c6a8 <__mcmp+0x24>

0000c6b8 <__mdiff>:
    c6b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    c6bc:	460d      	mov	r5, r1
    c6be:	4607      	mov	r7, r0
    c6c0:	4611      	mov	r1, r2
    c6c2:	4628      	mov	r0, r5
    c6c4:	4614      	mov	r4, r2
    c6c6:	f7ff ffdd 	bl	c684 <__mcmp>
    c6ca:	1e06      	subs	r6, r0, #0
    c6cc:	d108      	bne.n	c6e0 <__mdiff+0x28>
    c6ce:	4631      	mov	r1, r6
    c6d0:	4638      	mov	r0, r7
    c6d2:	f7ff fdc2 	bl	c25a <_Balloc>
    c6d6:	2301      	movs	r3, #1
    c6d8:	e9c0 3604 	strd	r3, r6, [r0, #16]
    c6dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    c6e0:	bfa4      	itt	ge
    c6e2:	4623      	movge	r3, r4
    c6e4:	462c      	movge	r4, r5
    c6e6:	4638      	mov	r0, r7
    c6e8:	6861      	ldr	r1, [r4, #4]
    c6ea:	bfa6      	itte	ge
    c6ec:	461d      	movge	r5, r3
    c6ee:	2600      	movge	r6, #0
    c6f0:	2601      	movlt	r6, #1
    c6f2:	f7ff fdb2 	bl	c25a <_Balloc>
    c6f6:	692b      	ldr	r3, [r5, #16]
    c6f8:	60c6      	str	r6, [r0, #12]
    c6fa:	6926      	ldr	r6, [r4, #16]
    c6fc:	f105 0914 	add.w	r9, r5, #20
    c700:	f104 0214 	add.w	r2, r4, #20
    c704:	eb02 0786 	add.w	r7, r2, r6, lsl #2
    c708:	eb09 0883 	add.w	r8, r9, r3, lsl #2
    c70c:	f100 0514 	add.w	r5, r0, #20
    c710:	f04f 0e00 	mov.w	lr, #0
    c714:	f852 ab04 	ldr.w	sl, [r2], #4
    c718:	f859 4b04 	ldr.w	r4, [r9], #4
    c71c:	fa1e f18a 	uxtah	r1, lr, sl
    c720:	b2a3      	uxth	r3, r4
    c722:	1ac9      	subs	r1, r1, r3
    c724:	0c23      	lsrs	r3, r4, #16
    c726:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
    c72a:	eb03 4321 	add.w	r3, r3, r1, asr #16
    c72e:	b289      	uxth	r1, r1
    c730:	ea4f 4e23 	mov.w	lr, r3, asr #16
    c734:	45c8      	cmp	r8, r9
    c736:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
    c73a:	4694      	mov	ip, r2
    c73c:	f845 3b04 	str.w	r3, [r5], #4
    c740:	d8e8      	bhi.n	c714 <__mdiff+0x5c>
    c742:	45bc      	cmp	ip, r7
    c744:	d304      	bcc.n	c750 <__mdiff+0x98>
    c746:	f855 3d04 	ldr.w	r3, [r5, #-4]!
    c74a:	b183      	cbz	r3, c76e <__mdiff+0xb6>
    c74c:	6106      	str	r6, [r0, #16]
    c74e:	e7c5      	b.n	c6dc <__mdiff+0x24>
    c750:	f85c 1b04 	ldr.w	r1, [ip], #4
    c754:	fa1e f381 	uxtah	r3, lr, r1
    c758:	141a      	asrs	r2, r3, #16
    c75a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
    c75e:	b29b      	uxth	r3, r3
    c760:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    c764:	ea4f 4e22 	mov.w	lr, r2, asr #16
    c768:	f845 3b04 	str.w	r3, [r5], #4
    c76c:	e7e9      	b.n	c742 <__mdiff+0x8a>
    c76e:	3e01      	subs	r6, #1
    c770:	e7e9      	b.n	c746 <__mdiff+0x8e>

0000c772 <__d2b>:
    c772:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    c776:	460e      	mov	r6, r1
    c778:	2101      	movs	r1, #1
    c77a:	ec59 8b10 	vmov	r8, r9, d0
    c77e:	4615      	mov	r5, r2
    c780:	f7ff fd6b 	bl	c25a <_Balloc>
    c784:	f3c9 540a 	ubfx	r4, r9, #20, #11
    c788:	4607      	mov	r7, r0
    c78a:	f3c9 0313 	ubfx	r3, r9, #0, #20
    c78e:	bb34      	cbnz	r4, c7de <__d2b+0x6c>
    c790:	9301      	str	r3, [sp, #4]
    c792:	f1b8 0300 	subs.w	r3, r8, #0
    c796:	d027      	beq.n	c7e8 <__d2b+0x76>
    c798:	a802      	add	r0, sp, #8
    c79a:	f840 3d08 	str.w	r3, [r0, #-8]!
    c79e:	f7ff fe01 	bl	c3a4 <__lo0bits>
    c7a2:	9900      	ldr	r1, [sp, #0]
    c7a4:	b1f0      	cbz	r0, c7e4 <__d2b+0x72>
    c7a6:	9a01      	ldr	r2, [sp, #4]
    c7a8:	f1c0 0320 	rsb	r3, r0, #32
    c7ac:	fa02 f303 	lsl.w	r3, r2, r3
    c7b0:	430b      	orrs	r3, r1
    c7b2:	40c2      	lsrs	r2, r0
    c7b4:	617b      	str	r3, [r7, #20]
    c7b6:	9201      	str	r2, [sp, #4]
    c7b8:	9b01      	ldr	r3, [sp, #4]
    c7ba:	61bb      	str	r3, [r7, #24]
    c7bc:	2b00      	cmp	r3, #0
    c7be:	bf14      	ite	ne
    c7c0:	2102      	movne	r1, #2
    c7c2:	2101      	moveq	r1, #1
    c7c4:	6139      	str	r1, [r7, #16]
    c7c6:	b1c4      	cbz	r4, c7fa <__d2b+0x88>
    c7c8:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
    c7cc:	4404      	add	r4, r0
    c7ce:	6034      	str	r4, [r6, #0]
    c7d0:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
    c7d4:	6028      	str	r0, [r5, #0]
    c7d6:	4638      	mov	r0, r7
    c7d8:	b003      	add	sp, #12
    c7da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    c7de:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    c7e2:	e7d5      	b.n	c790 <__d2b+0x1e>
    c7e4:	6179      	str	r1, [r7, #20]
    c7e6:	e7e7      	b.n	c7b8 <__d2b+0x46>
    c7e8:	a801      	add	r0, sp, #4
    c7ea:	f7ff fddb 	bl	c3a4 <__lo0bits>
    c7ee:	9b01      	ldr	r3, [sp, #4]
    c7f0:	617b      	str	r3, [r7, #20]
    c7f2:	2101      	movs	r1, #1
    c7f4:	6139      	str	r1, [r7, #16]
    c7f6:	3020      	adds	r0, #32
    c7f8:	e7e5      	b.n	c7c6 <__d2b+0x54>
    c7fa:	eb07 0381 	add.w	r3, r7, r1, lsl #2
    c7fe:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
    c802:	6030      	str	r0, [r6, #0]
    c804:	6918      	ldr	r0, [r3, #16]
    c806:	f7ff fdae 	bl	c366 <__hi0bits>
    c80a:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
    c80e:	e7e1      	b.n	c7d4 <__d2b+0x62>

0000c810 <_calloc_r>:
    c810:	b538      	push	{r3, r4, r5, lr}
    c812:	fb02 f401 	mul.w	r4, r2, r1
    c816:	4621      	mov	r1, r4
    c818:	f7fe f97c 	bl	ab14 <_malloc_r>
    c81c:	4605      	mov	r5, r0
    c81e:	b118      	cbz	r0, c828 <_calloc_r+0x18>
    c820:	4622      	mov	r2, r4
    c822:	2100      	movs	r1, #0
    c824:	f7fe f920 	bl	aa68 <memset>
    c828:	4628      	mov	r0, r5
    c82a:	bd38      	pop	{r3, r4, r5, pc}

0000c82c <__ssputs_r>:
    c82c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    c830:	688e      	ldr	r6, [r1, #8]
    c832:	429e      	cmp	r6, r3
    c834:	4682      	mov	sl, r0
    c836:	460c      	mov	r4, r1
    c838:	4690      	mov	r8, r2
    c83a:	4699      	mov	r9, r3
    c83c:	d837      	bhi.n	c8ae <__ssputs_r+0x82>
    c83e:	898a      	ldrh	r2, [r1, #12]
    c840:	f412 6f90 	tst.w	r2, #1152	; 0x480
    c844:	d031      	beq.n	c8aa <__ssputs_r+0x7e>
    c846:	6825      	ldr	r5, [r4, #0]
    c848:	6909      	ldr	r1, [r1, #16]
    c84a:	1a6f      	subs	r7, r5, r1
    c84c:	6965      	ldr	r5, [r4, #20]
    c84e:	2302      	movs	r3, #2
    c850:	eb05 0545 	add.w	r5, r5, r5, lsl #1
    c854:	fb95 f5f3 	sdiv	r5, r5, r3
    c858:	f109 0301 	add.w	r3, r9, #1
    c85c:	443b      	add	r3, r7
    c85e:	429d      	cmp	r5, r3
    c860:	bf38      	it	cc
    c862:	461d      	movcc	r5, r3
    c864:	0553      	lsls	r3, r2, #21
    c866:	d530      	bpl.n	c8ca <__ssputs_r+0x9e>
    c868:	4629      	mov	r1, r5
    c86a:	f7fe f953 	bl	ab14 <_malloc_r>
    c86e:	4606      	mov	r6, r0
    c870:	b950      	cbnz	r0, c888 <__ssputs_r+0x5c>
    c872:	230c      	movs	r3, #12
    c874:	f8ca 3000 	str.w	r3, [sl]
    c878:	89a3      	ldrh	r3, [r4, #12]
    c87a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    c87e:	81a3      	strh	r3, [r4, #12]
    c880:	f04f 30ff 	mov.w	r0, #4294967295
    c884:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    c888:	463a      	mov	r2, r7
    c88a:	6921      	ldr	r1, [r4, #16]
    c88c:	f7ff fcd8 	bl	c240 <memcpy>
    c890:	89a3      	ldrh	r3, [r4, #12]
    c892:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
    c896:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    c89a:	81a3      	strh	r3, [r4, #12]
    c89c:	6126      	str	r6, [r4, #16]
    c89e:	6165      	str	r5, [r4, #20]
    c8a0:	443e      	add	r6, r7
    c8a2:	1bed      	subs	r5, r5, r7
    c8a4:	6026      	str	r6, [r4, #0]
    c8a6:	60a5      	str	r5, [r4, #8]
    c8a8:	464e      	mov	r6, r9
    c8aa:	454e      	cmp	r6, r9
    c8ac:	d900      	bls.n	c8b0 <__ssputs_r+0x84>
    c8ae:	464e      	mov	r6, r9
    c8b0:	4632      	mov	r2, r6
    c8b2:	4641      	mov	r1, r8
    c8b4:	6820      	ldr	r0, [r4, #0]
    c8b6:	f000 f91d 	bl	caf4 <memmove>
    c8ba:	68a3      	ldr	r3, [r4, #8]
    c8bc:	1b9b      	subs	r3, r3, r6
    c8be:	60a3      	str	r3, [r4, #8]
    c8c0:	6823      	ldr	r3, [r4, #0]
    c8c2:	441e      	add	r6, r3
    c8c4:	6026      	str	r6, [r4, #0]
    c8c6:	2000      	movs	r0, #0
    c8c8:	e7dc      	b.n	c884 <__ssputs_r+0x58>
    c8ca:	462a      	mov	r2, r5
    c8cc:	f000 f92b 	bl	cb26 <_realloc_r>
    c8d0:	4606      	mov	r6, r0
    c8d2:	2800      	cmp	r0, #0
    c8d4:	d1e2      	bne.n	c89c <__ssputs_r+0x70>
    c8d6:	6921      	ldr	r1, [r4, #16]
    c8d8:	4650      	mov	r0, sl
    c8da:	f7fe f8cd 	bl	aa78 <_free_r>
    c8de:	e7c8      	b.n	c872 <__ssputs_r+0x46>

0000c8e0 <_svfiprintf_r>:
    c8e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c8e4:	461d      	mov	r5, r3
    c8e6:	898b      	ldrh	r3, [r1, #12]
    c8e8:	061f      	lsls	r7, r3, #24
    c8ea:	b09d      	sub	sp, #116	; 0x74
    c8ec:	4680      	mov	r8, r0
    c8ee:	460c      	mov	r4, r1
    c8f0:	4616      	mov	r6, r2
    c8f2:	d50f      	bpl.n	c914 <_svfiprintf_r+0x34>
    c8f4:	690b      	ldr	r3, [r1, #16]
    c8f6:	b96b      	cbnz	r3, c914 <_svfiprintf_r+0x34>
    c8f8:	2140      	movs	r1, #64	; 0x40
    c8fa:	f7fe f90b 	bl	ab14 <_malloc_r>
    c8fe:	6020      	str	r0, [r4, #0]
    c900:	6120      	str	r0, [r4, #16]
    c902:	b928      	cbnz	r0, c910 <_svfiprintf_r+0x30>
    c904:	230c      	movs	r3, #12
    c906:	f8c8 3000 	str.w	r3, [r8]
    c90a:	f04f 30ff 	mov.w	r0, #4294967295
    c90e:	e0c8      	b.n	caa2 <_svfiprintf_r+0x1c2>
    c910:	2340      	movs	r3, #64	; 0x40
    c912:	6163      	str	r3, [r4, #20]
    c914:	2300      	movs	r3, #0
    c916:	9309      	str	r3, [sp, #36]	; 0x24
    c918:	2320      	movs	r3, #32
    c91a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    c91e:	2330      	movs	r3, #48	; 0x30
    c920:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    c924:	9503      	str	r5, [sp, #12]
    c926:	f04f 0b01 	mov.w	fp, #1
    c92a:	4637      	mov	r7, r6
    c92c:	463d      	mov	r5, r7
    c92e:	f815 3b01 	ldrb.w	r3, [r5], #1
    c932:	b10b      	cbz	r3, c938 <_svfiprintf_r+0x58>
    c934:	2b25      	cmp	r3, #37	; 0x25
    c936:	d13e      	bne.n	c9b6 <_svfiprintf_r+0xd6>
    c938:	ebb7 0a06 	subs.w	sl, r7, r6
    c93c:	d00b      	beq.n	c956 <_svfiprintf_r+0x76>
    c93e:	4653      	mov	r3, sl
    c940:	4632      	mov	r2, r6
    c942:	4621      	mov	r1, r4
    c944:	4640      	mov	r0, r8
    c946:	f7ff ff71 	bl	c82c <__ssputs_r>
    c94a:	3001      	adds	r0, #1
    c94c:	f000 80a4 	beq.w	ca98 <_svfiprintf_r+0x1b8>
    c950:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c952:	4453      	add	r3, sl
    c954:	9309      	str	r3, [sp, #36]	; 0x24
    c956:	783b      	ldrb	r3, [r7, #0]
    c958:	2b00      	cmp	r3, #0
    c95a:	f000 809d 	beq.w	ca98 <_svfiprintf_r+0x1b8>
    c95e:	2300      	movs	r3, #0
    c960:	f04f 32ff 	mov.w	r2, #4294967295
    c964:	e9cd 2305 	strd	r2, r3, [sp, #20]
    c968:	9304      	str	r3, [sp, #16]
    c96a:	9307      	str	r3, [sp, #28]
    c96c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    c970:	931a      	str	r3, [sp, #104]	; 0x68
    c972:	462f      	mov	r7, r5
    c974:	2205      	movs	r2, #5
    c976:	f817 1b01 	ldrb.w	r1, [r7], #1
    c97a:	4850      	ldr	r0, [pc, #320]	; (cabc <_svfiprintf_r+0x1dc>)
    c97c:	f7ff fc10 	bl	c1a0 <memchr>
    c980:	9b04      	ldr	r3, [sp, #16]
    c982:	b9d0      	cbnz	r0, c9ba <_svfiprintf_r+0xda>
    c984:	06d9      	lsls	r1, r3, #27
    c986:	bf44      	itt	mi
    c988:	2220      	movmi	r2, #32
    c98a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    c98e:	071a      	lsls	r2, r3, #28
    c990:	bf44      	itt	mi
    c992:	222b      	movmi	r2, #43	; 0x2b
    c994:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    c998:	782a      	ldrb	r2, [r5, #0]
    c99a:	2a2a      	cmp	r2, #42	; 0x2a
    c99c:	d015      	beq.n	c9ca <_svfiprintf_r+0xea>
    c99e:	9a07      	ldr	r2, [sp, #28]
    c9a0:	462f      	mov	r7, r5
    c9a2:	2000      	movs	r0, #0
    c9a4:	250a      	movs	r5, #10
    c9a6:	4639      	mov	r1, r7
    c9a8:	f811 3b01 	ldrb.w	r3, [r1], #1
    c9ac:	3b30      	subs	r3, #48	; 0x30
    c9ae:	2b09      	cmp	r3, #9
    c9b0:	d94d      	bls.n	ca4e <_svfiprintf_r+0x16e>
    c9b2:	b1b8      	cbz	r0, c9e4 <_svfiprintf_r+0x104>
    c9b4:	e00f      	b.n	c9d6 <_svfiprintf_r+0xf6>
    c9b6:	462f      	mov	r7, r5
    c9b8:	e7b8      	b.n	c92c <_svfiprintf_r+0x4c>
    c9ba:	4a40      	ldr	r2, [pc, #256]	; (cabc <_svfiprintf_r+0x1dc>)
    c9bc:	1a80      	subs	r0, r0, r2
    c9be:	fa0b f000 	lsl.w	r0, fp, r0
    c9c2:	4318      	orrs	r0, r3
    c9c4:	9004      	str	r0, [sp, #16]
    c9c6:	463d      	mov	r5, r7
    c9c8:	e7d3      	b.n	c972 <_svfiprintf_r+0x92>
    c9ca:	9a03      	ldr	r2, [sp, #12]
    c9cc:	1d11      	adds	r1, r2, #4
    c9ce:	6812      	ldr	r2, [r2, #0]
    c9d0:	9103      	str	r1, [sp, #12]
    c9d2:	2a00      	cmp	r2, #0
    c9d4:	db01      	blt.n	c9da <_svfiprintf_r+0xfa>
    c9d6:	9207      	str	r2, [sp, #28]
    c9d8:	e004      	b.n	c9e4 <_svfiprintf_r+0x104>
    c9da:	4252      	negs	r2, r2
    c9dc:	f043 0302 	orr.w	r3, r3, #2
    c9e0:	9207      	str	r2, [sp, #28]
    c9e2:	9304      	str	r3, [sp, #16]
    c9e4:	783b      	ldrb	r3, [r7, #0]
    c9e6:	2b2e      	cmp	r3, #46	; 0x2e
    c9e8:	d10c      	bne.n	ca04 <_svfiprintf_r+0x124>
    c9ea:	787b      	ldrb	r3, [r7, #1]
    c9ec:	2b2a      	cmp	r3, #42	; 0x2a
    c9ee:	d133      	bne.n	ca58 <_svfiprintf_r+0x178>
    c9f0:	9b03      	ldr	r3, [sp, #12]
    c9f2:	1d1a      	adds	r2, r3, #4
    c9f4:	681b      	ldr	r3, [r3, #0]
    c9f6:	9203      	str	r2, [sp, #12]
    c9f8:	2b00      	cmp	r3, #0
    c9fa:	bfb8      	it	lt
    c9fc:	f04f 33ff 	movlt.w	r3, #4294967295
    ca00:	3702      	adds	r7, #2
    ca02:	9305      	str	r3, [sp, #20]
    ca04:	4d2e      	ldr	r5, [pc, #184]	; (cac0 <_svfiprintf_r+0x1e0>)
    ca06:	7839      	ldrb	r1, [r7, #0]
    ca08:	2203      	movs	r2, #3
    ca0a:	4628      	mov	r0, r5
    ca0c:	f7ff fbc8 	bl	c1a0 <memchr>
    ca10:	b138      	cbz	r0, ca22 <_svfiprintf_r+0x142>
    ca12:	2340      	movs	r3, #64	; 0x40
    ca14:	1b40      	subs	r0, r0, r5
    ca16:	fa03 f000 	lsl.w	r0, r3, r0
    ca1a:	9b04      	ldr	r3, [sp, #16]
    ca1c:	4303      	orrs	r3, r0
    ca1e:	3701      	adds	r7, #1
    ca20:	9304      	str	r3, [sp, #16]
    ca22:	7839      	ldrb	r1, [r7, #0]
    ca24:	4827      	ldr	r0, [pc, #156]	; (cac4 <_svfiprintf_r+0x1e4>)
    ca26:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    ca2a:	2206      	movs	r2, #6
    ca2c:	1c7e      	adds	r6, r7, #1
    ca2e:	f7ff fbb7 	bl	c1a0 <memchr>
    ca32:	2800      	cmp	r0, #0
    ca34:	d038      	beq.n	caa8 <_svfiprintf_r+0x1c8>
    ca36:	4b24      	ldr	r3, [pc, #144]	; (cac8 <_svfiprintf_r+0x1e8>)
    ca38:	bb13      	cbnz	r3, ca80 <_svfiprintf_r+0x1a0>
    ca3a:	9b03      	ldr	r3, [sp, #12]
    ca3c:	3307      	adds	r3, #7
    ca3e:	f023 0307 	bic.w	r3, r3, #7
    ca42:	3308      	adds	r3, #8
    ca44:	9303      	str	r3, [sp, #12]
    ca46:	9b09      	ldr	r3, [sp, #36]	; 0x24
    ca48:	444b      	add	r3, r9
    ca4a:	9309      	str	r3, [sp, #36]	; 0x24
    ca4c:	e76d      	b.n	c92a <_svfiprintf_r+0x4a>
    ca4e:	fb05 3202 	mla	r2, r5, r2, r3
    ca52:	2001      	movs	r0, #1
    ca54:	460f      	mov	r7, r1
    ca56:	e7a6      	b.n	c9a6 <_svfiprintf_r+0xc6>
    ca58:	2300      	movs	r3, #0
    ca5a:	3701      	adds	r7, #1
    ca5c:	9305      	str	r3, [sp, #20]
    ca5e:	4619      	mov	r1, r3
    ca60:	250a      	movs	r5, #10
    ca62:	4638      	mov	r0, r7
    ca64:	f810 2b01 	ldrb.w	r2, [r0], #1
    ca68:	3a30      	subs	r2, #48	; 0x30
    ca6a:	2a09      	cmp	r2, #9
    ca6c:	d903      	bls.n	ca76 <_svfiprintf_r+0x196>
    ca6e:	2b00      	cmp	r3, #0
    ca70:	d0c8      	beq.n	ca04 <_svfiprintf_r+0x124>
    ca72:	9105      	str	r1, [sp, #20]
    ca74:	e7c6      	b.n	ca04 <_svfiprintf_r+0x124>
    ca76:	fb05 2101 	mla	r1, r5, r1, r2
    ca7a:	2301      	movs	r3, #1
    ca7c:	4607      	mov	r7, r0
    ca7e:	e7f0      	b.n	ca62 <_svfiprintf_r+0x182>
    ca80:	ab03      	add	r3, sp, #12
    ca82:	9300      	str	r3, [sp, #0]
    ca84:	4622      	mov	r2, r4
    ca86:	4b11      	ldr	r3, [pc, #68]	; (cacc <_svfiprintf_r+0x1ec>)
    ca88:	a904      	add	r1, sp, #16
    ca8a:	4640      	mov	r0, r8
    ca8c:	f7fe f930 	bl	acf0 <_printf_float>
    ca90:	f1b0 3fff 	cmp.w	r0, #4294967295
    ca94:	4681      	mov	r9, r0
    ca96:	d1d6      	bne.n	ca46 <_svfiprintf_r+0x166>
    ca98:	89a3      	ldrh	r3, [r4, #12]
    ca9a:	065b      	lsls	r3, r3, #25
    ca9c:	f53f af35 	bmi.w	c90a <_svfiprintf_r+0x2a>
    caa0:	9809      	ldr	r0, [sp, #36]	; 0x24
    caa2:	b01d      	add	sp, #116	; 0x74
    caa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    caa8:	ab03      	add	r3, sp, #12
    caaa:	9300      	str	r3, [sp, #0]
    caac:	4622      	mov	r2, r4
    caae:	4b07      	ldr	r3, [pc, #28]	; (cacc <_svfiprintf_r+0x1ec>)
    cab0:	a904      	add	r1, sp, #16
    cab2:	4640      	mov	r0, r8
    cab4:	f7fe fbd2 	bl	b25c <_printf_i>
    cab8:	e7ea      	b.n	ca90 <_svfiprintf_r+0x1b0>
    caba:	bf00      	nop
    cabc:	0000ecbc 	.word	0x0000ecbc
    cac0:	0000ecc2 	.word	0x0000ecc2
    cac4:	0000ecc6 	.word	0x0000ecc6
    cac8:	0000acf1 	.word	0x0000acf1
    cacc:	0000c82d 	.word	0x0000c82d

0000cad0 <__ascii_mbtowc>:
    cad0:	b082      	sub	sp, #8
    cad2:	b901      	cbnz	r1, cad6 <__ascii_mbtowc+0x6>
    cad4:	a901      	add	r1, sp, #4
    cad6:	b142      	cbz	r2, caea <__ascii_mbtowc+0x1a>
    cad8:	b14b      	cbz	r3, caee <__ascii_mbtowc+0x1e>
    cada:	7813      	ldrb	r3, [r2, #0]
    cadc:	600b      	str	r3, [r1, #0]
    cade:	7812      	ldrb	r2, [r2, #0]
    cae0:	1c10      	adds	r0, r2, #0
    cae2:	bf18      	it	ne
    cae4:	2001      	movne	r0, #1
    cae6:	b002      	add	sp, #8
    cae8:	4770      	bx	lr
    caea:	4610      	mov	r0, r2
    caec:	e7fb      	b.n	cae6 <__ascii_mbtowc+0x16>
    caee:	f06f 0001 	mvn.w	r0, #1
    caf2:	e7f8      	b.n	cae6 <__ascii_mbtowc+0x16>

0000caf4 <memmove>:
    caf4:	4288      	cmp	r0, r1
    caf6:	b510      	push	{r4, lr}
    caf8:	eb01 0302 	add.w	r3, r1, r2
    cafc:	d807      	bhi.n	cb0e <memmove+0x1a>
    cafe:	1e42      	subs	r2, r0, #1
    cb00:	4299      	cmp	r1, r3
    cb02:	d00a      	beq.n	cb1a <memmove+0x26>
    cb04:	f811 4b01 	ldrb.w	r4, [r1], #1
    cb08:	f802 4f01 	strb.w	r4, [r2, #1]!
    cb0c:	e7f8      	b.n	cb00 <memmove+0xc>
    cb0e:	4283      	cmp	r3, r0
    cb10:	d9f5      	bls.n	cafe <memmove+0xa>
    cb12:	1881      	adds	r1, r0, r2
    cb14:	1ad2      	subs	r2, r2, r3
    cb16:	42d3      	cmn	r3, r2
    cb18:	d100      	bne.n	cb1c <memmove+0x28>
    cb1a:	bd10      	pop	{r4, pc}
    cb1c:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
    cb20:	f801 4d01 	strb.w	r4, [r1, #-1]!
    cb24:	e7f7      	b.n	cb16 <memmove+0x22>

0000cb26 <_realloc_r>:
    cb26:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    cb28:	4607      	mov	r7, r0
    cb2a:	4614      	mov	r4, r2
    cb2c:	460e      	mov	r6, r1
    cb2e:	b921      	cbnz	r1, cb3a <_realloc_r+0x14>
    cb30:	4611      	mov	r1, r2
    cb32:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    cb36:	f7fd bfed 	b.w	ab14 <_malloc_r>
    cb3a:	b922      	cbnz	r2, cb46 <_realloc_r+0x20>
    cb3c:	f7fd ff9c 	bl	aa78 <_free_r>
    cb40:	4625      	mov	r5, r4
    cb42:	4628      	mov	r0, r5
    cb44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    cb46:	f000 f821 	bl	cb8c <_malloc_usable_size_r>
    cb4a:	42a0      	cmp	r0, r4
    cb4c:	d20f      	bcs.n	cb6e <_realloc_r+0x48>
    cb4e:	4621      	mov	r1, r4
    cb50:	4638      	mov	r0, r7
    cb52:	f7fd ffdf 	bl	ab14 <_malloc_r>
    cb56:	4605      	mov	r5, r0
    cb58:	2800      	cmp	r0, #0
    cb5a:	d0f2      	beq.n	cb42 <_realloc_r+0x1c>
    cb5c:	4631      	mov	r1, r6
    cb5e:	4622      	mov	r2, r4
    cb60:	f7ff fb6e 	bl	c240 <memcpy>
    cb64:	4631      	mov	r1, r6
    cb66:	4638      	mov	r0, r7
    cb68:	f7fd ff86 	bl	aa78 <_free_r>
    cb6c:	e7e9      	b.n	cb42 <_realloc_r+0x1c>
    cb6e:	4635      	mov	r5, r6
    cb70:	e7e7      	b.n	cb42 <_realloc_r+0x1c>

0000cb72 <__ascii_wctomb>:
    cb72:	b149      	cbz	r1, cb88 <__ascii_wctomb+0x16>
    cb74:	2aff      	cmp	r2, #255	; 0xff
    cb76:	bf85      	ittet	hi
    cb78:	238a      	movhi	r3, #138	; 0x8a
    cb7a:	6003      	strhi	r3, [r0, #0]
    cb7c:	700a      	strbls	r2, [r1, #0]
    cb7e:	f04f 30ff 	movhi.w	r0, #4294967295
    cb82:	bf98      	it	ls
    cb84:	2001      	movls	r0, #1
    cb86:	4770      	bx	lr
    cb88:	4608      	mov	r0, r1
    cb8a:	4770      	bx	lr

0000cb8c <_malloc_usable_size_r>:
    cb8c:	f851 3c04 	ldr.w	r3, [r1, #-4]
    cb90:	1f18      	subs	r0, r3, #4
    cb92:	2b00      	cmp	r3, #0
    cb94:	bfbc      	itt	lt
    cb96:	580b      	ldrlt	r3, [r1, r0]
    cb98:	18c0      	addlt	r0, r0, r3
    cb9a:	4770      	bx	lr
    cb9c:	0000      	movs	r0, r0
	...

0000cba0 <cos>:
    cba0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    cba2:	ec51 0b10 	vmov	r0, r1, d0
    cba6:	4a1e      	ldr	r2, [pc, #120]	; (cc20 <cos+0x80>)
    cba8:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
    cbac:	4293      	cmp	r3, r2
    cbae:	dc06      	bgt.n	cbbe <cos+0x1e>
    cbb0:	ed9f 1b19 	vldr	d1, [pc, #100]	; cc18 <cos+0x78>
    cbb4:	f000 fb80 	bl	d2b8 <__kernel_cos>
    cbb8:	ec51 0b10 	vmov	r0, r1, d0
    cbbc:	e007      	b.n	cbce <cos+0x2e>
    cbbe:	4a19      	ldr	r2, [pc, #100]	; (cc24 <cos+0x84>)
    cbc0:	4293      	cmp	r3, r2
    cbc2:	dd09      	ble.n	cbd8 <cos+0x38>
    cbc4:	ee10 2a10 	vmov	r2, s0
    cbc8:	460b      	mov	r3, r1
    cbca:	f001 f953 	bl	de74 <__aeabi_dsub>
    cbce:	ec41 0b10 	vmov	d0, r0, r1
    cbd2:	b005      	add	sp, #20
    cbd4:	f85d fb04 	ldr.w	pc, [sp], #4
    cbd8:	4668      	mov	r0, sp
    cbda:	f000 f8c9 	bl	cd70 <__ieee754_rem_pio2>
    cbde:	f000 0003 	and.w	r0, r0, #3
    cbe2:	2801      	cmp	r0, #1
    cbe4:	ed9d 1b02 	vldr	d1, [sp, #8]
    cbe8:	ed9d 0b00 	vldr	d0, [sp]
    cbec:	d007      	beq.n	cbfe <cos+0x5e>
    cbee:	2802      	cmp	r0, #2
    cbf0:	d00e      	beq.n	cc10 <cos+0x70>
    cbf2:	2800      	cmp	r0, #0
    cbf4:	d0de      	beq.n	cbb4 <cos+0x14>
    cbf6:	2001      	movs	r0, #1
    cbf8:	f000 ff66 	bl	dac8 <__kernel_sin>
    cbfc:	e7dc      	b.n	cbb8 <cos+0x18>
    cbfe:	f000 ff63 	bl	dac8 <__kernel_sin>
    cc02:	ec53 2b10 	vmov	r2, r3, d0
    cc06:	ee10 0a10 	vmov	r0, s0
    cc0a:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
    cc0e:	e7de      	b.n	cbce <cos+0x2e>
    cc10:	f000 fb52 	bl	d2b8 <__kernel_cos>
    cc14:	e7f5      	b.n	cc02 <cos+0x62>
    cc16:	bf00      	nop
	...
    cc20:	3fe921fb 	.word	0x3fe921fb
    cc24:	7fefffff 	.word	0x7fefffff

0000cc28 <sin>:
    cc28:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    cc2a:	ec51 0b10 	vmov	r0, r1, d0
    cc2e:	4a20      	ldr	r2, [pc, #128]	; (ccb0 <sin+0x88>)
    cc30:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
    cc34:	4293      	cmp	r3, r2
    cc36:	dc07      	bgt.n	cc48 <sin+0x20>
    cc38:	ed9f 1b1b 	vldr	d1, [pc, #108]	; cca8 <sin+0x80>
    cc3c:	2000      	movs	r0, #0
    cc3e:	f000 ff43 	bl	dac8 <__kernel_sin>
    cc42:	ec51 0b10 	vmov	r0, r1, d0
    cc46:	e007      	b.n	cc58 <sin+0x30>
    cc48:	4a1a      	ldr	r2, [pc, #104]	; (ccb4 <sin+0x8c>)
    cc4a:	4293      	cmp	r3, r2
    cc4c:	dd09      	ble.n	cc62 <sin+0x3a>
    cc4e:	ee10 2a10 	vmov	r2, s0
    cc52:	460b      	mov	r3, r1
    cc54:	f001 f90e 	bl	de74 <__aeabi_dsub>
    cc58:	ec41 0b10 	vmov	d0, r0, r1
    cc5c:	b005      	add	sp, #20
    cc5e:	f85d fb04 	ldr.w	pc, [sp], #4
    cc62:	4668      	mov	r0, sp
    cc64:	f000 f884 	bl	cd70 <__ieee754_rem_pio2>
    cc68:	f000 0003 	and.w	r0, r0, #3
    cc6c:	2801      	cmp	r0, #1
    cc6e:	ed9d 1b02 	vldr	d1, [sp, #8]
    cc72:	ed9d 0b00 	vldr	d0, [sp]
    cc76:	d004      	beq.n	cc82 <sin+0x5a>
    cc78:	2802      	cmp	r0, #2
    cc7a:	d005      	beq.n	cc88 <sin+0x60>
    cc7c:	b970      	cbnz	r0, cc9c <sin+0x74>
    cc7e:	2001      	movs	r0, #1
    cc80:	e7dd      	b.n	cc3e <sin+0x16>
    cc82:	f000 fb19 	bl	d2b8 <__kernel_cos>
    cc86:	e7dc      	b.n	cc42 <sin+0x1a>
    cc88:	2001      	movs	r0, #1
    cc8a:	f000 ff1d 	bl	dac8 <__kernel_sin>
    cc8e:	ec53 2b10 	vmov	r2, r3, d0
    cc92:	ee10 0a10 	vmov	r0, s0
    cc96:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
    cc9a:	e7dd      	b.n	cc58 <sin+0x30>
    cc9c:	f000 fb0c 	bl	d2b8 <__kernel_cos>
    cca0:	e7f5      	b.n	cc8e <sin+0x66>
    cca2:	bf00      	nop
    cca4:	f3af 8000 	nop.w
	...
    ccb0:	3fe921fb 	.word	0x3fe921fb
    ccb4:	7fefffff 	.word	0x7fefffff

0000ccb8 <sqrt>:
    ccb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    ccbc:	ed2d 8b02 	vpush	{d8}
    ccc0:	b08b      	sub	sp, #44	; 0x2c
    ccc2:	ec55 4b10 	vmov	r4, r5, d0
    ccc6:	f000 fa45 	bl	d154 <__ieee754_sqrt>
    ccca:	4b26      	ldr	r3, [pc, #152]	; (cd64 <sqrt+0xac>)
    cccc:	eeb0 8a40 	vmov.f32	s16, s0
    ccd0:	eef0 8a60 	vmov.f32	s17, s1
    ccd4:	f993 6000 	ldrsb.w	r6, [r3]
    ccd8:	1c73      	adds	r3, r6, #1
    ccda:	d02a      	beq.n	cd32 <sqrt+0x7a>
    ccdc:	4622      	mov	r2, r4
    ccde:	462b      	mov	r3, r5
    cce0:	4620      	mov	r0, r4
    cce2:	4629      	mov	r1, r5
    cce4:	f001 fd18 	bl	e718 <__aeabi_dcmpun>
    cce8:	4607      	mov	r7, r0
    ccea:	bb10      	cbnz	r0, cd32 <sqrt+0x7a>
    ccec:	f04f 0800 	mov.w	r8, #0
    ccf0:	f04f 0900 	mov.w	r9, #0
    ccf4:	4642      	mov	r2, r8
    ccf6:	464b      	mov	r3, r9
    ccf8:	4620      	mov	r0, r4
    ccfa:	4629      	mov	r1, r5
    ccfc:	f001 fce4 	bl	e6c8 <__aeabi_dcmplt>
    cd00:	b1b8      	cbz	r0, cd32 <sqrt+0x7a>
    cd02:	2301      	movs	r3, #1
    cd04:	9300      	str	r3, [sp, #0]
    cd06:	4b18      	ldr	r3, [pc, #96]	; (cd68 <sqrt+0xb0>)
    cd08:	9301      	str	r3, [sp, #4]
    cd0a:	9708      	str	r7, [sp, #32]
    cd0c:	e9cd 4504 	strd	r4, r5, [sp, #16]
    cd10:	e9cd 4502 	strd	r4, r5, [sp, #8]
    cd14:	b9b6      	cbnz	r6, cd44 <sqrt+0x8c>
    cd16:	e9cd 8906 	strd	r8, r9, [sp, #24]
    cd1a:	4668      	mov	r0, sp
    cd1c:	f001 f81c 	bl	dd58 <matherr>
    cd20:	b1d0      	cbz	r0, cd58 <sqrt+0xa0>
    cd22:	9b08      	ldr	r3, [sp, #32]
    cd24:	b11b      	cbz	r3, cd2e <sqrt+0x76>
    cd26:	f7fd fe65 	bl	a9f4 <__errno>
    cd2a:	9b08      	ldr	r3, [sp, #32]
    cd2c:	6003      	str	r3, [r0, #0]
    cd2e:	ed9d 8b06 	vldr	d8, [sp, #24]
    cd32:	eeb0 0a48 	vmov.f32	s0, s16
    cd36:	eef0 0a68 	vmov.f32	s1, s17
    cd3a:	b00b      	add	sp, #44	; 0x2c
    cd3c:	ecbd 8b02 	vpop	{d8}
    cd40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    cd44:	4642      	mov	r2, r8
    cd46:	464b      	mov	r3, r9
    cd48:	4640      	mov	r0, r8
    cd4a:	4649      	mov	r1, r9
    cd4c:	f001 fb74 	bl	e438 <__aeabi_ddiv>
    cd50:	2e02      	cmp	r6, #2
    cd52:	e9cd 0106 	strd	r0, r1, [sp, #24]
    cd56:	d1e0      	bne.n	cd1a <sqrt+0x62>
    cd58:	f7fd fe4c 	bl	a9f4 <__errno>
    cd5c:	2321      	movs	r3, #33	; 0x21
    cd5e:	6003      	str	r3, [r0, #0]
    cd60:	e7df      	b.n	cd22 <sqrt+0x6a>
    cd62:	bf00      	nop
    cd64:	0001f1a8 	.word	0x0001f1a8
    cd68:	0000edd8 	.word	0x0000edd8
    cd6c:	00000000 	.word	0x00000000

0000cd70 <__ieee754_rem_pio2>:
    cd70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cd74:	ec57 6b10 	vmov	r6, r7, d0
    cd78:	4bc3      	ldr	r3, [pc, #780]	; (d088 <__ieee754_rem_pio2+0x318>)
    cd7a:	b08d      	sub	sp, #52	; 0x34
    cd7c:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
    cd80:	4598      	cmp	r8, r3
    cd82:	4604      	mov	r4, r0
    cd84:	9704      	str	r7, [sp, #16]
    cd86:	dc07      	bgt.n	cd98 <__ieee754_rem_pio2+0x28>
    cd88:	2200      	movs	r2, #0
    cd8a:	2300      	movs	r3, #0
    cd8c:	ed84 0b00 	vstr	d0, [r4]
    cd90:	e9c0 2302 	strd	r2, r3, [r0, #8]
    cd94:	2500      	movs	r5, #0
    cd96:	e027      	b.n	cde8 <__ieee754_rem_pio2+0x78>
    cd98:	4bbc      	ldr	r3, [pc, #752]	; (d08c <__ieee754_rem_pio2+0x31c>)
    cd9a:	4598      	cmp	r8, r3
    cd9c:	dc75      	bgt.n	ce8a <__ieee754_rem_pio2+0x11a>
    cd9e:	9b04      	ldr	r3, [sp, #16]
    cda0:	4dbb      	ldr	r5, [pc, #748]	; (d090 <__ieee754_rem_pio2+0x320>)
    cda2:	2b00      	cmp	r3, #0
    cda4:	ee10 0a10 	vmov	r0, s0
    cda8:	a3a9      	add	r3, pc, #676	; (adr r3, d050 <__ieee754_rem_pio2+0x2e0>)
    cdaa:	e9d3 2300 	ldrd	r2, r3, [r3]
    cdae:	4639      	mov	r1, r7
    cdb0:	dd36      	ble.n	ce20 <__ieee754_rem_pio2+0xb0>
    cdb2:	f001 f85f 	bl	de74 <__aeabi_dsub>
    cdb6:	45a8      	cmp	r8, r5
    cdb8:	4606      	mov	r6, r0
    cdba:	460f      	mov	r7, r1
    cdbc:	d018      	beq.n	cdf0 <__ieee754_rem_pio2+0x80>
    cdbe:	a3a6      	add	r3, pc, #664	; (adr r3, d058 <__ieee754_rem_pio2+0x2e8>)
    cdc0:	e9d3 2300 	ldrd	r2, r3, [r3]
    cdc4:	f001 f856 	bl	de74 <__aeabi_dsub>
    cdc8:	4602      	mov	r2, r0
    cdca:	460b      	mov	r3, r1
    cdcc:	e9c4 2300 	strd	r2, r3, [r4]
    cdd0:	4630      	mov	r0, r6
    cdd2:	4639      	mov	r1, r7
    cdd4:	f001 f84e 	bl	de74 <__aeabi_dsub>
    cdd8:	a39f      	add	r3, pc, #636	; (adr r3, d058 <__ieee754_rem_pio2+0x2e8>)
    cdda:	e9d3 2300 	ldrd	r2, r3, [r3]
    cdde:	f001 f849 	bl	de74 <__aeabi_dsub>
    cde2:	e9c4 0102 	strd	r0, r1, [r4, #8]
    cde6:	2501      	movs	r5, #1
    cde8:	4628      	mov	r0, r5
    cdea:	b00d      	add	sp, #52	; 0x34
    cdec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cdf0:	a39b      	add	r3, pc, #620	; (adr r3, d060 <__ieee754_rem_pio2+0x2f0>)
    cdf2:	e9d3 2300 	ldrd	r2, r3, [r3]
    cdf6:	f001 f83d 	bl	de74 <__aeabi_dsub>
    cdfa:	a39b      	add	r3, pc, #620	; (adr r3, d068 <__ieee754_rem_pio2+0x2f8>)
    cdfc:	e9d3 2300 	ldrd	r2, r3, [r3]
    ce00:	4606      	mov	r6, r0
    ce02:	460f      	mov	r7, r1
    ce04:	f001 f836 	bl	de74 <__aeabi_dsub>
    ce08:	4602      	mov	r2, r0
    ce0a:	460b      	mov	r3, r1
    ce0c:	e9c4 2300 	strd	r2, r3, [r4]
    ce10:	4630      	mov	r0, r6
    ce12:	4639      	mov	r1, r7
    ce14:	f001 f82e 	bl	de74 <__aeabi_dsub>
    ce18:	a393      	add	r3, pc, #588	; (adr r3, d068 <__ieee754_rem_pio2+0x2f8>)
    ce1a:	e9d3 2300 	ldrd	r2, r3, [r3]
    ce1e:	e7de      	b.n	cdde <__ieee754_rem_pio2+0x6e>
    ce20:	f001 f82a 	bl	de78 <__adddf3>
    ce24:	45a8      	cmp	r8, r5
    ce26:	4606      	mov	r6, r0
    ce28:	460f      	mov	r7, r1
    ce2a:	d016      	beq.n	ce5a <__ieee754_rem_pio2+0xea>
    ce2c:	a38a      	add	r3, pc, #552	; (adr r3, d058 <__ieee754_rem_pio2+0x2e8>)
    ce2e:	e9d3 2300 	ldrd	r2, r3, [r3]
    ce32:	f001 f821 	bl	de78 <__adddf3>
    ce36:	4602      	mov	r2, r0
    ce38:	460b      	mov	r3, r1
    ce3a:	e9c4 2300 	strd	r2, r3, [r4]
    ce3e:	4630      	mov	r0, r6
    ce40:	4639      	mov	r1, r7
    ce42:	f001 f817 	bl	de74 <__aeabi_dsub>
    ce46:	a384      	add	r3, pc, #528	; (adr r3, d058 <__ieee754_rem_pio2+0x2e8>)
    ce48:	e9d3 2300 	ldrd	r2, r3, [r3]
    ce4c:	f001 f814 	bl	de78 <__adddf3>
    ce50:	f04f 35ff 	mov.w	r5, #4294967295
    ce54:	e9c4 0102 	strd	r0, r1, [r4, #8]
    ce58:	e7c6      	b.n	cde8 <__ieee754_rem_pio2+0x78>
    ce5a:	a381      	add	r3, pc, #516	; (adr r3, d060 <__ieee754_rem_pio2+0x2f0>)
    ce5c:	e9d3 2300 	ldrd	r2, r3, [r3]
    ce60:	f001 f80a 	bl	de78 <__adddf3>
    ce64:	a380      	add	r3, pc, #512	; (adr r3, d068 <__ieee754_rem_pio2+0x2f8>)
    ce66:	e9d3 2300 	ldrd	r2, r3, [r3]
    ce6a:	4606      	mov	r6, r0
    ce6c:	460f      	mov	r7, r1
    ce6e:	f001 f803 	bl	de78 <__adddf3>
    ce72:	4602      	mov	r2, r0
    ce74:	460b      	mov	r3, r1
    ce76:	e9c4 2300 	strd	r2, r3, [r4]
    ce7a:	4630      	mov	r0, r6
    ce7c:	4639      	mov	r1, r7
    ce7e:	f000 fff9 	bl	de74 <__aeabi_dsub>
    ce82:	a379      	add	r3, pc, #484	; (adr r3, d068 <__ieee754_rem_pio2+0x2f8>)
    ce84:	e9d3 2300 	ldrd	r2, r3, [r3]
    ce88:	e7e0      	b.n	ce4c <__ieee754_rem_pio2+0xdc>
    ce8a:	4b82      	ldr	r3, [pc, #520]	; (d094 <__ieee754_rem_pio2+0x324>)
    ce8c:	4598      	cmp	r8, r3
    ce8e:	f300 80d0 	bgt.w	d032 <__ieee754_rem_pio2+0x2c2>
    ce92:	f000 fed3 	bl	dc3c <fabs>
    ce96:	ec57 6b10 	vmov	r6, r7, d0
    ce9a:	ee10 0a10 	vmov	r0, s0
    ce9e:	a374      	add	r3, pc, #464	; (adr r3, d070 <__ieee754_rem_pio2+0x300>)
    cea0:	e9d3 2300 	ldrd	r2, r3, [r3]
    cea4:	4639      	mov	r1, r7
    cea6:	f001 f99d 	bl	e1e4 <__aeabi_dmul>
    ceaa:	2200      	movs	r2, #0
    ceac:	4b7a      	ldr	r3, [pc, #488]	; (d098 <__ieee754_rem_pio2+0x328>)
    ceae:	f000 ffe3 	bl	de78 <__adddf3>
    ceb2:	f001 fc47 	bl	e744 <__aeabi_d2iz>
    ceb6:	4605      	mov	r5, r0
    ceb8:	f001 f92a 	bl	e110 <__aeabi_i2d>
    cebc:	a364      	add	r3, pc, #400	; (adr r3, d050 <__ieee754_rem_pio2+0x2e0>)
    cebe:	e9d3 2300 	ldrd	r2, r3, [r3]
    cec2:	e9cd 0102 	strd	r0, r1, [sp, #8]
    cec6:	f001 f98d 	bl	e1e4 <__aeabi_dmul>
    ceca:	4602      	mov	r2, r0
    cecc:	460b      	mov	r3, r1
    cece:	4630      	mov	r0, r6
    ced0:	4639      	mov	r1, r7
    ced2:	f000 ffcf 	bl	de74 <__aeabi_dsub>
    ced6:	a360      	add	r3, pc, #384	; (adr r3, d058 <__ieee754_rem_pio2+0x2e8>)
    ced8:	e9d3 2300 	ldrd	r2, r3, [r3]
    cedc:	4682      	mov	sl, r0
    cede:	468b      	mov	fp, r1
    cee0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    cee4:	f001 f97e 	bl	e1e4 <__aeabi_dmul>
    cee8:	2d1f      	cmp	r5, #31
    ceea:	4606      	mov	r6, r0
    ceec:	460f      	mov	r7, r1
    ceee:	dc0c      	bgt.n	cf0a <__ieee754_rem_pio2+0x19a>
    cef0:	1e6a      	subs	r2, r5, #1
    cef2:	4b6a      	ldr	r3, [pc, #424]	; (d09c <__ieee754_rem_pio2+0x32c>)
    cef4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    cef8:	4543      	cmp	r3, r8
    cefa:	d006      	beq.n	cf0a <__ieee754_rem_pio2+0x19a>
    cefc:	4632      	mov	r2, r6
    cefe:	463b      	mov	r3, r7
    cf00:	4650      	mov	r0, sl
    cf02:	4659      	mov	r1, fp
    cf04:	f000 ffb6 	bl	de74 <__aeabi_dsub>
    cf08:	e00e      	b.n	cf28 <__ieee754_rem_pio2+0x1b8>
    cf0a:	4632      	mov	r2, r6
    cf0c:	463b      	mov	r3, r7
    cf0e:	4650      	mov	r0, sl
    cf10:	4659      	mov	r1, fp
    cf12:	f000 ffaf 	bl	de74 <__aeabi_dsub>
    cf16:	ea4f 5328 	mov.w	r3, r8, asr #20
    cf1a:	9305      	str	r3, [sp, #20]
    cf1c:	9a05      	ldr	r2, [sp, #20]
    cf1e:	f3c1 530a 	ubfx	r3, r1, #20, #11
    cf22:	1ad3      	subs	r3, r2, r3
    cf24:	2b10      	cmp	r3, #16
    cf26:	dc02      	bgt.n	cf2e <__ieee754_rem_pio2+0x1be>
    cf28:	e9c4 0100 	strd	r0, r1, [r4]
    cf2c:	e039      	b.n	cfa2 <__ieee754_rem_pio2+0x232>
    cf2e:	a34c      	add	r3, pc, #304	; (adr r3, d060 <__ieee754_rem_pio2+0x2f0>)
    cf30:	e9d3 2300 	ldrd	r2, r3, [r3]
    cf34:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    cf38:	f001 f954 	bl	e1e4 <__aeabi_dmul>
    cf3c:	4606      	mov	r6, r0
    cf3e:	460f      	mov	r7, r1
    cf40:	4602      	mov	r2, r0
    cf42:	460b      	mov	r3, r1
    cf44:	4650      	mov	r0, sl
    cf46:	4659      	mov	r1, fp
    cf48:	f000 ff94 	bl	de74 <__aeabi_dsub>
    cf4c:	4602      	mov	r2, r0
    cf4e:	460b      	mov	r3, r1
    cf50:	4680      	mov	r8, r0
    cf52:	4689      	mov	r9, r1
    cf54:	4650      	mov	r0, sl
    cf56:	4659      	mov	r1, fp
    cf58:	f000 ff8c 	bl	de74 <__aeabi_dsub>
    cf5c:	4632      	mov	r2, r6
    cf5e:	463b      	mov	r3, r7
    cf60:	f000 ff88 	bl	de74 <__aeabi_dsub>
    cf64:	a340      	add	r3, pc, #256	; (adr r3, d068 <__ieee754_rem_pio2+0x2f8>)
    cf66:	e9d3 2300 	ldrd	r2, r3, [r3]
    cf6a:	4606      	mov	r6, r0
    cf6c:	460f      	mov	r7, r1
    cf6e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    cf72:	f001 f937 	bl	e1e4 <__aeabi_dmul>
    cf76:	4632      	mov	r2, r6
    cf78:	463b      	mov	r3, r7
    cf7a:	f000 ff7b 	bl	de74 <__aeabi_dsub>
    cf7e:	4602      	mov	r2, r0
    cf80:	460b      	mov	r3, r1
    cf82:	4606      	mov	r6, r0
    cf84:	460f      	mov	r7, r1
    cf86:	4640      	mov	r0, r8
    cf88:	4649      	mov	r1, r9
    cf8a:	f000 ff73 	bl	de74 <__aeabi_dsub>
    cf8e:	9a05      	ldr	r2, [sp, #20]
    cf90:	f3c1 530a 	ubfx	r3, r1, #20, #11
    cf94:	1ad3      	subs	r3, r2, r3
    cf96:	2b31      	cmp	r3, #49	; 0x31
    cf98:	dc20      	bgt.n	cfdc <__ieee754_rem_pio2+0x26c>
    cf9a:	e9c4 0100 	strd	r0, r1, [r4]
    cf9e:	46c2      	mov	sl, r8
    cfa0:	46cb      	mov	fp, r9
    cfa2:	e9d4 8900 	ldrd	r8, r9, [r4]
    cfa6:	4650      	mov	r0, sl
    cfa8:	4642      	mov	r2, r8
    cfaa:	464b      	mov	r3, r9
    cfac:	4659      	mov	r1, fp
    cfae:	f000 ff61 	bl	de74 <__aeabi_dsub>
    cfb2:	463b      	mov	r3, r7
    cfb4:	4632      	mov	r2, r6
    cfb6:	f000 ff5d 	bl	de74 <__aeabi_dsub>
    cfba:	9b04      	ldr	r3, [sp, #16]
    cfbc:	2b00      	cmp	r3, #0
    cfbe:	e9c4 0102 	strd	r0, r1, [r4, #8]
    cfc2:	f6bf af11 	bge.w	cde8 <__ieee754_rem_pio2+0x78>
    cfc6:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
    cfca:	6063      	str	r3, [r4, #4]
    cfcc:	f8c4 8000 	str.w	r8, [r4]
    cfd0:	60a0      	str	r0, [r4, #8]
    cfd2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    cfd6:	60e3      	str	r3, [r4, #12]
    cfd8:	426d      	negs	r5, r5
    cfda:	e705      	b.n	cde8 <__ieee754_rem_pio2+0x78>
    cfdc:	a326      	add	r3, pc, #152	; (adr r3, d078 <__ieee754_rem_pio2+0x308>)
    cfde:	e9d3 2300 	ldrd	r2, r3, [r3]
    cfe2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    cfe6:	f001 f8fd 	bl	e1e4 <__aeabi_dmul>
    cfea:	4606      	mov	r6, r0
    cfec:	460f      	mov	r7, r1
    cfee:	4602      	mov	r2, r0
    cff0:	460b      	mov	r3, r1
    cff2:	4640      	mov	r0, r8
    cff4:	4649      	mov	r1, r9
    cff6:	f000 ff3d 	bl	de74 <__aeabi_dsub>
    cffa:	4602      	mov	r2, r0
    cffc:	460b      	mov	r3, r1
    cffe:	4682      	mov	sl, r0
    d000:	468b      	mov	fp, r1
    d002:	4640      	mov	r0, r8
    d004:	4649      	mov	r1, r9
    d006:	f000 ff35 	bl	de74 <__aeabi_dsub>
    d00a:	4632      	mov	r2, r6
    d00c:	463b      	mov	r3, r7
    d00e:	f000 ff31 	bl	de74 <__aeabi_dsub>
    d012:	a31b      	add	r3, pc, #108	; (adr r3, d080 <__ieee754_rem_pio2+0x310>)
    d014:	e9d3 2300 	ldrd	r2, r3, [r3]
    d018:	4606      	mov	r6, r0
    d01a:	460f      	mov	r7, r1
    d01c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    d020:	f001 f8e0 	bl	e1e4 <__aeabi_dmul>
    d024:	4632      	mov	r2, r6
    d026:	463b      	mov	r3, r7
    d028:	f000 ff24 	bl	de74 <__aeabi_dsub>
    d02c:	4606      	mov	r6, r0
    d02e:	460f      	mov	r7, r1
    d030:	e764      	b.n	cefc <__ieee754_rem_pio2+0x18c>
    d032:	4b1b      	ldr	r3, [pc, #108]	; (d0a0 <__ieee754_rem_pio2+0x330>)
    d034:	4598      	cmp	r8, r3
    d036:	dd35      	ble.n	d0a4 <__ieee754_rem_pio2+0x334>
    d038:	ee10 2a10 	vmov	r2, s0
    d03c:	463b      	mov	r3, r7
    d03e:	4630      	mov	r0, r6
    d040:	4639      	mov	r1, r7
    d042:	f000 ff17 	bl	de74 <__aeabi_dsub>
    d046:	e9c4 0102 	strd	r0, r1, [r4, #8]
    d04a:	e9c4 0100 	strd	r0, r1, [r4]
    d04e:	e6a1      	b.n	cd94 <__ieee754_rem_pio2+0x24>
    d050:	54400000 	.word	0x54400000
    d054:	3ff921fb 	.word	0x3ff921fb
    d058:	1a626331 	.word	0x1a626331
    d05c:	3dd0b461 	.word	0x3dd0b461
    d060:	1a600000 	.word	0x1a600000
    d064:	3dd0b461 	.word	0x3dd0b461
    d068:	2e037073 	.word	0x2e037073
    d06c:	3ba3198a 	.word	0x3ba3198a
    d070:	6dc9c883 	.word	0x6dc9c883
    d074:	3fe45f30 	.word	0x3fe45f30
    d078:	2e000000 	.word	0x2e000000
    d07c:	3ba3198a 	.word	0x3ba3198a
    d080:	252049c1 	.word	0x252049c1
    d084:	397b839a 	.word	0x397b839a
    d088:	3fe921fb 	.word	0x3fe921fb
    d08c:	4002d97b 	.word	0x4002d97b
    d090:	3ff921fb 	.word	0x3ff921fb
    d094:	413921fb 	.word	0x413921fb
    d098:	3fe00000 	.word	0x3fe00000
    d09c:	0000ede0 	.word	0x0000ede0
    d0a0:	7fefffff 	.word	0x7fefffff
    d0a4:	ea4f 5528 	mov.w	r5, r8, asr #20
    d0a8:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
    d0ac:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
    d0b0:	4630      	mov	r0, r6
    d0b2:	460f      	mov	r7, r1
    d0b4:	f001 fb46 	bl	e744 <__aeabi_d2iz>
    d0b8:	f001 f82a 	bl	e110 <__aeabi_i2d>
    d0bc:	4602      	mov	r2, r0
    d0be:	460b      	mov	r3, r1
    d0c0:	4630      	mov	r0, r6
    d0c2:	4639      	mov	r1, r7
    d0c4:	e9cd 2306 	strd	r2, r3, [sp, #24]
    d0c8:	f000 fed4 	bl	de74 <__aeabi_dsub>
    d0cc:	2200      	movs	r2, #0
    d0ce:	4b1f      	ldr	r3, [pc, #124]	; (d14c <__ieee754_rem_pio2+0x3dc>)
    d0d0:	f001 f888 	bl	e1e4 <__aeabi_dmul>
    d0d4:	460f      	mov	r7, r1
    d0d6:	4606      	mov	r6, r0
    d0d8:	f001 fb34 	bl	e744 <__aeabi_d2iz>
    d0dc:	f001 f818 	bl	e110 <__aeabi_i2d>
    d0e0:	4602      	mov	r2, r0
    d0e2:	460b      	mov	r3, r1
    d0e4:	4630      	mov	r0, r6
    d0e6:	4639      	mov	r1, r7
    d0e8:	e9cd 2308 	strd	r2, r3, [sp, #32]
    d0ec:	f000 fec2 	bl	de74 <__aeabi_dsub>
    d0f0:	2200      	movs	r2, #0
    d0f2:	4b16      	ldr	r3, [pc, #88]	; (d14c <__ieee754_rem_pio2+0x3dc>)
    d0f4:	f001 f876 	bl	e1e4 <__aeabi_dmul>
    d0f8:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
    d0fc:	f10d 0930 	add.w	r9, sp, #48	; 0x30
    d100:	f04f 0803 	mov.w	r8, #3
    d104:	2600      	movs	r6, #0
    d106:	2700      	movs	r7, #0
    d108:	4632      	mov	r2, r6
    d10a:	463b      	mov	r3, r7
    d10c:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
    d110:	f108 3aff 	add.w	sl, r8, #4294967295
    d114:	f001 face 	bl	e6b4 <__aeabi_dcmpeq>
    d118:	b9b0      	cbnz	r0, d148 <__ieee754_rem_pio2+0x3d8>
    d11a:	4b0d      	ldr	r3, [pc, #52]	; (d150 <__ieee754_rem_pio2+0x3e0>)
    d11c:	9301      	str	r3, [sp, #4]
    d11e:	2302      	movs	r3, #2
    d120:	9300      	str	r3, [sp, #0]
    d122:	462a      	mov	r2, r5
    d124:	4643      	mov	r3, r8
    d126:	4621      	mov	r1, r4
    d128:	a806      	add	r0, sp, #24
    d12a:	f000 f98d 	bl	d448 <__kernel_rem_pio2>
    d12e:	9b04      	ldr	r3, [sp, #16]
    d130:	2b00      	cmp	r3, #0
    d132:	4605      	mov	r5, r0
    d134:	f6bf ae58 	bge.w	cde8 <__ieee754_rem_pio2+0x78>
    d138:	6863      	ldr	r3, [r4, #4]
    d13a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
    d13e:	6063      	str	r3, [r4, #4]
    d140:	68e3      	ldr	r3, [r4, #12]
    d142:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
    d146:	e746      	b.n	cfd6 <__ieee754_rem_pio2+0x266>
    d148:	46d0      	mov	r8, sl
    d14a:	e7dd      	b.n	d108 <__ieee754_rem_pio2+0x398>
    d14c:	41700000 	.word	0x41700000
    d150:	0000ee60 	.word	0x0000ee60

0000d154 <__ieee754_sqrt>:
    d154:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d158:	4955      	ldr	r1, [pc, #340]	; (d2b0 <__ieee754_sqrt+0x15c>)
    d15a:	ec55 4b10 	vmov	r4, r5, d0
    d15e:	43a9      	bics	r1, r5
    d160:	462b      	mov	r3, r5
    d162:	462a      	mov	r2, r5
    d164:	d112      	bne.n	d18c <__ieee754_sqrt+0x38>
    d166:	ee10 2a10 	vmov	r2, s0
    d16a:	ee10 0a10 	vmov	r0, s0
    d16e:	4629      	mov	r1, r5
    d170:	f001 f838 	bl	e1e4 <__aeabi_dmul>
    d174:	4602      	mov	r2, r0
    d176:	460b      	mov	r3, r1
    d178:	4620      	mov	r0, r4
    d17a:	4629      	mov	r1, r5
    d17c:	f000 fe7c 	bl	de78 <__adddf3>
    d180:	4604      	mov	r4, r0
    d182:	460d      	mov	r5, r1
    d184:	ec45 4b10 	vmov	d0, r4, r5
    d188:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d18c:	2d00      	cmp	r5, #0
    d18e:	ee10 0a10 	vmov	r0, s0
    d192:	4621      	mov	r1, r4
    d194:	dc0f      	bgt.n	d1b6 <__ieee754_sqrt+0x62>
    d196:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
    d19a:	4330      	orrs	r0, r6
    d19c:	d0f2      	beq.n	d184 <__ieee754_sqrt+0x30>
    d19e:	b155      	cbz	r5, d1b6 <__ieee754_sqrt+0x62>
    d1a0:	ee10 2a10 	vmov	r2, s0
    d1a4:	4620      	mov	r0, r4
    d1a6:	4629      	mov	r1, r5
    d1a8:	f000 fe64 	bl	de74 <__aeabi_dsub>
    d1ac:	4602      	mov	r2, r0
    d1ae:	460b      	mov	r3, r1
    d1b0:	f001 f942 	bl	e438 <__aeabi_ddiv>
    d1b4:	e7e4      	b.n	d180 <__ieee754_sqrt+0x2c>
    d1b6:	151b      	asrs	r3, r3, #20
    d1b8:	d073      	beq.n	d2a2 <__ieee754_sqrt+0x14e>
    d1ba:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
    d1be:	07dd      	lsls	r5, r3, #31
    d1c0:	f3c2 0213 	ubfx	r2, r2, #0, #20
    d1c4:	bf48      	it	mi
    d1c6:	0fc8      	lsrmi	r0, r1, #31
    d1c8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
    d1cc:	bf44      	itt	mi
    d1ce:	0049      	lslmi	r1, r1, #1
    d1d0:	eb00 0242 	addmi.w	r2, r0, r2, lsl #1
    d1d4:	2500      	movs	r5, #0
    d1d6:	1058      	asrs	r0, r3, #1
    d1d8:	0fcb      	lsrs	r3, r1, #31
    d1da:	eb03 0242 	add.w	r2, r3, r2, lsl #1
    d1de:	0049      	lsls	r1, r1, #1
    d1e0:	2316      	movs	r3, #22
    d1e2:	462c      	mov	r4, r5
    d1e4:	f44f 1600 	mov.w	r6, #2097152	; 0x200000
    d1e8:	19a7      	adds	r7, r4, r6
    d1ea:	4297      	cmp	r7, r2
    d1ec:	bfde      	ittt	le
    d1ee:	19bc      	addle	r4, r7, r6
    d1f0:	1bd2      	suble	r2, r2, r7
    d1f2:	19ad      	addle	r5, r5, r6
    d1f4:	0fcf      	lsrs	r7, r1, #31
    d1f6:	3b01      	subs	r3, #1
    d1f8:	eb07 0242 	add.w	r2, r7, r2, lsl #1
    d1fc:	ea4f 0141 	mov.w	r1, r1, lsl #1
    d200:	ea4f 0656 	mov.w	r6, r6, lsr #1
    d204:	d1f0      	bne.n	d1e8 <__ieee754_sqrt+0x94>
    d206:	f04f 0c20 	mov.w	ip, #32
    d20a:	469e      	mov	lr, r3
    d20c:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
    d210:	42a2      	cmp	r2, r4
    d212:	eb06 070e 	add.w	r7, r6, lr
    d216:	dc02      	bgt.n	d21e <__ieee754_sqrt+0xca>
    d218:	d112      	bne.n	d240 <__ieee754_sqrt+0xec>
    d21a:	428f      	cmp	r7, r1
    d21c:	d810      	bhi.n	d240 <__ieee754_sqrt+0xec>
    d21e:	2f00      	cmp	r7, #0
    d220:	eb07 0e06 	add.w	lr, r7, r6
    d224:	da42      	bge.n	d2ac <__ieee754_sqrt+0x158>
    d226:	f1be 0f00 	cmp.w	lr, #0
    d22a:	db3f      	blt.n	d2ac <__ieee754_sqrt+0x158>
    d22c:	f104 0801 	add.w	r8, r4, #1
    d230:	1b12      	subs	r2, r2, r4
    d232:	428f      	cmp	r7, r1
    d234:	bf88      	it	hi
    d236:	f102 32ff 	addhi.w	r2, r2, #4294967295
    d23a:	1bc9      	subs	r1, r1, r7
    d23c:	4433      	add	r3, r6
    d23e:	4644      	mov	r4, r8
    d240:	0052      	lsls	r2, r2, #1
    d242:	f1bc 0c01 	subs.w	ip, ip, #1
    d246:	eb02 72d1 	add.w	r2, r2, r1, lsr #31
    d24a:	ea4f 0656 	mov.w	r6, r6, lsr #1
    d24e:	ea4f 0141 	mov.w	r1, r1, lsl #1
    d252:	d1dd      	bne.n	d210 <__ieee754_sqrt+0xbc>
    d254:	430a      	orrs	r2, r1
    d256:	d006      	beq.n	d266 <__ieee754_sqrt+0x112>
    d258:	1c5c      	adds	r4, r3, #1
    d25a:	bf13      	iteet	ne
    d25c:	3301      	addne	r3, #1
    d25e:	3501      	addeq	r5, #1
    d260:	4663      	moveq	r3, ip
    d262:	f023 0301 	bicne.w	r3, r3, #1
    d266:	106a      	asrs	r2, r5, #1
    d268:	085b      	lsrs	r3, r3, #1
    d26a:	07e9      	lsls	r1, r5, #31
    d26c:	f102 527f 	add.w	r2, r2, #1069547520	; 0x3fc00000
    d270:	f502 1200 	add.w	r2, r2, #2097152	; 0x200000
    d274:	bf48      	it	mi
    d276:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
    d27a:	eb02 5500 	add.w	r5, r2, r0, lsl #20
    d27e:	461c      	mov	r4, r3
    d280:	e780      	b.n	d184 <__ieee754_sqrt+0x30>
    d282:	0aca      	lsrs	r2, r1, #11
    d284:	3815      	subs	r0, #21
    d286:	0549      	lsls	r1, r1, #21
    d288:	2a00      	cmp	r2, #0
    d28a:	d0fa      	beq.n	d282 <__ieee754_sqrt+0x12e>
    d28c:	02d6      	lsls	r6, r2, #11
    d28e:	d50a      	bpl.n	d2a6 <__ieee754_sqrt+0x152>
    d290:	f1c3 0420 	rsb	r4, r3, #32
    d294:	fa21 f404 	lsr.w	r4, r1, r4
    d298:	1e5d      	subs	r5, r3, #1
    d29a:	4099      	lsls	r1, r3
    d29c:	4322      	orrs	r2, r4
    d29e:	1b43      	subs	r3, r0, r5
    d2a0:	e78b      	b.n	d1ba <__ieee754_sqrt+0x66>
    d2a2:	4618      	mov	r0, r3
    d2a4:	e7f0      	b.n	d288 <__ieee754_sqrt+0x134>
    d2a6:	0052      	lsls	r2, r2, #1
    d2a8:	3301      	adds	r3, #1
    d2aa:	e7ef      	b.n	d28c <__ieee754_sqrt+0x138>
    d2ac:	46a0      	mov	r8, r4
    d2ae:	e7bf      	b.n	d230 <__ieee754_sqrt+0xdc>
    d2b0:	7ff00000 	.word	0x7ff00000
    d2b4:	00000000 	.word	0x00000000

0000d2b8 <__kernel_cos>:
    d2b8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d2bc:	ec59 8b10 	vmov	r8, r9, d0
    d2c0:	f029 4600 	bic.w	r6, r9, #2147483648	; 0x80000000
    d2c4:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
    d2c8:	ed2d 8b02 	vpush	{d8}
    d2cc:	eeb0 8a41 	vmov.f32	s16, s2
    d2d0:	eef0 8a61 	vmov.f32	s17, s3
    d2d4:	da07      	bge.n	d2e6 <__kernel_cos+0x2e>
    d2d6:	ee10 0a10 	vmov	r0, s0
    d2da:	4649      	mov	r1, r9
    d2dc:	f001 fa32 	bl	e744 <__aeabi_d2iz>
    d2e0:	2800      	cmp	r0, #0
    d2e2:	f000 8089 	beq.w	d3f8 <__kernel_cos+0x140>
    d2e6:	4642      	mov	r2, r8
    d2e8:	464b      	mov	r3, r9
    d2ea:	4640      	mov	r0, r8
    d2ec:	4649      	mov	r1, r9
    d2ee:	f000 ff79 	bl	e1e4 <__aeabi_dmul>
    d2f2:	2200      	movs	r2, #0
    d2f4:	4b4e      	ldr	r3, [pc, #312]	; (d430 <__kernel_cos+0x178>)
    d2f6:	4604      	mov	r4, r0
    d2f8:	460d      	mov	r5, r1
    d2fa:	f000 ff73 	bl	e1e4 <__aeabi_dmul>
    d2fe:	a340      	add	r3, pc, #256	; (adr r3, d400 <__kernel_cos+0x148>)
    d300:	e9d3 2300 	ldrd	r2, r3, [r3]
    d304:	4682      	mov	sl, r0
    d306:	468b      	mov	fp, r1
    d308:	4620      	mov	r0, r4
    d30a:	4629      	mov	r1, r5
    d30c:	f000 ff6a 	bl	e1e4 <__aeabi_dmul>
    d310:	a33d      	add	r3, pc, #244	; (adr r3, d408 <__kernel_cos+0x150>)
    d312:	e9d3 2300 	ldrd	r2, r3, [r3]
    d316:	f000 fdaf 	bl	de78 <__adddf3>
    d31a:	4622      	mov	r2, r4
    d31c:	462b      	mov	r3, r5
    d31e:	f000 ff61 	bl	e1e4 <__aeabi_dmul>
    d322:	a33b      	add	r3, pc, #236	; (adr r3, d410 <__kernel_cos+0x158>)
    d324:	e9d3 2300 	ldrd	r2, r3, [r3]
    d328:	f000 fda4 	bl	de74 <__aeabi_dsub>
    d32c:	4622      	mov	r2, r4
    d32e:	462b      	mov	r3, r5
    d330:	f000 ff58 	bl	e1e4 <__aeabi_dmul>
    d334:	a338      	add	r3, pc, #224	; (adr r3, d418 <__kernel_cos+0x160>)
    d336:	e9d3 2300 	ldrd	r2, r3, [r3]
    d33a:	f000 fd9d 	bl	de78 <__adddf3>
    d33e:	4622      	mov	r2, r4
    d340:	462b      	mov	r3, r5
    d342:	f000 ff4f 	bl	e1e4 <__aeabi_dmul>
    d346:	a336      	add	r3, pc, #216	; (adr r3, d420 <__kernel_cos+0x168>)
    d348:	e9d3 2300 	ldrd	r2, r3, [r3]
    d34c:	f000 fd92 	bl	de74 <__aeabi_dsub>
    d350:	4622      	mov	r2, r4
    d352:	462b      	mov	r3, r5
    d354:	f000 ff46 	bl	e1e4 <__aeabi_dmul>
    d358:	a333      	add	r3, pc, #204	; (adr r3, d428 <__kernel_cos+0x170>)
    d35a:	e9d3 2300 	ldrd	r2, r3, [r3]
    d35e:	f000 fd8b 	bl	de78 <__adddf3>
    d362:	4622      	mov	r2, r4
    d364:	462b      	mov	r3, r5
    d366:	f000 ff3d 	bl	e1e4 <__aeabi_dmul>
    d36a:	4622      	mov	r2, r4
    d36c:	462b      	mov	r3, r5
    d36e:	f000 ff39 	bl	e1e4 <__aeabi_dmul>
    d372:	ec53 2b18 	vmov	r2, r3, d8
    d376:	4604      	mov	r4, r0
    d378:	460d      	mov	r5, r1
    d37a:	4640      	mov	r0, r8
    d37c:	4649      	mov	r1, r9
    d37e:	f000 ff31 	bl	e1e4 <__aeabi_dmul>
    d382:	460b      	mov	r3, r1
    d384:	4602      	mov	r2, r0
    d386:	4629      	mov	r1, r5
    d388:	4620      	mov	r0, r4
    d38a:	f000 fd73 	bl	de74 <__aeabi_dsub>
    d38e:	4b29      	ldr	r3, [pc, #164]	; (d434 <__kernel_cos+0x17c>)
    d390:	429e      	cmp	r6, r3
    d392:	4680      	mov	r8, r0
    d394:	4689      	mov	r9, r1
    d396:	dc11      	bgt.n	d3bc <__kernel_cos+0x104>
    d398:	4602      	mov	r2, r0
    d39a:	460b      	mov	r3, r1
    d39c:	4650      	mov	r0, sl
    d39e:	4659      	mov	r1, fp
    d3a0:	f000 fd68 	bl	de74 <__aeabi_dsub>
    d3a4:	460b      	mov	r3, r1
    d3a6:	4924      	ldr	r1, [pc, #144]	; (d438 <__kernel_cos+0x180>)
    d3a8:	4602      	mov	r2, r0
    d3aa:	2000      	movs	r0, #0
    d3ac:	f000 fd62 	bl	de74 <__aeabi_dsub>
    d3b0:	ecbd 8b02 	vpop	{d8}
    d3b4:	ec41 0b10 	vmov	d0, r0, r1
    d3b8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d3bc:	4b1f      	ldr	r3, [pc, #124]	; (d43c <__kernel_cos+0x184>)
    d3be:	491e      	ldr	r1, [pc, #120]	; (d438 <__kernel_cos+0x180>)
    d3c0:	429e      	cmp	r6, r3
    d3c2:	bfcc      	ite	gt
    d3c4:	4d1e      	ldrgt	r5, [pc, #120]	; (d440 <__kernel_cos+0x188>)
    d3c6:	f5a6 1500 	suble.w	r5, r6, #2097152	; 0x200000
    d3ca:	2400      	movs	r4, #0
    d3cc:	4622      	mov	r2, r4
    d3ce:	462b      	mov	r3, r5
    d3d0:	2000      	movs	r0, #0
    d3d2:	f000 fd4f 	bl	de74 <__aeabi_dsub>
    d3d6:	4622      	mov	r2, r4
    d3d8:	4606      	mov	r6, r0
    d3da:	460f      	mov	r7, r1
    d3dc:	462b      	mov	r3, r5
    d3de:	4650      	mov	r0, sl
    d3e0:	4659      	mov	r1, fp
    d3e2:	f000 fd47 	bl	de74 <__aeabi_dsub>
    d3e6:	4642      	mov	r2, r8
    d3e8:	464b      	mov	r3, r9
    d3ea:	f000 fd43 	bl	de74 <__aeabi_dsub>
    d3ee:	4602      	mov	r2, r0
    d3f0:	460b      	mov	r3, r1
    d3f2:	4630      	mov	r0, r6
    d3f4:	4639      	mov	r1, r7
    d3f6:	e7d9      	b.n	d3ac <__kernel_cos+0xf4>
    d3f8:	2000      	movs	r0, #0
    d3fa:	490f      	ldr	r1, [pc, #60]	; (d438 <__kernel_cos+0x180>)
    d3fc:	e7d8      	b.n	d3b0 <__kernel_cos+0xf8>
    d3fe:	bf00      	nop
    d400:	be8838d4 	.word	0xbe8838d4
    d404:	bda8fae9 	.word	0xbda8fae9
    d408:	bdb4b1c4 	.word	0xbdb4b1c4
    d40c:	3e21ee9e 	.word	0x3e21ee9e
    d410:	809c52ad 	.word	0x809c52ad
    d414:	3e927e4f 	.word	0x3e927e4f
    d418:	19cb1590 	.word	0x19cb1590
    d41c:	3efa01a0 	.word	0x3efa01a0
    d420:	16c15177 	.word	0x16c15177
    d424:	3f56c16c 	.word	0x3f56c16c
    d428:	5555554c 	.word	0x5555554c
    d42c:	3fa55555 	.word	0x3fa55555
    d430:	3fe00000 	.word	0x3fe00000
    d434:	3fd33332 	.word	0x3fd33332
    d438:	3ff00000 	.word	0x3ff00000
    d43c:	3fe90000 	.word	0x3fe90000
    d440:	3fd20000 	.word	0x3fd20000
    d444:	00000000 	.word	0x00000000

0000d448 <__kernel_rem_pio2>:
    d448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d44c:	ed2d 8b02 	vpush	{d8}
    d450:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
    d454:	1ed4      	subs	r4, r2, #3
    d456:	9308      	str	r3, [sp, #32]
    d458:	9101      	str	r1, [sp, #4]
    d45a:	4bc5      	ldr	r3, [pc, #788]	; (d770 <__kernel_rem_pio2+0x328>)
    d45c:	99a6      	ldr	r1, [sp, #664]	; 0x298
    d45e:	9009      	str	r0, [sp, #36]	; 0x24
    d460:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
    d464:	9304      	str	r3, [sp, #16]
    d466:	9b08      	ldr	r3, [sp, #32]
    d468:	3b01      	subs	r3, #1
    d46a:	9307      	str	r3, [sp, #28]
    d46c:	2318      	movs	r3, #24
    d46e:	fb94 f4f3 	sdiv	r4, r4, r3
    d472:	f06f 0317 	mvn.w	r3, #23
    d476:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
    d47a:	fb04 3303 	mla	r3, r4, r3, r3
    d47e:	eb03 0a02 	add.w	sl, r3, r2
    d482:	9b04      	ldr	r3, [sp, #16]
    d484:	9a07      	ldr	r2, [sp, #28]
    d486:	ed9f 8bb6 	vldr	d8, [pc, #728]	; d760 <__kernel_rem_pio2+0x318>
    d48a:	eb03 0802 	add.w	r8, r3, r2
    d48e:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
    d490:	1aa7      	subs	r7, r4, r2
    d492:	eb03 0987 	add.w	r9, r3, r7, lsl #2
    d496:	ae22      	add	r6, sp, #136	; 0x88
    d498:	2500      	movs	r5, #0
    d49a:	4545      	cmp	r5, r8
    d49c:	dd13      	ble.n	d4c6 <__kernel_rem_pio2+0x7e>
    d49e:	ed9f 8bb0 	vldr	d8, [pc, #704]	; d760 <__kernel_rem_pio2+0x318>
    d4a2:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
    d4a6:	2600      	movs	r6, #0
    d4a8:	9b04      	ldr	r3, [sp, #16]
    d4aa:	429e      	cmp	r6, r3
    d4ac:	dc32      	bgt.n	d514 <__kernel_rem_pio2+0xcc>
    d4ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d4b0:	9302      	str	r3, [sp, #8]
    d4b2:	9b08      	ldr	r3, [sp, #32]
    d4b4:	199d      	adds	r5, r3, r6
    d4b6:	ab22      	add	r3, sp, #136	; 0x88
    d4b8:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
    d4bc:	9306      	str	r3, [sp, #24]
    d4be:	ec59 8b18 	vmov	r8, r9, d8
    d4c2:	2700      	movs	r7, #0
    d4c4:	e01f      	b.n	d506 <__kernel_rem_pio2+0xbe>
    d4c6:	42ef      	cmn	r7, r5
    d4c8:	d407      	bmi.n	d4da <__kernel_rem_pio2+0x92>
    d4ca:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
    d4ce:	f000 fe1f 	bl	e110 <__aeabi_i2d>
    d4d2:	e8e6 0102 	strd	r0, r1, [r6], #8
    d4d6:	3501      	adds	r5, #1
    d4d8:	e7df      	b.n	d49a <__kernel_rem_pio2+0x52>
    d4da:	ec51 0b18 	vmov	r0, r1, d8
    d4de:	e7f8      	b.n	d4d2 <__kernel_rem_pio2+0x8a>
    d4e0:	9906      	ldr	r1, [sp, #24]
    d4e2:	9d02      	ldr	r5, [sp, #8]
    d4e4:	e971 2302 	ldrd	r2, r3, [r1, #-8]!
    d4e8:	9106      	str	r1, [sp, #24]
    d4ea:	e8f5 0102 	ldrd	r0, r1, [r5], #8
    d4ee:	9502      	str	r5, [sp, #8]
    d4f0:	f000 fe78 	bl	e1e4 <__aeabi_dmul>
    d4f4:	4602      	mov	r2, r0
    d4f6:	460b      	mov	r3, r1
    d4f8:	4640      	mov	r0, r8
    d4fa:	4649      	mov	r1, r9
    d4fc:	f000 fcbc 	bl	de78 <__adddf3>
    d500:	3701      	adds	r7, #1
    d502:	4680      	mov	r8, r0
    d504:	4689      	mov	r9, r1
    d506:	9b07      	ldr	r3, [sp, #28]
    d508:	429f      	cmp	r7, r3
    d50a:	dde9      	ble.n	d4e0 <__kernel_rem_pio2+0x98>
    d50c:	e8eb 8902 	strd	r8, r9, [fp], #8
    d510:	3601      	adds	r6, #1
    d512:	e7c9      	b.n	d4a8 <__kernel_rem_pio2+0x60>
    d514:	9b04      	ldr	r3, [sp, #16]
    d516:	aa0e      	add	r2, sp, #56	; 0x38
    d518:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    d51c:	930c      	str	r3, [sp, #48]	; 0x30
    d51e:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
    d520:	eb03 0384 	add.w	r3, r3, r4, lsl #2
    d524:	9c04      	ldr	r4, [sp, #16]
    d526:	930b      	str	r3, [sp, #44]	; 0x2c
    d528:	ab9a      	add	r3, sp, #616	; 0x268
    d52a:	f104 5b00 	add.w	fp, r4, #536870912	; 0x20000000
    d52e:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
    d532:	f10b 3bff 	add.w	fp, fp, #4294967295
    d536:	e953 8928 	ldrd	r8, r9, [r3, #-160]	; 0xa0
    d53a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
    d53e:	ab9a      	add	r3, sp, #616	; 0x268
    d540:	445b      	add	r3, fp
    d542:	f1a3 0698 	sub.w	r6, r3, #152	; 0x98
    d546:	2500      	movs	r5, #0
    d548:	1b63      	subs	r3, r4, r5
    d54a:	2b00      	cmp	r3, #0
    d54c:	dc78      	bgt.n	d640 <__kernel_rem_pio2+0x1f8>
    d54e:	4650      	mov	r0, sl
    d550:	ec49 8b10 	vmov	d0, r8, r9
    d554:	f000 fc04 	bl	dd60 <scalbn>
    d558:	ec57 6b10 	vmov	r6, r7, d0
    d55c:	2200      	movs	r2, #0
    d55e:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
    d562:	ee10 0a10 	vmov	r0, s0
    d566:	4639      	mov	r1, r7
    d568:	f000 fe3c 	bl	e1e4 <__aeabi_dmul>
    d56c:	ec41 0b10 	vmov	d0, r0, r1
    d570:	f000 fb6e 	bl	dc50 <floor>
    d574:	2200      	movs	r2, #0
    d576:	ec51 0b10 	vmov	r0, r1, d0
    d57a:	4b7e      	ldr	r3, [pc, #504]	; (d774 <__kernel_rem_pio2+0x32c>)
    d57c:	f000 fe32 	bl	e1e4 <__aeabi_dmul>
    d580:	4602      	mov	r2, r0
    d582:	460b      	mov	r3, r1
    d584:	4630      	mov	r0, r6
    d586:	4639      	mov	r1, r7
    d588:	f000 fc74 	bl	de74 <__aeabi_dsub>
    d58c:	460f      	mov	r7, r1
    d58e:	4606      	mov	r6, r0
    d590:	f001 f8d8 	bl	e744 <__aeabi_d2iz>
    d594:	9006      	str	r0, [sp, #24]
    d596:	f000 fdbb 	bl	e110 <__aeabi_i2d>
    d59a:	4602      	mov	r2, r0
    d59c:	460b      	mov	r3, r1
    d59e:	4630      	mov	r0, r6
    d5a0:	4639      	mov	r1, r7
    d5a2:	f000 fc67 	bl	de74 <__aeabi_dsub>
    d5a6:	f1ba 0f00 	cmp.w	sl, #0
    d5aa:	4606      	mov	r6, r0
    d5ac:	460f      	mov	r7, r1
    d5ae:	dd6c      	ble.n	d68a <__kernel_rem_pio2+0x242>
    d5b0:	1e62      	subs	r2, r4, #1
    d5b2:	ab0e      	add	r3, sp, #56	; 0x38
    d5b4:	f1ca 0118 	rsb	r1, sl, #24
    d5b8:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
    d5bc:	9d06      	ldr	r5, [sp, #24]
    d5be:	fa40 f301 	asr.w	r3, r0, r1
    d5c2:	441d      	add	r5, r3
    d5c4:	408b      	lsls	r3, r1
    d5c6:	1ac0      	subs	r0, r0, r3
    d5c8:	ab0e      	add	r3, sp, #56	; 0x38
    d5ca:	9506      	str	r5, [sp, #24]
    d5cc:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
    d5d0:	f1ca 0317 	rsb	r3, sl, #23
    d5d4:	fa40 f303 	asr.w	r3, r0, r3
    d5d8:	9302      	str	r3, [sp, #8]
    d5da:	9b02      	ldr	r3, [sp, #8]
    d5dc:	2b00      	cmp	r3, #0
    d5de:	dd62      	ble.n	d6a6 <__kernel_rem_pio2+0x25e>
    d5e0:	9b06      	ldr	r3, [sp, #24]
    d5e2:	2200      	movs	r2, #0
    d5e4:	3301      	adds	r3, #1
    d5e6:	9306      	str	r3, [sp, #24]
    d5e8:	4615      	mov	r5, r2
    d5ea:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
    d5ee:	4294      	cmp	r4, r2
    d5f0:	f300 8095 	bgt.w	d71e <__kernel_rem_pio2+0x2d6>
    d5f4:	f1ba 0f00 	cmp.w	sl, #0
    d5f8:	dd07      	ble.n	d60a <__kernel_rem_pio2+0x1c2>
    d5fa:	f1ba 0f01 	cmp.w	sl, #1
    d5fe:	f000 80a2 	beq.w	d746 <__kernel_rem_pio2+0x2fe>
    d602:	f1ba 0f02 	cmp.w	sl, #2
    d606:	f000 80c1 	beq.w	d78c <__kernel_rem_pio2+0x344>
    d60a:	9b02      	ldr	r3, [sp, #8]
    d60c:	2b02      	cmp	r3, #2
    d60e:	d14a      	bne.n	d6a6 <__kernel_rem_pio2+0x25e>
    d610:	4632      	mov	r2, r6
    d612:	463b      	mov	r3, r7
    d614:	2000      	movs	r0, #0
    d616:	4958      	ldr	r1, [pc, #352]	; (d778 <__kernel_rem_pio2+0x330>)
    d618:	f000 fc2c 	bl	de74 <__aeabi_dsub>
    d61c:	4606      	mov	r6, r0
    d61e:	460f      	mov	r7, r1
    d620:	2d00      	cmp	r5, #0
    d622:	d040      	beq.n	d6a6 <__kernel_rem_pio2+0x25e>
    d624:	4650      	mov	r0, sl
    d626:	ed9f 0b50 	vldr	d0, [pc, #320]	; d768 <__kernel_rem_pio2+0x320>
    d62a:	f000 fb99 	bl	dd60 <scalbn>
    d62e:	4630      	mov	r0, r6
    d630:	4639      	mov	r1, r7
    d632:	ec53 2b10 	vmov	r2, r3, d0
    d636:	f000 fc1d 	bl	de74 <__aeabi_dsub>
    d63a:	4606      	mov	r6, r0
    d63c:	460f      	mov	r7, r1
    d63e:	e032      	b.n	d6a6 <__kernel_rem_pio2+0x25e>
    d640:	2200      	movs	r2, #0
    d642:	4b4e      	ldr	r3, [pc, #312]	; (d77c <__kernel_rem_pio2+0x334>)
    d644:	4640      	mov	r0, r8
    d646:	4649      	mov	r1, r9
    d648:	f000 fdcc 	bl	e1e4 <__aeabi_dmul>
    d64c:	f001 f87a 	bl	e744 <__aeabi_d2iz>
    d650:	f000 fd5e 	bl	e110 <__aeabi_i2d>
    d654:	2200      	movs	r2, #0
    d656:	4b4a      	ldr	r3, [pc, #296]	; (d780 <__kernel_rem_pio2+0x338>)
    d658:	e9cd 0102 	strd	r0, r1, [sp, #8]
    d65c:	f000 fdc2 	bl	e1e4 <__aeabi_dmul>
    d660:	4602      	mov	r2, r0
    d662:	460b      	mov	r3, r1
    d664:	4640      	mov	r0, r8
    d666:	4649      	mov	r1, r9
    d668:	f000 fc04 	bl	de74 <__aeabi_dsub>
    d66c:	f001 f86a 	bl	e744 <__aeabi_d2iz>
    d670:	ab0e      	add	r3, sp, #56	; 0x38
    d672:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
    d676:	e976 2302 	ldrd	r2, r3, [r6, #-8]!
    d67a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    d67e:	f000 fbfb 	bl	de78 <__adddf3>
    d682:	3501      	adds	r5, #1
    d684:	4680      	mov	r8, r0
    d686:	4689      	mov	r9, r1
    d688:	e75e      	b.n	d548 <__kernel_rem_pio2+0x100>
    d68a:	d105      	bne.n	d698 <__kernel_rem_pio2+0x250>
    d68c:	1e63      	subs	r3, r4, #1
    d68e:	aa0e      	add	r2, sp, #56	; 0x38
    d690:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
    d694:	15c3      	asrs	r3, r0, #23
    d696:	e79f      	b.n	d5d8 <__kernel_rem_pio2+0x190>
    d698:	2200      	movs	r2, #0
    d69a:	4b3a      	ldr	r3, [pc, #232]	; (d784 <__kernel_rem_pio2+0x33c>)
    d69c:	f001 f828 	bl	e6f0 <__aeabi_dcmpge>
    d6a0:	2800      	cmp	r0, #0
    d6a2:	d139      	bne.n	d718 <__kernel_rem_pio2+0x2d0>
    d6a4:	9002      	str	r0, [sp, #8]
    d6a6:	2200      	movs	r2, #0
    d6a8:	2300      	movs	r3, #0
    d6aa:	4630      	mov	r0, r6
    d6ac:	4639      	mov	r1, r7
    d6ae:	f001 f801 	bl	e6b4 <__aeabi_dcmpeq>
    d6b2:	2800      	cmp	r0, #0
    d6b4:	f000 80c7 	beq.w	d846 <__kernel_rem_pio2+0x3fe>
    d6b8:	1e65      	subs	r5, r4, #1
    d6ba:	462b      	mov	r3, r5
    d6bc:	2200      	movs	r2, #0
    d6be:	9904      	ldr	r1, [sp, #16]
    d6c0:	428b      	cmp	r3, r1
    d6c2:	da6a      	bge.n	d79a <__kernel_rem_pio2+0x352>
    d6c4:	2a00      	cmp	r2, #0
    d6c6:	f000 8088 	beq.w	d7da <__kernel_rem_pio2+0x392>
    d6ca:	ab0e      	add	r3, sp, #56	; 0x38
    d6cc:	f1aa 0a18 	sub.w	sl, sl, #24
    d6d0:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
    d6d4:	2b00      	cmp	r3, #0
    d6d6:	f000 80b4 	beq.w	d842 <__kernel_rem_pio2+0x3fa>
    d6da:	4650      	mov	r0, sl
    d6dc:	ed9f 0b22 	vldr	d0, [pc, #136]	; d768 <__kernel_rem_pio2+0x320>
    d6e0:	f000 fb3e 	bl	dd60 <scalbn>
    d6e4:	00ec      	lsls	r4, r5, #3
    d6e6:	ab72      	add	r3, sp, #456	; 0x1c8
    d6e8:	191e      	adds	r6, r3, r4
    d6ea:	ec59 8b10 	vmov	r8, r9, d0
    d6ee:	f106 0a08 	add.w	sl, r6, #8
    d6f2:	462f      	mov	r7, r5
    d6f4:	2f00      	cmp	r7, #0
    d6f6:	f280 80df 	bge.w	d8b8 <__kernel_rem_pio2+0x470>
    d6fa:	ed9f 8b19 	vldr	d8, [pc, #100]	; d760 <__kernel_rem_pio2+0x318>
    d6fe:	f04f 0a00 	mov.w	sl, #0
    d702:	eba5 030a 	sub.w	r3, r5, sl
    d706:	2b00      	cmp	r3, #0
    d708:	f2c0 810a 	blt.w	d920 <__kernel_rem_pio2+0x4d8>
    d70c:	f8df b078 	ldr.w	fp, [pc, #120]	; d788 <__kernel_rem_pio2+0x340>
    d710:	ec59 8b18 	vmov	r8, r9, d8
    d714:	2700      	movs	r7, #0
    d716:	e0f5      	b.n	d904 <__kernel_rem_pio2+0x4bc>
    d718:	2302      	movs	r3, #2
    d71a:	9302      	str	r3, [sp, #8]
    d71c:	e760      	b.n	d5e0 <__kernel_rem_pio2+0x198>
    d71e:	ab0e      	add	r3, sp, #56	; 0x38
    d720:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    d724:	b94d      	cbnz	r5, d73a <__kernel_rem_pio2+0x2f2>
    d726:	b12b      	cbz	r3, d734 <__kernel_rem_pio2+0x2ec>
    d728:	a80e      	add	r0, sp, #56	; 0x38
    d72a:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
    d72e:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
    d732:	2301      	movs	r3, #1
    d734:	3201      	adds	r2, #1
    d736:	461d      	mov	r5, r3
    d738:	e759      	b.n	d5ee <__kernel_rem_pio2+0x1a6>
    d73a:	a80e      	add	r0, sp, #56	; 0x38
    d73c:	1acb      	subs	r3, r1, r3
    d73e:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
    d742:	462b      	mov	r3, r5
    d744:	e7f6      	b.n	d734 <__kernel_rem_pio2+0x2ec>
    d746:	1e62      	subs	r2, r4, #1
    d748:	ab0e      	add	r3, sp, #56	; 0x38
    d74a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    d74e:	f3c3 0316 	ubfx	r3, r3, #0, #23
    d752:	a90e      	add	r1, sp, #56	; 0x38
    d754:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
    d758:	e757      	b.n	d60a <__kernel_rem_pio2+0x1c2>
    d75a:	bf00      	nop
    d75c:	f3af 8000 	nop.w
	...
    d76c:	3ff00000 	.word	0x3ff00000
    d770:	0000efa8 	.word	0x0000efa8
    d774:	40200000 	.word	0x40200000
    d778:	3ff00000 	.word	0x3ff00000
    d77c:	3e700000 	.word	0x3e700000
    d780:	41700000 	.word	0x41700000
    d784:	3fe00000 	.word	0x3fe00000
    d788:	0000ef68 	.word	0x0000ef68
    d78c:	1e62      	subs	r2, r4, #1
    d78e:	ab0e      	add	r3, sp, #56	; 0x38
    d790:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    d794:	f3c3 0315 	ubfx	r3, r3, #0, #22
    d798:	e7db      	b.n	d752 <__kernel_rem_pio2+0x30a>
    d79a:	a90e      	add	r1, sp, #56	; 0x38
    d79c:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
    d7a0:	3b01      	subs	r3, #1
    d7a2:	430a      	orrs	r2, r1
    d7a4:	e78b      	b.n	d6be <__kernel_rem_pio2+0x276>
    d7a6:	3301      	adds	r3, #1
    d7a8:	f852 1d04 	ldr.w	r1, [r2, #-4]!
    d7ac:	2900      	cmp	r1, #0
    d7ae:	d0fa      	beq.n	d7a6 <__kernel_rem_pio2+0x35e>
    d7b0:	9a08      	ldr	r2, [sp, #32]
    d7b2:	4422      	add	r2, r4
    d7b4:	00d2      	lsls	r2, r2, #3
    d7b6:	a922      	add	r1, sp, #136	; 0x88
    d7b8:	18e3      	adds	r3, r4, r3
    d7ba:	9206      	str	r2, [sp, #24]
    d7bc:	440a      	add	r2, r1
    d7be:	9302      	str	r3, [sp, #8]
    d7c0:	f10b 0108 	add.w	r1, fp, #8
    d7c4:	f102 0308 	add.w	r3, r2, #8
    d7c8:	1c66      	adds	r6, r4, #1
    d7ca:	910a      	str	r1, [sp, #40]	; 0x28
    d7cc:	2500      	movs	r5, #0
    d7ce:	930d      	str	r3, [sp, #52]	; 0x34
    d7d0:	9b02      	ldr	r3, [sp, #8]
    d7d2:	42b3      	cmp	r3, r6
    d7d4:	da04      	bge.n	d7e0 <__kernel_rem_pio2+0x398>
    d7d6:	461c      	mov	r4, r3
    d7d8:	e6a6      	b.n	d528 <__kernel_rem_pio2+0xe0>
    d7da:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    d7dc:	2301      	movs	r3, #1
    d7de:	e7e3      	b.n	d7a8 <__kernel_rem_pio2+0x360>
    d7e0:	9b06      	ldr	r3, [sp, #24]
    d7e2:	18ef      	adds	r7, r5, r3
    d7e4:	ab22      	add	r3, sp, #136	; 0x88
    d7e6:	441f      	add	r7, r3
    d7e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    d7ea:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
    d7ee:	f000 fc8f 	bl	e110 <__aeabi_i2d>
    d7f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d7f4:	461c      	mov	r4, r3
    d7f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    d7f8:	e9c7 0100 	strd	r0, r1, [r7]
    d7fc:	eb03 0b05 	add.w	fp, r3, r5
    d800:	2700      	movs	r7, #0
    d802:	f04f 0800 	mov.w	r8, #0
    d806:	f04f 0900 	mov.w	r9, #0
    d80a:	9b07      	ldr	r3, [sp, #28]
    d80c:	429f      	cmp	r7, r3
    d80e:	dd08      	ble.n	d822 <__kernel_rem_pio2+0x3da>
    d810:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    d812:	aa72      	add	r2, sp, #456	; 0x1c8
    d814:	18eb      	adds	r3, r5, r3
    d816:	4413      	add	r3, r2
    d818:	e9c3 8902 	strd	r8, r9, [r3, #8]
    d81c:	3601      	adds	r6, #1
    d81e:	3508      	adds	r5, #8
    d820:	e7d6      	b.n	d7d0 <__kernel_rem_pio2+0x388>
    d822:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
    d826:	e8f4 0102 	ldrd	r0, r1, [r4], #8
    d82a:	f000 fcdb 	bl	e1e4 <__aeabi_dmul>
    d82e:	4602      	mov	r2, r0
    d830:	460b      	mov	r3, r1
    d832:	4640      	mov	r0, r8
    d834:	4649      	mov	r1, r9
    d836:	f000 fb1f 	bl	de78 <__adddf3>
    d83a:	3701      	adds	r7, #1
    d83c:	4680      	mov	r8, r0
    d83e:	4689      	mov	r9, r1
    d840:	e7e3      	b.n	d80a <__kernel_rem_pio2+0x3c2>
    d842:	3d01      	subs	r5, #1
    d844:	e741      	b.n	d6ca <__kernel_rem_pio2+0x282>
    d846:	f1ca 0000 	rsb	r0, sl, #0
    d84a:	ec47 6b10 	vmov	d0, r6, r7
    d84e:	f000 fa87 	bl	dd60 <scalbn>
    d852:	ec57 6b10 	vmov	r6, r7, d0
    d856:	2200      	movs	r2, #0
    d858:	4b99      	ldr	r3, [pc, #612]	; (dac0 <__kernel_rem_pio2+0x678>)
    d85a:	ee10 0a10 	vmov	r0, s0
    d85e:	4639      	mov	r1, r7
    d860:	f000 ff46 	bl	e6f0 <__aeabi_dcmpge>
    d864:	b1f8      	cbz	r0, d8a6 <__kernel_rem_pio2+0x45e>
    d866:	2200      	movs	r2, #0
    d868:	4b96      	ldr	r3, [pc, #600]	; (dac4 <__kernel_rem_pio2+0x67c>)
    d86a:	4630      	mov	r0, r6
    d86c:	4639      	mov	r1, r7
    d86e:	f000 fcb9 	bl	e1e4 <__aeabi_dmul>
    d872:	f000 ff67 	bl	e744 <__aeabi_d2iz>
    d876:	4680      	mov	r8, r0
    d878:	f000 fc4a 	bl	e110 <__aeabi_i2d>
    d87c:	2200      	movs	r2, #0
    d87e:	4b90      	ldr	r3, [pc, #576]	; (dac0 <__kernel_rem_pio2+0x678>)
    d880:	f000 fcb0 	bl	e1e4 <__aeabi_dmul>
    d884:	460b      	mov	r3, r1
    d886:	4602      	mov	r2, r0
    d888:	4639      	mov	r1, r7
    d88a:	4630      	mov	r0, r6
    d88c:	f000 faf2 	bl	de74 <__aeabi_dsub>
    d890:	f000 ff58 	bl	e744 <__aeabi_d2iz>
    d894:	1c65      	adds	r5, r4, #1
    d896:	ab0e      	add	r3, sp, #56	; 0x38
    d898:	f10a 0a18 	add.w	sl, sl, #24
    d89c:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
    d8a0:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
    d8a4:	e719      	b.n	d6da <__kernel_rem_pio2+0x292>
    d8a6:	4630      	mov	r0, r6
    d8a8:	4639      	mov	r1, r7
    d8aa:	f000 ff4b 	bl	e744 <__aeabi_d2iz>
    d8ae:	ab0e      	add	r3, sp, #56	; 0x38
    d8b0:	4625      	mov	r5, r4
    d8b2:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
    d8b6:	e710      	b.n	d6da <__kernel_rem_pio2+0x292>
    d8b8:	ab0e      	add	r3, sp, #56	; 0x38
    d8ba:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
    d8be:	f000 fc27 	bl	e110 <__aeabi_i2d>
    d8c2:	4642      	mov	r2, r8
    d8c4:	464b      	mov	r3, r9
    d8c6:	f000 fc8d 	bl	e1e4 <__aeabi_dmul>
    d8ca:	2200      	movs	r2, #0
    d8cc:	e96a 0102 	strd	r0, r1, [sl, #-8]!
    d8d0:	4b7c      	ldr	r3, [pc, #496]	; (dac4 <__kernel_rem_pio2+0x67c>)
    d8d2:	4640      	mov	r0, r8
    d8d4:	4649      	mov	r1, r9
    d8d6:	f000 fc85 	bl	e1e4 <__aeabi_dmul>
    d8da:	3f01      	subs	r7, #1
    d8dc:	4680      	mov	r8, r0
    d8de:	4689      	mov	r9, r1
    d8e0:	e708      	b.n	d6f4 <__kernel_rem_pio2+0x2ac>
    d8e2:	eb06 03c7 	add.w	r3, r6, r7, lsl #3
    d8e6:	e9d3 2300 	ldrd	r2, r3, [r3]
    d8ea:	e8fb 0102 	ldrd	r0, r1, [fp], #8
    d8ee:	f000 fc79 	bl	e1e4 <__aeabi_dmul>
    d8f2:	4602      	mov	r2, r0
    d8f4:	460b      	mov	r3, r1
    d8f6:	4640      	mov	r0, r8
    d8f8:	4649      	mov	r1, r9
    d8fa:	f000 fabd 	bl	de78 <__adddf3>
    d8fe:	3701      	adds	r7, #1
    d900:	4680      	mov	r8, r0
    d902:	4689      	mov	r9, r1
    d904:	9b04      	ldr	r3, [sp, #16]
    d906:	429f      	cmp	r7, r3
    d908:	dc01      	bgt.n	d90e <__kernel_rem_pio2+0x4c6>
    d90a:	45ba      	cmp	sl, r7
    d90c:	dae9      	bge.n	d8e2 <__kernel_rem_pio2+0x49a>
    d90e:	ab4a      	add	r3, sp, #296	; 0x128
    d910:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
    d914:	e9c3 8900 	strd	r8, r9, [r3]
    d918:	f10a 0a01 	add.w	sl, sl, #1
    d91c:	3e08      	subs	r6, #8
    d91e:	e6f0      	b.n	d702 <__kernel_rem_pio2+0x2ba>
    d920:	9ba6      	ldr	r3, [sp, #664]	; 0x298
    d922:	2b03      	cmp	r3, #3
    d924:	d85b      	bhi.n	d9de <__kernel_rem_pio2+0x596>
    d926:	e8df f003 	tbb	[pc, r3]
    d92a:	264a      	.short	0x264a
    d92c:	0226      	.short	0x0226
    d92e:	ab9a      	add	r3, sp, #616	; 0x268
    d930:	441c      	add	r4, r3
    d932:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
    d936:	46a2      	mov	sl, r4
    d938:	46ab      	mov	fp, r5
    d93a:	f1bb 0f00 	cmp.w	fp, #0
    d93e:	dc6c      	bgt.n	da1a <__kernel_rem_pio2+0x5d2>
    d940:	46a2      	mov	sl, r4
    d942:	46ab      	mov	fp, r5
    d944:	f1bb 0f01 	cmp.w	fp, #1
    d948:	f300 8086 	bgt.w	da58 <__kernel_rem_pio2+0x610>
    d94c:	2000      	movs	r0, #0
    d94e:	2100      	movs	r1, #0
    d950:	2d01      	cmp	r5, #1
    d952:	f300 80a0 	bgt.w	da96 <__kernel_rem_pio2+0x64e>
    d956:	9b02      	ldr	r3, [sp, #8]
    d958:	e9dd 784a 	ldrd	r7, r8, [sp, #296]	; 0x128
    d95c:	e9dd 564c 	ldrd	r5, r6, [sp, #304]	; 0x130
    d960:	2b00      	cmp	r3, #0
    d962:	f040 809e 	bne.w	daa2 <__kernel_rem_pio2+0x65a>
    d966:	9b01      	ldr	r3, [sp, #4]
    d968:	e9c3 7800 	strd	r7, r8, [r3]
    d96c:	e9c3 5602 	strd	r5, r6, [r3, #8]
    d970:	e9c3 0104 	strd	r0, r1, [r3, #16]
    d974:	e033      	b.n	d9de <__kernel_rem_pio2+0x596>
    d976:	3408      	adds	r4, #8
    d978:	ab4a      	add	r3, sp, #296	; 0x128
    d97a:	441c      	add	r4, r3
    d97c:	462e      	mov	r6, r5
    d97e:	2000      	movs	r0, #0
    d980:	2100      	movs	r1, #0
    d982:	2e00      	cmp	r6, #0
    d984:	da3a      	bge.n	d9fc <__kernel_rem_pio2+0x5b4>
    d986:	9b02      	ldr	r3, [sp, #8]
    d988:	2b00      	cmp	r3, #0
    d98a:	d03d      	beq.n	da08 <__kernel_rem_pio2+0x5c0>
    d98c:	4602      	mov	r2, r0
    d98e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    d992:	9c01      	ldr	r4, [sp, #4]
    d994:	e9c4 2300 	strd	r2, r3, [r4]
    d998:	4602      	mov	r2, r0
    d99a:	460b      	mov	r3, r1
    d99c:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
    d9a0:	f000 fa68 	bl	de74 <__aeabi_dsub>
    d9a4:	ae4c      	add	r6, sp, #304	; 0x130
    d9a6:	2401      	movs	r4, #1
    d9a8:	42a5      	cmp	r5, r4
    d9aa:	da30      	bge.n	da0e <__kernel_rem_pio2+0x5c6>
    d9ac:	9b02      	ldr	r3, [sp, #8]
    d9ae:	b113      	cbz	r3, d9b6 <__kernel_rem_pio2+0x56e>
    d9b0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    d9b4:	4619      	mov	r1, r3
    d9b6:	9b01      	ldr	r3, [sp, #4]
    d9b8:	e9c3 0102 	strd	r0, r1, [r3, #8]
    d9bc:	e00f      	b.n	d9de <__kernel_rem_pio2+0x596>
    d9be:	ab9a      	add	r3, sp, #616	; 0x268
    d9c0:	441c      	add	r4, r3
    d9c2:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
    d9c6:	2000      	movs	r0, #0
    d9c8:	2100      	movs	r1, #0
    d9ca:	2d00      	cmp	r5, #0
    d9cc:	da10      	bge.n	d9f0 <__kernel_rem_pio2+0x5a8>
    d9ce:	9b02      	ldr	r3, [sp, #8]
    d9d0:	b113      	cbz	r3, d9d8 <__kernel_rem_pio2+0x590>
    d9d2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    d9d6:	4619      	mov	r1, r3
    d9d8:	9b01      	ldr	r3, [sp, #4]
    d9da:	e9c3 0100 	strd	r0, r1, [r3]
    d9de:	9b06      	ldr	r3, [sp, #24]
    d9e0:	f003 0007 	and.w	r0, r3, #7
    d9e4:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
    d9e8:	ecbd 8b02 	vpop	{d8}
    d9ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d9f0:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
    d9f4:	f000 fa40 	bl	de78 <__adddf3>
    d9f8:	3d01      	subs	r5, #1
    d9fa:	e7e6      	b.n	d9ca <__kernel_rem_pio2+0x582>
    d9fc:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
    da00:	f000 fa3a 	bl	de78 <__adddf3>
    da04:	3e01      	subs	r6, #1
    da06:	e7bc      	b.n	d982 <__kernel_rem_pio2+0x53a>
    da08:	4602      	mov	r2, r0
    da0a:	460b      	mov	r3, r1
    da0c:	e7c1      	b.n	d992 <__kernel_rem_pio2+0x54a>
    da0e:	e8f6 2302 	ldrd	r2, r3, [r6], #8
    da12:	f000 fa31 	bl	de78 <__adddf3>
    da16:	3401      	adds	r4, #1
    da18:	e7c6      	b.n	d9a8 <__kernel_rem_pio2+0x560>
    da1a:	e95a 8904 	ldrd	r8, r9, [sl, #-16]
    da1e:	ed3a 7b02 	vldmdb	sl!, {d7}
    da22:	4640      	mov	r0, r8
    da24:	ec53 2b17 	vmov	r2, r3, d7
    da28:	4649      	mov	r1, r9
    da2a:	ed8d 7b04 	vstr	d7, [sp, #16]
    da2e:	f000 fa23 	bl	de78 <__adddf3>
    da32:	4602      	mov	r2, r0
    da34:	460b      	mov	r3, r1
    da36:	4606      	mov	r6, r0
    da38:	460f      	mov	r7, r1
    da3a:	4640      	mov	r0, r8
    da3c:	4649      	mov	r1, r9
    da3e:	f000 fa19 	bl	de74 <__aeabi_dsub>
    da42:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    da46:	f000 fa17 	bl	de78 <__adddf3>
    da4a:	f10b 3bff 	add.w	fp, fp, #4294967295
    da4e:	e9ca 0100 	strd	r0, r1, [sl]
    da52:	e94a 6702 	strd	r6, r7, [sl, #-8]
    da56:	e770      	b.n	d93a <__kernel_rem_pio2+0x4f2>
    da58:	e95a 6704 	ldrd	r6, r7, [sl, #-16]
    da5c:	ed3a 7b02 	vldmdb	sl!, {d7}
    da60:	4630      	mov	r0, r6
    da62:	ec53 2b17 	vmov	r2, r3, d7
    da66:	4639      	mov	r1, r7
    da68:	ed8d 7b04 	vstr	d7, [sp, #16]
    da6c:	f000 fa04 	bl	de78 <__adddf3>
    da70:	4602      	mov	r2, r0
    da72:	460b      	mov	r3, r1
    da74:	4680      	mov	r8, r0
    da76:	4689      	mov	r9, r1
    da78:	4630      	mov	r0, r6
    da7a:	4639      	mov	r1, r7
    da7c:	f000 f9fa 	bl	de74 <__aeabi_dsub>
    da80:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    da84:	f000 f9f8 	bl	de78 <__adddf3>
    da88:	f10b 3bff 	add.w	fp, fp, #4294967295
    da8c:	e9ca 0100 	strd	r0, r1, [sl]
    da90:	e94a 8902 	strd	r8, r9, [sl, #-8]
    da94:	e756      	b.n	d944 <__kernel_rem_pio2+0x4fc>
    da96:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
    da9a:	f000 f9ed 	bl	de78 <__adddf3>
    da9e:	3d01      	subs	r5, #1
    daa0:	e756      	b.n	d950 <__kernel_rem_pio2+0x508>
    daa2:	9b01      	ldr	r3, [sp, #4]
    daa4:	9a01      	ldr	r2, [sp, #4]
    daa6:	601f      	str	r7, [r3, #0]
    daa8:	f108 4400 	add.w	r4, r8, #2147483648	; 0x80000000
    daac:	605c      	str	r4, [r3, #4]
    daae:	609d      	str	r5, [r3, #8]
    dab0:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
    dab4:	60d3      	str	r3, [r2, #12]
    dab6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    daba:	6110      	str	r0, [r2, #16]
    dabc:	6153      	str	r3, [r2, #20]
    dabe:	e78e      	b.n	d9de <__kernel_rem_pio2+0x596>
    dac0:	41700000 	.word	0x41700000
    dac4:	3e700000 	.word	0x3e700000

0000dac8 <__kernel_sin>:
    dac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dacc:	ec55 4b10 	vmov	r4, r5, d0
    dad0:	b085      	sub	sp, #20
    dad2:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
    dad6:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
    dada:	ed8d 1b00 	vstr	d1, [sp]
    dade:	9002      	str	r0, [sp, #8]
    dae0:	da06      	bge.n	daf0 <__kernel_sin+0x28>
    dae2:	ee10 0a10 	vmov	r0, s0
    dae6:	4629      	mov	r1, r5
    dae8:	f000 fe2c 	bl	e744 <__aeabi_d2iz>
    daec:	2800      	cmp	r0, #0
    daee:	d051      	beq.n	db94 <__kernel_sin+0xcc>
    daf0:	4622      	mov	r2, r4
    daf2:	462b      	mov	r3, r5
    daf4:	4620      	mov	r0, r4
    daf6:	4629      	mov	r1, r5
    daf8:	f000 fb74 	bl	e1e4 <__aeabi_dmul>
    dafc:	4682      	mov	sl, r0
    dafe:	468b      	mov	fp, r1
    db00:	4602      	mov	r2, r0
    db02:	460b      	mov	r3, r1
    db04:	4620      	mov	r0, r4
    db06:	4629      	mov	r1, r5
    db08:	f000 fb6c 	bl	e1e4 <__aeabi_dmul>
    db0c:	a341      	add	r3, pc, #260	; (adr r3, dc14 <__kernel_sin+0x14c>)
    db0e:	e9d3 2300 	ldrd	r2, r3, [r3]
    db12:	4680      	mov	r8, r0
    db14:	4689      	mov	r9, r1
    db16:	4650      	mov	r0, sl
    db18:	4659      	mov	r1, fp
    db1a:	f000 fb63 	bl	e1e4 <__aeabi_dmul>
    db1e:	a33f      	add	r3, pc, #252	; (adr r3, dc1c <__kernel_sin+0x154>)
    db20:	e9d3 2300 	ldrd	r2, r3, [r3]
    db24:	f000 f9a6 	bl	de74 <__aeabi_dsub>
    db28:	4652      	mov	r2, sl
    db2a:	465b      	mov	r3, fp
    db2c:	f000 fb5a 	bl	e1e4 <__aeabi_dmul>
    db30:	a33c      	add	r3, pc, #240	; (adr r3, dc24 <__kernel_sin+0x15c>)
    db32:	e9d3 2300 	ldrd	r2, r3, [r3]
    db36:	f000 f99f 	bl	de78 <__adddf3>
    db3a:	4652      	mov	r2, sl
    db3c:	465b      	mov	r3, fp
    db3e:	f000 fb51 	bl	e1e4 <__aeabi_dmul>
    db42:	a33a      	add	r3, pc, #232	; (adr r3, dc2c <__kernel_sin+0x164>)
    db44:	e9d3 2300 	ldrd	r2, r3, [r3]
    db48:	f000 f994 	bl	de74 <__aeabi_dsub>
    db4c:	4652      	mov	r2, sl
    db4e:	465b      	mov	r3, fp
    db50:	f000 fb48 	bl	e1e4 <__aeabi_dmul>
    db54:	a337      	add	r3, pc, #220	; (adr r3, dc34 <__kernel_sin+0x16c>)
    db56:	e9d3 2300 	ldrd	r2, r3, [r3]
    db5a:	f000 f98d 	bl	de78 <__adddf3>
    db5e:	9b02      	ldr	r3, [sp, #8]
    db60:	4606      	mov	r6, r0
    db62:	460f      	mov	r7, r1
    db64:	b9db      	cbnz	r3, db9e <__kernel_sin+0xd6>
    db66:	4602      	mov	r2, r0
    db68:	460b      	mov	r3, r1
    db6a:	4650      	mov	r0, sl
    db6c:	4659      	mov	r1, fp
    db6e:	f000 fb39 	bl	e1e4 <__aeabi_dmul>
    db72:	a325      	add	r3, pc, #148	; (adr r3, dc08 <__kernel_sin+0x140>)
    db74:	e9d3 2300 	ldrd	r2, r3, [r3]
    db78:	f000 f97c 	bl	de74 <__aeabi_dsub>
    db7c:	4642      	mov	r2, r8
    db7e:	464b      	mov	r3, r9
    db80:	f000 fb30 	bl	e1e4 <__aeabi_dmul>
    db84:	4602      	mov	r2, r0
    db86:	460b      	mov	r3, r1
    db88:	4620      	mov	r0, r4
    db8a:	4629      	mov	r1, r5
    db8c:	f000 f974 	bl	de78 <__adddf3>
    db90:	4604      	mov	r4, r0
    db92:	460d      	mov	r5, r1
    db94:	ec45 4b10 	vmov	d0, r4, r5
    db98:	b005      	add	sp, #20
    db9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    db9e:	2200      	movs	r2, #0
    dba0:	4b1b      	ldr	r3, [pc, #108]	; (dc10 <__kernel_sin+0x148>)
    dba2:	e9dd 0100 	ldrd	r0, r1, [sp]
    dba6:	f000 fb1d 	bl	e1e4 <__aeabi_dmul>
    dbaa:	4632      	mov	r2, r6
    dbac:	e9cd 0102 	strd	r0, r1, [sp, #8]
    dbb0:	463b      	mov	r3, r7
    dbb2:	4640      	mov	r0, r8
    dbb4:	4649      	mov	r1, r9
    dbb6:	f000 fb15 	bl	e1e4 <__aeabi_dmul>
    dbba:	4602      	mov	r2, r0
    dbbc:	460b      	mov	r3, r1
    dbbe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    dbc2:	f000 f957 	bl	de74 <__aeabi_dsub>
    dbc6:	4652      	mov	r2, sl
    dbc8:	465b      	mov	r3, fp
    dbca:	f000 fb0b 	bl	e1e4 <__aeabi_dmul>
    dbce:	e9dd 2300 	ldrd	r2, r3, [sp]
    dbd2:	f000 f94f 	bl	de74 <__aeabi_dsub>
    dbd6:	a30c      	add	r3, pc, #48	; (adr r3, dc08 <__kernel_sin+0x140>)
    dbd8:	e9d3 2300 	ldrd	r2, r3, [r3]
    dbdc:	4606      	mov	r6, r0
    dbde:	460f      	mov	r7, r1
    dbe0:	4640      	mov	r0, r8
    dbe2:	4649      	mov	r1, r9
    dbe4:	f000 fafe 	bl	e1e4 <__aeabi_dmul>
    dbe8:	4602      	mov	r2, r0
    dbea:	460b      	mov	r3, r1
    dbec:	4630      	mov	r0, r6
    dbee:	4639      	mov	r1, r7
    dbf0:	f000 f942 	bl	de78 <__adddf3>
    dbf4:	4602      	mov	r2, r0
    dbf6:	460b      	mov	r3, r1
    dbf8:	4620      	mov	r0, r4
    dbfa:	4629      	mov	r1, r5
    dbfc:	f000 f93a 	bl	de74 <__aeabi_dsub>
    dc00:	e7c6      	b.n	db90 <__kernel_sin+0xc8>
    dc02:	bf00      	nop
    dc04:	f3af 8000 	nop.w
    dc08:	55555549 	.word	0x55555549
    dc0c:	3fc55555 	.word	0x3fc55555
    dc10:	3fe00000 	.word	0x3fe00000
    dc14:	5acfd57c 	.word	0x5acfd57c
    dc18:	3de5d93a 	.word	0x3de5d93a
    dc1c:	8a2b9ceb 	.word	0x8a2b9ceb
    dc20:	3e5ae5e6 	.word	0x3e5ae5e6
    dc24:	57b1fe7d 	.word	0x57b1fe7d
    dc28:	3ec71de3 	.word	0x3ec71de3
    dc2c:	19c161d5 	.word	0x19c161d5
    dc30:	3f2a01a0 	.word	0x3f2a01a0
    dc34:	1110f8a6 	.word	0x1110f8a6
    dc38:	3f811111 	.word	0x3f811111

0000dc3c <fabs>:
    dc3c:	ec51 0b10 	vmov	r0, r1, d0
    dc40:	ee10 2a10 	vmov	r2, s0
    dc44:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
    dc48:	ec43 2b10 	vmov	d0, r2, r3
    dc4c:	4770      	bx	lr
	...

0000dc50 <floor>:
    dc50:	ec51 0b10 	vmov	r0, r1, d0
    dc54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    dc58:	f3c1 570a 	ubfx	r7, r1, #20, #11
    dc5c:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
    dc60:	2e13      	cmp	r6, #19
    dc62:	460c      	mov	r4, r1
    dc64:	ee10 5a10 	vmov	r5, s0
    dc68:	4680      	mov	r8, r0
    dc6a:	dc34      	bgt.n	dcd6 <floor+0x86>
    dc6c:	2e00      	cmp	r6, #0
    dc6e:	da16      	bge.n	dc9e <floor+0x4e>
    dc70:	a335      	add	r3, pc, #212	; (adr r3, dd48 <floor+0xf8>)
    dc72:	e9d3 2300 	ldrd	r2, r3, [r3]
    dc76:	f000 f8ff 	bl	de78 <__adddf3>
    dc7a:	2200      	movs	r2, #0
    dc7c:	2300      	movs	r3, #0
    dc7e:	f000 fd41 	bl	e704 <__aeabi_dcmpgt>
    dc82:	b148      	cbz	r0, dc98 <floor+0x48>
    dc84:	2c00      	cmp	r4, #0
    dc86:	da59      	bge.n	dd3c <floor+0xec>
    dc88:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
    dc8c:	4a30      	ldr	r2, [pc, #192]	; (dd50 <floor+0x100>)
    dc8e:	432b      	orrs	r3, r5
    dc90:	2500      	movs	r5, #0
    dc92:	42ab      	cmp	r3, r5
    dc94:	bf18      	it	ne
    dc96:	4614      	movne	r4, r2
    dc98:	4621      	mov	r1, r4
    dc9a:	4628      	mov	r0, r5
    dc9c:	e025      	b.n	dcea <floor+0x9a>
    dc9e:	4f2d      	ldr	r7, [pc, #180]	; (dd54 <floor+0x104>)
    dca0:	4137      	asrs	r7, r6
    dca2:	ea01 0307 	and.w	r3, r1, r7
    dca6:	4303      	orrs	r3, r0
    dca8:	d01f      	beq.n	dcea <floor+0x9a>
    dcaa:	a327      	add	r3, pc, #156	; (adr r3, dd48 <floor+0xf8>)
    dcac:	e9d3 2300 	ldrd	r2, r3, [r3]
    dcb0:	f000 f8e2 	bl	de78 <__adddf3>
    dcb4:	2200      	movs	r2, #0
    dcb6:	2300      	movs	r3, #0
    dcb8:	f000 fd24 	bl	e704 <__aeabi_dcmpgt>
    dcbc:	2800      	cmp	r0, #0
    dcbe:	d0eb      	beq.n	dc98 <floor+0x48>
    dcc0:	2c00      	cmp	r4, #0
    dcc2:	bfbe      	ittt	lt
    dcc4:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
    dcc8:	fa43 f606 	asrlt.w	r6, r3, r6
    dccc:	19a4      	addlt	r4, r4, r6
    dcce:	ea24 0407 	bic.w	r4, r4, r7
    dcd2:	2500      	movs	r5, #0
    dcd4:	e7e0      	b.n	dc98 <floor+0x48>
    dcd6:	2e33      	cmp	r6, #51	; 0x33
    dcd8:	dd0b      	ble.n	dcf2 <floor+0xa2>
    dcda:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
    dcde:	d104      	bne.n	dcea <floor+0x9a>
    dce0:	ee10 2a10 	vmov	r2, s0
    dce4:	460b      	mov	r3, r1
    dce6:	f000 f8c7 	bl	de78 <__adddf3>
    dcea:	ec41 0b10 	vmov	d0, r0, r1
    dcee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    dcf2:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
    dcf6:	f04f 33ff 	mov.w	r3, #4294967295
    dcfa:	fa23 f707 	lsr.w	r7, r3, r7
    dcfe:	4207      	tst	r7, r0
    dd00:	d0f3      	beq.n	dcea <floor+0x9a>
    dd02:	a311      	add	r3, pc, #68	; (adr r3, dd48 <floor+0xf8>)
    dd04:	e9d3 2300 	ldrd	r2, r3, [r3]
    dd08:	f000 f8b6 	bl	de78 <__adddf3>
    dd0c:	2200      	movs	r2, #0
    dd0e:	2300      	movs	r3, #0
    dd10:	f000 fcf8 	bl	e704 <__aeabi_dcmpgt>
    dd14:	2800      	cmp	r0, #0
    dd16:	d0bf      	beq.n	dc98 <floor+0x48>
    dd18:	2c00      	cmp	r4, #0
    dd1a:	da02      	bge.n	dd22 <floor+0xd2>
    dd1c:	2e14      	cmp	r6, #20
    dd1e:	d103      	bne.n	dd28 <floor+0xd8>
    dd20:	3401      	adds	r4, #1
    dd22:	ea25 0507 	bic.w	r5, r5, r7
    dd26:	e7b7      	b.n	dc98 <floor+0x48>
    dd28:	2301      	movs	r3, #1
    dd2a:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
    dd2e:	fa03 f606 	lsl.w	r6, r3, r6
    dd32:	4435      	add	r5, r6
    dd34:	4545      	cmp	r5, r8
    dd36:	bf38      	it	cc
    dd38:	18e4      	addcc	r4, r4, r3
    dd3a:	e7f2      	b.n	dd22 <floor+0xd2>
    dd3c:	2500      	movs	r5, #0
    dd3e:	462c      	mov	r4, r5
    dd40:	e7aa      	b.n	dc98 <floor+0x48>
    dd42:	bf00      	nop
    dd44:	f3af 8000 	nop.w
    dd48:	8800759c 	.word	0x8800759c
    dd4c:	7e37e43c 	.word	0x7e37e43c
    dd50:	bff00000 	.word	0xbff00000
    dd54:	000fffff 	.word	0x000fffff

0000dd58 <matherr>:
    dd58:	2000      	movs	r0, #0
    dd5a:	4770      	bx	lr
    dd5c:	0000      	movs	r0, r0
	...

0000dd60 <scalbn>:
    dd60:	b570      	push	{r4, r5, r6, lr}
    dd62:	ec55 4b10 	vmov	r4, r5, d0
    dd66:	f3c5 520a 	ubfx	r2, r5, #20, #11
    dd6a:	4606      	mov	r6, r0
    dd6c:	462b      	mov	r3, r5
    dd6e:	b9aa      	cbnz	r2, dd9c <scalbn+0x3c>
    dd70:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
    dd74:	4323      	orrs	r3, r4
    dd76:	d03b      	beq.n	ddf0 <scalbn+0x90>
    dd78:	4b31      	ldr	r3, [pc, #196]	; (de40 <scalbn+0xe0>)
    dd7a:	4629      	mov	r1, r5
    dd7c:	2200      	movs	r2, #0
    dd7e:	ee10 0a10 	vmov	r0, s0
    dd82:	f000 fa2f 	bl	e1e4 <__aeabi_dmul>
    dd86:	4b2f      	ldr	r3, [pc, #188]	; (de44 <scalbn+0xe4>)
    dd88:	429e      	cmp	r6, r3
    dd8a:	4604      	mov	r4, r0
    dd8c:	460d      	mov	r5, r1
    dd8e:	da12      	bge.n	ddb6 <scalbn+0x56>
    dd90:	a327      	add	r3, pc, #156	; (adr r3, de30 <scalbn+0xd0>)
    dd92:	e9d3 2300 	ldrd	r2, r3, [r3]
    dd96:	f000 fa25 	bl	e1e4 <__aeabi_dmul>
    dd9a:	e009      	b.n	ddb0 <scalbn+0x50>
    dd9c:	f240 71ff 	movw	r1, #2047	; 0x7ff
    dda0:	428a      	cmp	r2, r1
    dda2:	d10c      	bne.n	ddbe <scalbn+0x5e>
    dda4:	ee10 2a10 	vmov	r2, s0
    dda8:	4620      	mov	r0, r4
    ddaa:	4629      	mov	r1, r5
    ddac:	f000 f864 	bl	de78 <__adddf3>
    ddb0:	4604      	mov	r4, r0
    ddb2:	460d      	mov	r5, r1
    ddb4:	e01c      	b.n	ddf0 <scalbn+0x90>
    ddb6:	f3c1 520a 	ubfx	r2, r1, #20, #11
    ddba:	460b      	mov	r3, r1
    ddbc:	3a36      	subs	r2, #54	; 0x36
    ddbe:	4432      	add	r2, r6
    ddc0:	f240 71fe 	movw	r1, #2046	; 0x7fe
    ddc4:	428a      	cmp	r2, r1
    ddc6:	dd0b      	ble.n	dde0 <scalbn+0x80>
    ddc8:	ec45 4b11 	vmov	d1, r4, r5
    ddcc:	ed9f 0b1a 	vldr	d0, [pc, #104]	; de38 <scalbn+0xd8>
    ddd0:	f000 f83c 	bl	de4c <copysign>
    ddd4:	a318      	add	r3, pc, #96	; (adr r3, de38 <scalbn+0xd8>)
    ddd6:	e9d3 2300 	ldrd	r2, r3, [r3]
    ddda:	ec51 0b10 	vmov	r0, r1, d0
    ddde:	e7da      	b.n	dd96 <scalbn+0x36>
    dde0:	2a00      	cmp	r2, #0
    dde2:	dd08      	ble.n	ddf6 <scalbn+0x96>
    dde4:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
    dde8:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
    ddec:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
    ddf0:	ec45 4b10 	vmov	d0, r4, r5
    ddf4:	bd70      	pop	{r4, r5, r6, pc}
    ddf6:	f112 0f35 	cmn.w	r2, #53	; 0x35
    ddfa:	da0d      	bge.n	de18 <scalbn+0xb8>
    ddfc:	f24c 3350 	movw	r3, #50000	; 0xc350
    de00:	429e      	cmp	r6, r3
    de02:	ec45 4b11 	vmov	d1, r4, r5
    de06:	dce1      	bgt.n	ddcc <scalbn+0x6c>
    de08:	ed9f 0b09 	vldr	d0, [pc, #36]	; de30 <scalbn+0xd0>
    de0c:	f000 f81e 	bl	de4c <copysign>
    de10:	a307      	add	r3, pc, #28	; (adr r3, de30 <scalbn+0xd0>)
    de12:	e9d3 2300 	ldrd	r2, r3, [r3]
    de16:	e7e0      	b.n	ddda <scalbn+0x7a>
    de18:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
    de1c:	3236      	adds	r2, #54	; 0x36
    de1e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
    de22:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
    de26:	4620      	mov	r0, r4
    de28:	4629      	mov	r1, r5
    de2a:	2200      	movs	r2, #0
    de2c:	4b06      	ldr	r3, [pc, #24]	; (de48 <scalbn+0xe8>)
    de2e:	e7b2      	b.n	dd96 <scalbn+0x36>
    de30:	c2f8f359 	.word	0xc2f8f359
    de34:	01a56e1f 	.word	0x01a56e1f
    de38:	8800759c 	.word	0x8800759c
    de3c:	7e37e43c 	.word	0x7e37e43c
    de40:	43500000 	.word	0x43500000
    de44:	ffff3cb0 	.word	0xffff3cb0
    de48:	3c900000 	.word	0x3c900000

0000de4c <copysign>:
    de4c:	ec51 0b10 	vmov	r0, r1, d0
    de50:	ee11 0a90 	vmov	r0, s3
    de54:	ee10 2a10 	vmov	r2, s0
    de58:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    de5c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
    de60:	ea41 0300 	orr.w	r3, r1, r0
    de64:	ec43 2b10 	vmov	d0, r2, r3
    de68:	4770      	bx	lr
	...

0000de6c <__aeabi_drsub>:
    de6c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
    de70:	e002      	b.n	de78 <__adddf3>
    de72:	bf00      	nop

0000de74 <__aeabi_dsub>:
    de74:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0000de78 <__adddf3>:
    de78:	b530      	push	{r4, r5, lr}
    de7a:	ea4f 0441 	mov.w	r4, r1, lsl #1
    de7e:	ea4f 0543 	mov.w	r5, r3, lsl #1
    de82:	ea94 0f05 	teq	r4, r5
    de86:	bf08      	it	eq
    de88:	ea90 0f02 	teqeq	r0, r2
    de8c:	bf1f      	itttt	ne
    de8e:	ea54 0c00 	orrsne.w	ip, r4, r0
    de92:	ea55 0c02 	orrsne.w	ip, r5, r2
    de96:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
    de9a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    de9e:	f000 80e2 	beq.w	e066 <__adddf3+0x1ee>
    dea2:	ea4f 5454 	mov.w	r4, r4, lsr #21
    dea6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
    deaa:	bfb8      	it	lt
    deac:	426d      	neglt	r5, r5
    deae:	dd0c      	ble.n	deca <__adddf3+0x52>
    deb0:	442c      	add	r4, r5
    deb2:	ea80 0202 	eor.w	r2, r0, r2
    deb6:	ea81 0303 	eor.w	r3, r1, r3
    deba:	ea82 0000 	eor.w	r0, r2, r0
    debe:	ea83 0101 	eor.w	r1, r3, r1
    dec2:	ea80 0202 	eor.w	r2, r0, r2
    dec6:	ea81 0303 	eor.w	r3, r1, r3
    deca:	2d36      	cmp	r5, #54	; 0x36
    decc:	bf88      	it	hi
    dece:	bd30      	pophi	{r4, r5, pc}
    ded0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    ded4:	ea4f 3101 	mov.w	r1, r1, lsl #12
    ded8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
    dedc:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
    dee0:	d002      	beq.n	dee8 <__adddf3+0x70>
    dee2:	4240      	negs	r0, r0
    dee4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    dee8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
    deec:	ea4f 3303 	mov.w	r3, r3, lsl #12
    def0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
    def4:	d002      	beq.n	defc <__adddf3+0x84>
    def6:	4252      	negs	r2, r2
    def8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
    defc:	ea94 0f05 	teq	r4, r5
    df00:	f000 80a7 	beq.w	e052 <__adddf3+0x1da>
    df04:	f1a4 0401 	sub.w	r4, r4, #1
    df08:	f1d5 0e20 	rsbs	lr, r5, #32
    df0c:	db0d      	blt.n	df2a <__adddf3+0xb2>
    df0e:	fa02 fc0e 	lsl.w	ip, r2, lr
    df12:	fa22 f205 	lsr.w	r2, r2, r5
    df16:	1880      	adds	r0, r0, r2
    df18:	f141 0100 	adc.w	r1, r1, #0
    df1c:	fa03 f20e 	lsl.w	r2, r3, lr
    df20:	1880      	adds	r0, r0, r2
    df22:	fa43 f305 	asr.w	r3, r3, r5
    df26:	4159      	adcs	r1, r3
    df28:	e00e      	b.n	df48 <__adddf3+0xd0>
    df2a:	f1a5 0520 	sub.w	r5, r5, #32
    df2e:	f10e 0e20 	add.w	lr, lr, #32
    df32:	2a01      	cmp	r2, #1
    df34:	fa03 fc0e 	lsl.w	ip, r3, lr
    df38:	bf28      	it	cs
    df3a:	f04c 0c02 	orrcs.w	ip, ip, #2
    df3e:	fa43 f305 	asr.w	r3, r3, r5
    df42:	18c0      	adds	r0, r0, r3
    df44:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
    df48:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    df4c:	d507      	bpl.n	df5e <__adddf3+0xe6>
    df4e:	f04f 0e00 	mov.w	lr, #0
    df52:	f1dc 0c00 	rsbs	ip, ip, #0
    df56:	eb7e 0000 	sbcs.w	r0, lr, r0
    df5a:	eb6e 0101 	sbc.w	r1, lr, r1
    df5e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
    df62:	d31b      	bcc.n	df9c <__adddf3+0x124>
    df64:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
    df68:	d30c      	bcc.n	df84 <__adddf3+0x10c>
    df6a:	0849      	lsrs	r1, r1, #1
    df6c:	ea5f 0030 	movs.w	r0, r0, rrx
    df70:	ea4f 0c3c 	mov.w	ip, ip, rrx
    df74:	f104 0401 	add.w	r4, r4, #1
    df78:	ea4f 5244 	mov.w	r2, r4, lsl #21
    df7c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
    df80:	f080 809a 	bcs.w	e0b8 <__adddf3+0x240>
    df84:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
    df88:	bf08      	it	eq
    df8a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    df8e:	f150 0000 	adcs.w	r0, r0, #0
    df92:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    df96:	ea41 0105 	orr.w	r1, r1, r5
    df9a:	bd30      	pop	{r4, r5, pc}
    df9c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
    dfa0:	4140      	adcs	r0, r0
    dfa2:	eb41 0101 	adc.w	r1, r1, r1
    dfa6:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    dfaa:	f1a4 0401 	sub.w	r4, r4, #1
    dfae:	d1e9      	bne.n	df84 <__adddf3+0x10c>
    dfb0:	f091 0f00 	teq	r1, #0
    dfb4:	bf04      	itt	eq
    dfb6:	4601      	moveq	r1, r0
    dfb8:	2000      	moveq	r0, #0
    dfba:	fab1 f381 	clz	r3, r1
    dfbe:	bf08      	it	eq
    dfc0:	3320      	addeq	r3, #32
    dfc2:	f1a3 030b 	sub.w	r3, r3, #11
    dfc6:	f1b3 0220 	subs.w	r2, r3, #32
    dfca:	da0c      	bge.n	dfe6 <__adddf3+0x16e>
    dfcc:	320c      	adds	r2, #12
    dfce:	dd08      	ble.n	dfe2 <__adddf3+0x16a>
    dfd0:	f102 0c14 	add.w	ip, r2, #20
    dfd4:	f1c2 020c 	rsb	r2, r2, #12
    dfd8:	fa01 f00c 	lsl.w	r0, r1, ip
    dfdc:	fa21 f102 	lsr.w	r1, r1, r2
    dfe0:	e00c      	b.n	dffc <__adddf3+0x184>
    dfe2:	f102 0214 	add.w	r2, r2, #20
    dfe6:	bfd8      	it	le
    dfe8:	f1c2 0c20 	rsble	ip, r2, #32
    dfec:	fa01 f102 	lsl.w	r1, r1, r2
    dff0:	fa20 fc0c 	lsr.w	ip, r0, ip
    dff4:	bfdc      	itt	le
    dff6:	ea41 010c 	orrle.w	r1, r1, ip
    dffa:	4090      	lslle	r0, r2
    dffc:	1ae4      	subs	r4, r4, r3
    dffe:	bfa2      	ittt	ge
    e000:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
    e004:	4329      	orrge	r1, r5
    e006:	bd30      	popge	{r4, r5, pc}
    e008:	ea6f 0404 	mvn.w	r4, r4
    e00c:	3c1f      	subs	r4, #31
    e00e:	da1c      	bge.n	e04a <__adddf3+0x1d2>
    e010:	340c      	adds	r4, #12
    e012:	dc0e      	bgt.n	e032 <__adddf3+0x1ba>
    e014:	f104 0414 	add.w	r4, r4, #20
    e018:	f1c4 0220 	rsb	r2, r4, #32
    e01c:	fa20 f004 	lsr.w	r0, r0, r4
    e020:	fa01 f302 	lsl.w	r3, r1, r2
    e024:	ea40 0003 	orr.w	r0, r0, r3
    e028:	fa21 f304 	lsr.w	r3, r1, r4
    e02c:	ea45 0103 	orr.w	r1, r5, r3
    e030:	bd30      	pop	{r4, r5, pc}
    e032:	f1c4 040c 	rsb	r4, r4, #12
    e036:	f1c4 0220 	rsb	r2, r4, #32
    e03a:	fa20 f002 	lsr.w	r0, r0, r2
    e03e:	fa01 f304 	lsl.w	r3, r1, r4
    e042:	ea40 0003 	orr.w	r0, r0, r3
    e046:	4629      	mov	r1, r5
    e048:	bd30      	pop	{r4, r5, pc}
    e04a:	fa21 f004 	lsr.w	r0, r1, r4
    e04e:	4629      	mov	r1, r5
    e050:	bd30      	pop	{r4, r5, pc}
    e052:	f094 0f00 	teq	r4, #0
    e056:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
    e05a:	bf06      	itte	eq
    e05c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
    e060:	3401      	addeq	r4, #1
    e062:	3d01      	subne	r5, #1
    e064:	e74e      	b.n	df04 <__adddf3+0x8c>
    e066:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    e06a:	bf18      	it	ne
    e06c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    e070:	d029      	beq.n	e0c6 <__adddf3+0x24e>
    e072:	ea94 0f05 	teq	r4, r5
    e076:	bf08      	it	eq
    e078:	ea90 0f02 	teqeq	r0, r2
    e07c:	d005      	beq.n	e08a <__adddf3+0x212>
    e07e:	ea54 0c00 	orrs.w	ip, r4, r0
    e082:	bf04      	itt	eq
    e084:	4619      	moveq	r1, r3
    e086:	4610      	moveq	r0, r2
    e088:	bd30      	pop	{r4, r5, pc}
    e08a:	ea91 0f03 	teq	r1, r3
    e08e:	bf1e      	ittt	ne
    e090:	2100      	movne	r1, #0
    e092:	2000      	movne	r0, #0
    e094:	bd30      	popne	{r4, r5, pc}
    e096:	ea5f 5c54 	movs.w	ip, r4, lsr #21
    e09a:	d105      	bne.n	e0a8 <__adddf3+0x230>
    e09c:	0040      	lsls	r0, r0, #1
    e09e:	4149      	adcs	r1, r1
    e0a0:	bf28      	it	cs
    e0a2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
    e0a6:	bd30      	pop	{r4, r5, pc}
    e0a8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
    e0ac:	bf3c      	itt	cc
    e0ae:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
    e0b2:	bd30      	popcc	{r4, r5, pc}
    e0b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    e0b8:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
    e0bc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    e0c0:	f04f 0000 	mov.w	r0, #0
    e0c4:	bd30      	pop	{r4, r5, pc}
    e0c6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    e0ca:	bf1a      	itte	ne
    e0cc:	4619      	movne	r1, r3
    e0ce:	4610      	movne	r0, r2
    e0d0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
    e0d4:	bf1c      	itt	ne
    e0d6:	460b      	movne	r3, r1
    e0d8:	4602      	movne	r2, r0
    e0da:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    e0de:	bf06      	itte	eq
    e0e0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
    e0e4:	ea91 0f03 	teqeq	r1, r3
    e0e8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
    e0ec:	bd30      	pop	{r4, r5, pc}
    e0ee:	bf00      	nop

0000e0f0 <__aeabi_ui2d>:
    e0f0:	f090 0f00 	teq	r0, #0
    e0f4:	bf04      	itt	eq
    e0f6:	2100      	moveq	r1, #0
    e0f8:	4770      	bxeq	lr
    e0fa:	b530      	push	{r4, r5, lr}
    e0fc:	f44f 6480 	mov.w	r4, #1024	; 0x400
    e100:	f104 0432 	add.w	r4, r4, #50	; 0x32
    e104:	f04f 0500 	mov.w	r5, #0
    e108:	f04f 0100 	mov.w	r1, #0
    e10c:	e750      	b.n	dfb0 <__adddf3+0x138>
    e10e:	bf00      	nop

0000e110 <__aeabi_i2d>:
    e110:	f090 0f00 	teq	r0, #0
    e114:	bf04      	itt	eq
    e116:	2100      	moveq	r1, #0
    e118:	4770      	bxeq	lr
    e11a:	b530      	push	{r4, r5, lr}
    e11c:	f44f 6480 	mov.w	r4, #1024	; 0x400
    e120:	f104 0432 	add.w	r4, r4, #50	; 0x32
    e124:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
    e128:	bf48      	it	mi
    e12a:	4240      	negmi	r0, r0
    e12c:	f04f 0100 	mov.w	r1, #0
    e130:	e73e      	b.n	dfb0 <__adddf3+0x138>
    e132:	bf00      	nop

0000e134 <__aeabi_f2d>:
    e134:	0042      	lsls	r2, r0, #1
    e136:	ea4f 01e2 	mov.w	r1, r2, asr #3
    e13a:	ea4f 0131 	mov.w	r1, r1, rrx
    e13e:	ea4f 7002 	mov.w	r0, r2, lsl #28
    e142:	bf1f      	itttt	ne
    e144:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
    e148:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
    e14c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
    e150:	4770      	bxne	lr
    e152:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
    e156:	bf08      	it	eq
    e158:	4770      	bxeq	lr
    e15a:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
    e15e:	bf04      	itt	eq
    e160:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
    e164:	4770      	bxeq	lr
    e166:	b530      	push	{r4, r5, lr}
    e168:	f44f 7460 	mov.w	r4, #896	; 0x380
    e16c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    e170:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    e174:	e71c      	b.n	dfb0 <__adddf3+0x138>
    e176:	bf00      	nop

0000e178 <__aeabi_ul2d>:
    e178:	ea50 0201 	orrs.w	r2, r0, r1
    e17c:	bf08      	it	eq
    e17e:	4770      	bxeq	lr
    e180:	b530      	push	{r4, r5, lr}
    e182:	f04f 0500 	mov.w	r5, #0
    e186:	e00a      	b.n	e19e <__aeabi_l2d+0x16>

0000e188 <__aeabi_l2d>:
    e188:	ea50 0201 	orrs.w	r2, r0, r1
    e18c:	bf08      	it	eq
    e18e:	4770      	bxeq	lr
    e190:	b530      	push	{r4, r5, lr}
    e192:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
    e196:	d502      	bpl.n	e19e <__aeabi_l2d+0x16>
    e198:	4240      	negs	r0, r0
    e19a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    e19e:	f44f 6480 	mov.w	r4, #1024	; 0x400
    e1a2:	f104 0432 	add.w	r4, r4, #50	; 0x32
    e1a6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
    e1aa:	f43f aed8 	beq.w	df5e <__adddf3+0xe6>
    e1ae:	f04f 0203 	mov.w	r2, #3
    e1b2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    e1b6:	bf18      	it	ne
    e1b8:	3203      	addne	r2, #3
    e1ba:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    e1be:	bf18      	it	ne
    e1c0:	3203      	addne	r2, #3
    e1c2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
    e1c6:	f1c2 0320 	rsb	r3, r2, #32
    e1ca:	fa00 fc03 	lsl.w	ip, r0, r3
    e1ce:	fa20 f002 	lsr.w	r0, r0, r2
    e1d2:	fa01 fe03 	lsl.w	lr, r1, r3
    e1d6:	ea40 000e 	orr.w	r0, r0, lr
    e1da:	fa21 f102 	lsr.w	r1, r1, r2
    e1de:	4414      	add	r4, r2
    e1e0:	e6bd      	b.n	df5e <__adddf3+0xe6>
    e1e2:	bf00      	nop

0000e1e4 <__aeabi_dmul>:
    e1e4:	b570      	push	{r4, r5, r6, lr}
    e1e6:	f04f 0cff 	mov.w	ip, #255	; 0xff
    e1ea:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    e1ee:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    e1f2:	bf1d      	ittte	ne
    e1f4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    e1f8:	ea94 0f0c 	teqne	r4, ip
    e1fc:	ea95 0f0c 	teqne	r5, ip
    e200:	f000 f8de 	bleq	e3c0 <__aeabi_dmul+0x1dc>
    e204:	442c      	add	r4, r5
    e206:	ea81 0603 	eor.w	r6, r1, r3
    e20a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
    e20e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
    e212:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
    e216:	bf18      	it	ne
    e218:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
    e21c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    e220:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    e224:	d038      	beq.n	e298 <__aeabi_dmul+0xb4>
    e226:	fba0 ce02 	umull	ip, lr, r0, r2
    e22a:	f04f 0500 	mov.w	r5, #0
    e22e:	fbe1 e502 	umlal	lr, r5, r1, r2
    e232:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
    e236:	fbe0 e503 	umlal	lr, r5, r0, r3
    e23a:	f04f 0600 	mov.w	r6, #0
    e23e:	fbe1 5603 	umlal	r5, r6, r1, r3
    e242:	f09c 0f00 	teq	ip, #0
    e246:	bf18      	it	ne
    e248:	f04e 0e01 	orrne.w	lr, lr, #1
    e24c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
    e250:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
    e254:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
    e258:	d204      	bcs.n	e264 <__aeabi_dmul+0x80>
    e25a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
    e25e:	416d      	adcs	r5, r5
    e260:	eb46 0606 	adc.w	r6, r6, r6
    e264:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
    e268:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
    e26c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
    e270:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
    e274:	ea4f 2ece 	mov.w	lr, lr, lsl #11
    e278:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    e27c:	bf88      	it	hi
    e27e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    e282:	d81e      	bhi.n	e2c2 <__aeabi_dmul+0xde>
    e284:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
    e288:	bf08      	it	eq
    e28a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
    e28e:	f150 0000 	adcs.w	r0, r0, #0
    e292:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    e296:	bd70      	pop	{r4, r5, r6, pc}
    e298:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
    e29c:	ea46 0101 	orr.w	r1, r6, r1
    e2a0:	ea40 0002 	orr.w	r0, r0, r2
    e2a4:	ea81 0103 	eor.w	r1, r1, r3
    e2a8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
    e2ac:	bfc2      	ittt	gt
    e2ae:	ebd4 050c 	rsbsgt	r5, r4, ip
    e2b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    e2b6:	bd70      	popgt	{r4, r5, r6, pc}
    e2b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    e2bc:	f04f 0e00 	mov.w	lr, #0
    e2c0:	3c01      	subs	r4, #1
    e2c2:	f300 80ab 	bgt.w	e41c <__aeabi_dmul+0x238>
    e2c6:	f114 0f36 	cmn.w	r4, #54	; 0x36
    e2ca:	bfde      	ittt	le
    e2cc:	2000      	movle	r0, #0
    e2ce:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
    e2d2:	bd70      	pople	{r4, r5, r6, pc}
    e2d4:	f1c4 0400 	rsb	r4, r4, #0
    e2d8:	3c20      	subs	r4, #32
    e2da:	da35      	bge.n	e348 <__aeabi_dmul+0x164>
    e2dc:	340c      	adds	r4, #12
    e2de:	dc1b      	bgt.n	e318 <__aeabi_dmul+0x134>
    e2e0:	f104 0414 	add.w	r4, r4, #20
    e2e4:	f1c4 0520 	rsb	r5, r4, #32
    e2e8:	fa00 f305 	lsl.w	r3, r0, r5
    e2ec:	fa20 f004 	lsr.w	r0, r0, r4
    e2f0:	fa01 f205 	lsl.w	r2, r1, r5
    e2f4:	ea40 0002 	orr.w	r0, r0, r2
    e2f8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
    e2fc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    e300:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    e304:	fa21 f604 	lsr.w	r6, r1, r4
    e308:	eb42 0106 	adc.w	r1, r2, r6
    e30c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    e310:	bf08      	it	eq
    e312:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    e316:	bd70      	pop	{r4, r5, r6, pc}
    e318:	f1c4 040c 	rsb	r4, r4, #12
    e31c:	f1c4 0520 	rsb	r5, r4, #32
    e320:	fa00 f304 	lsl.w	r3, r0, r4
    e324:	fa20 f005 	lsr.w	r0, r0, r5
    e328:	fa01 f204 	lsl.w	r2, r1, r4
    e32c:	ea40 0002 	orr.w	r0, r0, r2
    e330:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    e334:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    e338:	f141 0100 	adc.w	r1, r1, #0
    e33c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    e340:	bf08      	it	eq
    e342:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    e346:	bd70      	pop	{r4, r5, r6, pc}
    e348:	f1c4 0520 	rsb	r5, r4, #32
    e34c:	fa00 f205 	lsl.w	r2, r0, r5
    e350:	ea4e 0e02 	orr.w	lr, lr, r2
    e354:	fa20 f304 	lsr.w	r3, r0, r4
    e358:	fa01 f205 	lsl.w	r2, r1, r5
    e35c:	ea43 0302 	orr.w	r3, r3, r2
    e360:	fa21 f004 	lsr.w	r0, r1, r4
    e364:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    e368:	fa21 f204 	lsr.w	r2, r1, r4
    e36c:	ea20 0002 	bic.w	r0, r0, r2
    e370:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
    e374:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    e378:	bf08      	it	eq
    e37a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    e37e:	bd70      	pop	{r4, r5, r6, pc}
    e380:	f094 0f00 	teq	r4, #0
    e384:	d10f      	bne.n	e3a6 <__aeabi_dmul+0x1c2>
    e386:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
    e38a:	0040      	lsls	r0, r0, #1
    e38c:	eb41 0101 	adc.w	r1, r1, r1
    e390:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    e394:	bf08      	it	eq
    e396:	3c01      	subeq	r4, #1
    e398:	d0f7      	beq.n	e38a <__aeabi_dmul+0x1a6>
    e39a:	ea41 0106 	orr.w	r1, r1, r6
    e39e:	f095 0f00 	teq	r5, #0
    e3a2:	bf18      	it	ne
    e3a4:	4770      	bxne	lr
    e3a6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
    e3aa:	0052      	lsls	r2, r2, #1
    e3ac:	eb43 0303 	adc.w	r3, r3, r3
    e3b0:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
    e3b4:	bf08      	it	eq
    e3b6:	3d01      	subeq	r5, #1
    e3b8:	d0f7      	beq.n	e3aa <__aeabi_dmul+0x1c6>
    e3ba:	ea43 0306 	orr.w	r3, r3, r6
    e3be:	4770      	bx	lr
    e3c0:	ea94 0f0c 	teq	r4, ip
    e3c4:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    e3c8:	bf18      	it	ne
    e3ca:	ea95 0f0c 	teqne	r5, ip
    e3ce:	d00c      	beq.n	e3ea <__aeabi_dmul+0x206>
    e3d0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    e3d4:	bf18      	it	ne
    e3d6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    e3da:	d1d1      	bne.n	e380 <__aeabi_dmul+0x19c>
    e3dc:	ea81 0103 	eor.w	r1, r1, r3
    e3e0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    e3e4:	f04f 0000 	mov.w	r0, #0
    e3e8:	bd70      	pop	{r4, r5, r6, pc}
    e3ea:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    e3ee:	bf06      	itte	eq
    e3f0:	4610      	moveq	r0, r2
    e3f2:	4619      	moveq	r1, r3
    e3f4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    e3f8:	d019      	beq.n	e42e <__aeabi_dmul+0x24a>
    e3fa:	ea94 0f0c 	teq	r4, ip
    e3fe:	d102      	bne.n	e406 <__aeabi_dmul+0x222>
    e400:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
    e404:	d113      	bne.n	e42e <__aeabi_dmul+0x24a>
    e406:	ea95 0f0c 	teq	r5, ip
    e40a:	d105      	bne.n	e418 <__aeabi_dmul+0x234>
    e40c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
    e410:	bf1c      	itt	ne
    e412:	4610      	movne	r0, r2
    e414:	4619      	movne	r1, r3
    e416:	d10a      	bne.n	e42e <__aeabi_dmul+0x24a>
    e418:	ea81 0103 	eor.w	r1, r1, r3
    e41c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    e420:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    e424:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    e428:	f04f 0000 	mov.w	r0, #0
    e42c:	bd70      	pop	{r4, r5, r6, pc}
    e42e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    e432:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
    e436:	bd70      	pop	{r4, r5, r6, pc}

0000e438 <__aeabi_ddiv>:
    e438:	b570      	push	{r4, r5, r6, lr}
    e43a:	f04f 0cff 	mov.w	ip, #255	; 0xff
    e43e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    e442:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    e446:	bf1d      	ittte	ne
    e448:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    e44c:	ea94 0f0c 	teqne	r4, ip
    e450:	ea95 0f0c 	teqne	r5, ip
    e454:	f000 f8a7 	bleq	e5a6 <__aeabi_ddiv+0x16e>
    e458:	eba4 0405 	sub.w	r4, r4, r5
    e45c:	ea81 0e03 	eor.w	lr, r1, r3
    e460:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    e464:	ea4f 3101 	mov.w	r1, r1, lsl #12
    e468:	f000 8088 	beq.w	e57c <__aeabi_ddiv+0x144>
    e46c:	ea4f 3303 	mov.w	r3, r3, lsl #12
    e470:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
    e474:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
    e478:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
    e47c:	ea4f 2202 	mov.w	r2, r2, lsl #8
    e480:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
    e484:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
    e488:	ea4f 2600 	mov.w	r6, r0, lsl #8
    e48c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
    e490:	429d      	cmp	r5, r3
    e492:	bf08      	it	eq
    e494:	4296      	cmpeq	r6, r2
    e496:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
    e49a:	f504 7440 	add.w	r4, r4, #768	; 0x300
    e49e:	d202      	bcs.n	e4a6 <__aeabi_ddiv+0x6e>
    e4a0:	085b      	lsrs	r3, r3, #1
    e4a2:	ea4f 0232 	mov.w	r2, r2, rrx
    e4a6:	1ab6      	subs	r6, r6, r2
    e4a8:	eb65 0503 	sbc.w	r5, r5, r3
    e4ac:	085b      	lsrs	r3, r3, #1
    e4ae:	ea4f 0232 	mov.w	r2, r2, rrx
    e4b2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
    e4b6:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
    e4ba:	ebb6 0e02 	subs.w	lr, r6, r2
    e4be:	eb75 0e03 	sbcs.w	lr, r5, r3
    e4c2:	bf22      	ittt	cs
    e4c4:	1ab6      	subcs	r6, r6, r2
    e4c6:	4675      	movcs	r5, lr
    e4c8:	ea40 000c 	orrcs.w	r0, r0, ip
    e4cc:	085b      	lsrs	r3, r3, #1
    e4ce:	ea4f 0232 	mov.w	r2, r2, rrx
    e4d2:	ebb6 0e02 	subs.w	lr, r6, r2
    e4d6:	eb75 0e03 	sbcs.w	lr, r5, r3
    e4da:	bf22      	ittt	cs
    e4dc:	1ab6      	subcs	r6, r6, r2
    e4de:	4675      	movcs	r5, lr
    e4e0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
    e4e4:	085b      	lsrs	r3, r3, #1
    e4e6:	ea4f 0232 	mov.w	r2, r2, rrx
    e4ea:	ebb6 0e02 	subs.w	lr, r6, r2
    e4ee:	eb75 0e03 	sbcs.w	lr, r5, r3
    e4f2:	bf22      	ittt	cs
    e4f4:	1ab6      	subcs	r6, r6, r2
    e4f6:	4675      	movcs	r5, lr
    e4f8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
    e4fc:	085b      	lsrs	r3, r3, #1
    e4fe:	ea4f 0232 	mov.w	r2, r2, rrx
    e502:	ebb6 0e02 	subs.w	lr, r6, r2
    e506:	eb75 0e03 	sbcs.w	lr, r5, r3
    e50a:	bf22      	ittt	cs
    e50c:	1ab6      	subcs	r6, r6, r2
    e50e:	4675      	movcs	r5, lr
    e510:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
    e514:	ea55 0e06 	orrs.w	lr, r5, r6
    e518:	d018      	beq.n	e54c <__aeabi_ddiv+0x114>
    e51a:	ea4f 1505 	mov.w	r5, r5, lsl #4
    e51e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
    e522:	ea4f 1606 	mov.w	r6, r6, lsl #4
    e526:	ea4f 03c3 	mov.w	r3, r3, lsl #3
    e52a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
    e52e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
    e532:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
    e536:	d1c0      	bne.n	e4ba <__aeabi_ddiv+0x82>
    e538:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    e53c:	d10b      	bne.n	e556 <__aeabi_ddiv+0x11e>
    e53e:	ea41 0100 	orr.w	r1, r1, r0
    e542:	f04f 0000 	mov.w	r0, #0
    e546:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
    e54a:	e7b6      	b.n	e4ba <__aeabi_ddiv+0x82>
    e54c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    e550:	bf04      	itt	eq
    e552:	4301      	orreq	r1, r0
    e554:	2000      	moveq	r0, #0
    e556:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    e55a:	bf88      	it	hi
    e55c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    e560:	f63f aeaf 	bhi.w	e2c2 <__aeabi_dmul+0xde>
    e564:	ebb5 0c03 	subs.w	ip, r5, r3
    e568:	bf04      	itt	eq
    e56a:	ebb6 0c02 	subseq.w	ip, r6, r2
    e56e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    e572:	f150 0000 	adcs.w	r0, r0, #0
    e576:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    e57a:	bd70      	pop	{r4, r5, r6, pc}
    e57c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
    e580:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
    e584:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
    e588:	bfc2      	ittt	gt
    e58a:	ebd4 050c 	rsbsgt	r5, r4, ip
    e58e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    e592:	bd70      	popgt	{r4, r5, r6, pc}
    e594:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    e598:	f04f 0e00 	mov.w	lr, #0
    e59c:	3c01      	subs	r4, #1
    e59e:	e690      	b.n	e2c2 <__aeabi_dmul+0xde>
    e5a0:	ea45 0e06 	orr.w	lr, r5, r6
    e5a4:	e68d      	b.n	e2c2 <__aeabi_dmul+0xde>
    e5a6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    e5aa:	ea94 0f0c 	teq	r4, ip
    e5ae:	bf08      	it	eq
    e5b0:	ea95 0f0c 	teqeq	r5, ip
    e5b4:	f43f af3b 	beq.w	e42e <__aeabi_dmul+0x24a>
    e5b8:	ea94 0f0c 	teq	r4, ip
    e5bc:	d10a      	bne.n	e5d4 <__aeabi_ddiv+0x19c>
    e5be:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    e5c2:	f47f af34 	bne.w	e42e <__aeabi_dmul+0x24a>
    e5c6:	ea95 0f0c 	teq	r5, ip
    e5ca:	f47f af25 	bne.w	e418 <__aeabi_dmul+0x234>
    e5ce:	4610      	mov	r0, r2
    e5d0:	4619      	mov	r1, r3
    e5d2:	e72c      	b.n	e42e <__aeabi_dmul+0x24a>
    e5d4:	ea95 0f0c 	teq	r5, ip
    e5d8:	d106      	bne.n	e5e8 <__aeabi_ddiv+0x1b0>
    e5da:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    e5de:	f43f aefd 	beq.w	e3dc <__aeabi_dmul+0x1f8>
    e5e2:	4610      	mov	r0, r2
    e5e4:	4619      	mov	r1, r3
    e5e6:	e722      	b.n	e42e <__aeabi_dmul+0x24a>
    e5e8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    e5ec:	bf18      	it	ne
    e5ee:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    e5f2:	f47f aec5 	bne.w	e380 <__aeabi_dmul+0x19c>
    e5f6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
    e5fa:	f47f af0d 	bne.w	e418 <__aeabi_dmul+0x234>
    e5fe:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
    e602:	f47f aeeb 	bne.w	e3dc <__aeabi_dmul+0x1f8>
    e606:	e712      	b.n	e42e <__aeabi_dmul+0x24a>

0000e608 <__gedf2>:
    e608:	f04f 3cff 	mov.w	ip, #4294967295
    e60c:	e006      	b.n	e61c <__cmpdf2+0x4>
    e60e:	bf00      	nop

0000e610 <__ledf2>:
    e610:	f04f 0c01 	mov.w	ip, #1
    e614:	e002      	b.n	e61c <__cmpdf2+0x4>
    e616:	bf00      	nop

0000e618 <__cmpdf2>:
    e618:	f04f 0c01 	mov.w	ip, #1
    e61c:	f84d cd04 	str.w	ip, [sp, #-4]!
    e620:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    e624:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    e628:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    e62c:	bf18      	it	ne
    e62e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
    e632:	d01b      	beq.n	e66c <__cmpdf2+0x54>
    e634:	b001      	add	sp, #4
    e636:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
    e63a:	bf0c      	ite	eq
    e63c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
    e640:	ea91 0f03 	teqne	r1, r3
    e644:	bf02      	ittt	eq
    e646:	ea90 0f02 	teqeq	r0, r2
    e64a:	2000      	moveq	r0, #0
    e64c:	4770      	bxeq	lr
    e64e:	f110 0f00 	cmn.w	r0, #0
    e652:	ea91 0f03 	teq	r1, r3
    e656:	bf58      	it	pl
    e658:	4299      	cmppl	r1, r3
    e65a:	bf08      	it	eq
    e65c:	4290      	cmpeq	r0, r2
    e65e:	bf2c      	ite	cs
    e660:	17d8      	asrcs	r0, r3, #31
    e662:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
    e666:	f040 0001 	orr.w	r0, r0, #1
    e66a:	4770      	bx	lr
    e66c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    e670:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    e674:	d102      	bne.n	e67c <__cmpdf2+0x64>
    e676:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    e67a:	d107      	bne.n	e68c <__cmpdf2+0x74>
    e67c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    e680:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    e684:	d1d6      	bne.n	e634 <__cmpdf2+0x1c>
    e686:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    e68a:	d0d3      	beq.n	e634 <__cmpdf2+0x1c>
    e68c:	f85d 0b04 	ldr.w	r0, [sp], #4
    e690:	4770      	bx	lr
    e692:	bf00      	nop

0000e694 <__aeabi_cdrcmple>:
    e694:	4684      	mov	ip, r0
    e696:	4610      	mov	r0, r2
    e698:	4662      	mov	r2, ip
    e69a:	468c      	mov	ip, r1
    e69c:	4619      	mov	r1, r3
    e69e:	4663      	mov	r3, ip
    e6a0:	e000      	b.n	e6a4 <__aeabi_cdcmpeq>
    e6a2:	bf00      	nop

0000e6a4 <__aeabi_cdcmpeq>:
    e6a4:	b501      	push	{r0, lr}
    e6a6:	f7ff ffb7 	bl	e618 <__cmpdf2>
    e6aa:	2800      	cmp	r0, #0
    e6ac:	bf48      	it	mi
    e6ae:	f110 0f00 	cmnmi.w	r0, #0
    e6b2:	bd01      	pop	{r0, pc}

0000e6b4 <__aeabi_dcmpeq>:
    e6b4:	f84d ed08 	str.w	lr, [sp, #-8]!
    e6b8:	f7ff fff4 	bl	e6a4 <__aeabi_cdcmpeq>
    e6bc:	bf0c      	ite	eq
    e6be:	2001      	moveq	r0, #1
    e6c0:	2000      	movne	r0, #0
    e6c2:	f85d fb08 	ldr.w	pc, [sp], #8
    e6c6:	bf00      	nop

0000e6c8 <__aeabi_dcmplt>:
    e6c8:	f84d ed08 	str.w	lr, [sp, #-8]!
    e6cc:	f7ff ffea 	bl	e6a4 <__aeabi_cdcmpeq>
    e6d0:	bf34      	ite	cc
    e6d2:	2001      	movcc	r0, #1
    e6d4:	2000      	movcs	r0, #0
    e6d6:	f85d fb08 	ldr.w	pc, [sp], #8
    e6da:	bf00      	nop

0000e6dc <__aeabi_dcmple>:
    e6dc:	f84d ed08 	str.w	lr, [sp, #-8]!
    e6e0:	f7ff ffe0 	bl	e6a4 <__aeabi_cdcmpeq>
    e6e4:	bf94      	ite	ls
    e6e6:	2001      	movls	r0, #1
    e6e8:	2000      	movhi	r0, #0
    e6ea:	f85d fb08 	ldr.w	pc, [sp], #8
    e6ee:	bf00      	nop

0000e6f0 <__aeabi_dcmpge>:
    e6f0:	f84d ed08 	str.w	lr, [sp, #-8]!
    e6f4:	f7ff ffce 	bl	e694 <__aeabi_cdrcmple>
    e6f8:	bf94      	ite	ls
    e6fa:	2001      	movls	r0, #1
    e6fc:	2000      	movhi	r0, #0
    e6fe:	f85d fb08 	ldr.w	pc, [sp], #8
    e702:	bf00      	nop

0000e704 <__aeabi_dcmpgt>:
    e704:	f84d ed08 	str.w	lr, [sp, #-8]!
    e708:	f7ff ffc4 	bl	e694 <__aeabi_cdrcmple>
    e70c:	bf34      	ite	cc
    e70e:	2001      	movcc	r0, #1
    e710:	2000      	movcs	r0, #0
    e712:	f85d fb08 	ldr.w	pc, [sp], #8
    e716:	bf00      	nop

0000e718 <__aeabi_dcmpun>:
    e718:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    e71c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    e720:	d102      	bne.n	e728 <__aeabi_dcmpun+0x10>
    e722:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    e726:	d10a      	bne.n	e73e <__aeabi_dcmpun+0x26>
    e728:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    e72c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    e730:	d102      	bne.n	e738 <__aeabi_dcmpun+0x20>
    e732:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    e736:	d102      	bne.n	e73e <__aeabi_dcmpun+0x26>
    e738:	f04f 0000 	mov.w	r0, #0
    e73c:	4770      	bx	lr
    e73e:	f04f 0001 	mov.w	r0, #1
    e742:	4770      	bx	lr

0000e744 <__aeabi_d2iz>:
    e744:	ea4f 0241 	mov.w	r2, r1, lsl #1
    e748:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    e74c:	d215      	bcs.n	e77a <__aeabi_d2iz+0x36>
    e74e:	d511      	bpl.n	e774 <__aeabi_d2iz+0x30>
    e750:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    e754:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    e758:	d912      	bls.n	e780 <__aeabi_d2iz+0x3c>
    e75a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    e75e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    e762:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    e766:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    e76a:	fa23 f002 	lsr.w	r0, r3, r2
    e76e:	bf18      	it	ne
    e770:	4240      	negne	r0, r0
    e772:	4770      	bx	lr
    e774:	f04f 0000 	mov.w	r0, #0
    e778:	4770      	bx	lr
    e77a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    e77e:	d105      	bne.n	e78c <__aeabi_d2iz+0x48>
    e780:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
    e784:	bf08      	it	eq
    e786:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
    e78a:	4770      	bx	lr
    e78c:	f04f 0000 	mov.w	r0, #0
    e790:	4770      	bx	lr
    e792:	bf00      	nop

0000e794 <__aeabi_uldivmod>:
    e794:	b953      	cbnz	r3, e7ac <__aeabi_uldivmod+0x18>
    e796:	b94a      	cbnz	r2, e7ac <__aeabi_uldivmod+0x18>
    e798:	2900      	cmp	r1, #0
    e79a:	bf08      	it	eq
    e79c:	2800      	cmpeq	r0, #0
    e79e:	bf1c      	itt	ne
    e7a0:	f04f 31ff 	movne.w	r1, #4294967295
    e7a4:	f04f 30ff 	movne.w	r0, #4294967295
    e7a8:	f000 b972 	b.w	ea90 <__aeabi_idiv0>
    e7ac:	f1ad 0c08 	sub.w	ip, sp, #8
    e7b0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
    e7b4:	f000 f806 	bl	e7c4 <__udivmoddi4>
    e7b8:	f8dd e004 	ldr.w	lr, [sp, #4]
    e7bc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    e7c0:	b004      	add	sp, #16
    e7c2:	4770      	bx	lr

0000e7c4 <__udivmoddi4>:
    e7c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    e7c8:	9e08      	ldr	r6, [sp, #32]
    e7ca:	4604      	mov	r4, r0
    e7cc:	4688      	mov	r8, r1
    e7ce:	2b00      	cmp	r3, #0
    e7d0:	d14b      	bne.n	e86a <__udivmoddi4+0xa6>
    e7d2:	428a      	cmp	r2, r1
    e7d4:	4615      	mov	r5, r2
    e7d6:	d967      	bls.n	e8a8 <__udivmoddi4+0xe4>
    e7d8:	fab2 f282 	clz	r2, r2
    e7dc:	b14a      	cbz	r2, e7f2 <__udivmoddi4+0x2e>
    e7de:	f1c2 0720 	rsb	r7, r2, #32
    e7e2:	fa01 f302 	lsl.w	r3, r1, r2
    e7e6:	fa20 f707 	lsr.w	r7, r0, r7
    e7ea:	4095      	lsls	r5, r2
    e7ec:	ea47 0803 	orr.w	r8, r7, r3
    e7f0:	4094      	lsls	r4, r2
    e7f2:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    e7f6:	0c23      	lsrs	r3, r4, #16
    e7f8:	fbb8 f7fe 	udiv	r7, r8, lr
    e7fc:	fa1f fc85 	uxth.w	ip, r5
    e800:	fb0e 8817 	mls	r8, lr, r7, r8
    e804:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
    e808:	fb07 f10c 	mul.w	r1, r7, ip
    e80c:	4299      	cmp	r1, r3
    e80e:	d909      	bls.n	e824 <__udivmoddi4+0x60>
    e810:	18eb      	adds	r3, r5, r3
    e812:	f107 30ff 	add.w	r0, r7, #4294967295
    e816:	f080 811b 	bcs.w	ea50 <__udivmoddi4+0x28c>
    e81a:	4299      	cmp	r1, r3
    e81c:	f240 8118 	bls.w	ea50 <__udivmoddi4+0x28c>
    e820:	3f02      	subs	r7, #2
    e822:	442b      	add	r3, r5
    e824:	1a5b      	subs	r3, r3, r1
    e826:	b2a4      	uxth	r4, r4
    e828:	fbb3 f0fe 	udiv	r0, r3, lr
    e82c:	fb0e 3310 	mls	r3, lr, r0, r3
    e830:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
    e834:	fb00 fc0c 	mul.w	ip, r0, ip
    e838:	45a4      	cmp	ip, r4
    e83a:	d909      	bls.n	e850 <__udivmoddi4+0x8c>
    e83c:	192c      	adds	r4, r5, r4
    e83e:	f100 33ff 	add.w	r3, r0, #4294967295
    e842:	f080 8107 	bcs.w	ea54 <__udivmoddi4+0x290>
    e846:	45a4      	cmp	ip, r4
    e848:	f240 8104 	bls.w	ea54 <__udivmoddi4+0x290>
    e84c:	3802      	subs	r0, #2
    e84e:	442c      	add	r4, r5
    e850:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
    e854:	eba4 040c 	sub.w	r4, r4, ip
    e858:	2700      	movs	r7, #0
    e85a:	b11e      	cbz	r6, e864 <__udivmoddi4+0xa0>
    e85c:	40d4      	lsrs	r4, r2
    e85e:	2300      	movs	r3, #0
    e860:	e9c6 4300 	strd	r4, r3, [r6]
    e864:	4639      	mov	r1, r7
    e866:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    e86a:	428b      	cmp	r3, r1
    e86c:	d909      	bls.n	e882 <__udivmoddi4+0xbe>
    e86e:	2e00      	cmp	r6, #0
    e870:	f000 80eb 	beq.w	ea4a <__udivmoddi4+0x286>
    e874:	2700      	movs	r7, #0
    e876:	e9c6 0100 	strd	r0, r1, [r6]
    e87a:	4638      	mov	r0, r7
    e87c:	4639      	mov	r1, r7
    e87e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    e882:	fab3 f783 	clz	r7, r3
    e886:	2f00      	cmp	r7, #0
    e888:	d147      	bne.n	e91a <__udivmoddi4+0x156>
    e88a:	428b      	cmp	r3, r1
    e88c:	d302      	bcc.n	e894 <__udivmoddi4+0xd0>
    e88e:	4282      	cmp	r2, r0
    e890:	f200 80fa 	bhi.w	ea88 <__udivmoddi4+0x2c4>
    e894:	1a84      	subs	r4, r0, r2
    e896:	eb61 0303 	sbc.w	r3, r1, r3
    e89a:	2001      	movs	r0, #1
    e89c:	4698      	mov	r8, r3
    e89e:	2e00      	cmp	r6, #0
    e8a0:	d0e0      	beq.n	e864 <__udivmoddi4+0xa0>
    e8a2:	e9c6 4800 	strd	r4, r8, [r6]
    e8a6:	e7dd      	b.n	e864 <__udivmoddi4+0xa0>
    e8a8:	b902      	cbnz	r2, e8ac <__udivmoddi4+0xe8>
    e8aa:	deff      	udf	#255	; 0xff
    e8ac:	fab2 f282 	clz	r2, r2
    e8b0:	2a00      	cmp	r2, #0
    e8b2:	f040 808f 	bne.w	e9d4 <__udivmoddi4+0x210>
    e8b6:	1b49      	subs	r1, r1, r5
    e8b8:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    e8bc:	fa1f f885 	uxth.w	r8, r5
    e8c0:	2701      	movs	r7, #1
    e8c2:	fbb1 fcfe 	udiv	ip, r1, lr
    e8c6:	0c23      	lsrs	r3, r4, #16
    e8c8:	fb0e 111c 	mls	r1, lr, ip, r1
    e8cc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    e8d0:	fb08 f10c 	mul.w	r1, r8, ip
    e8d4:	4299      	cmp	r1, r3
    e8d6:	d907      	bls.n	e8e8 <__udivmoddi4+0x124>
    e8d8:	18eb      	adds	r3, r5, r3
    e8da:	f10c 30ff 	add.w	r0, ip, #4294967295
    e8de:	d202      	bcs.n	e8e6 <__udivmoddi4+0x122>
    e8e0:	4299      	cmp	r1, r3
    e8e2:	f200 80cd 	bhi.w	ea80 <__udivmoddi4+0x2bc>
    e8e6:	4684      	mov	ip, r0
    e8e8:	1a59      	subs	r1, r3, r1
    e8ea:	b2a3      	uxth	r3, r4
    e8ec:	fbb1 f0fe 	udiv	r0, r1, lr
    e8f0:	fb0e 1410 	mls	r4, lr, r0, r1
    e8f4:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
    e8f8:	fb08 f800 	mul.w	r8, r8, r0
    e8fc:	45a0      	cmp	r8, r4
    e8fe:	d907      	bls.n	e910 <__udivmoddi4+0x14c>
    e900:	192c      	adds	r4, r5, r4
    e902:	f100 33ff 	add.w	r3, r0, #4294967295
    e906:	d202      	bcs.n	e90e <__udivmoddi4+0x14a>
    e908:	45a0      	cmp	r8, r4
    e90a:	f200 80b6 	bhi.w	ea7a <__udivmoddi4+0x2b6>
    e90e:	4618      	mov	r0, r3
    e910:	eba4 0408 	sub.w	r4, r4, r8
    e914:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    e918:	e79f      	b.n	e85a <__udivmoddi4+0x96>
    e91a:	f1c7 0c20 	rsb	ip, r7, #32
    e91e:	40bb      	lsls	r3, r7
    e920:	fa22 fe0c 	lsr.w	lr, r2, ip
    e924:	ea4e 0e03 	orr.w	lr, lr, r3
    e928:	fa01 f407 	lsl.w	r4, r1, r7
    e92c:	fa20 f50c 	lsr.w	r5, r0, ip
    e930:	fa21 f30c 	lsr.w	r3, r1, ip
    e934:	ea4f 481e 	mov.w	r8, lr, lsr #16
    e938:	4325      	orrs	r5, r4
    e93a:	fbb3 f9f8 	udiv	r9, r3, r8
    e93e:	0c2c      	lsrs	r4, r5, #16
    e940:	fb08 3319 	mls	r3, r8, r9, r3
    e944:	fa1f fa8e 	uxth.w	sl, lr
    e948:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
    e94c:	fb09 f40a 	mul.w	r4, r9, sl
    e950:	429c      	cmp	r4, r3
    e952:	fa02 f207 	lsl.w	r2, r2, r7
    e956:	fa00 f107 	lsl.w	r1, r0, r7
    e95a:	d90b      	bls.n	e974 <__udivmoddi4+0x1b0>
    e95c:	eb1e 0303 	adds.w	r3, lr, r3
    e960:	f109 30ff 	add.w	r0, r9, #4294967295
    e964:	f080 8087 	bcs.w	ea76 <__udivmoddi4+0x2b2>
    e968:	429c      	cmp	r4, r3
    e96a:	f240 8084 	bls.w	ea76 <__udivmoddi4+0x2b2>
    e96e:	f1a9 0902 	sub.w	r9, r9, #2
    e972:	4473      	add	r3, lr
    e974:	1b1b      	subs	r3, r3, r4
    e976:	b2ad      	uxth	r5, r5
    e978:	fbb3 f0f8 	udiv	r0, r3, r8
    e97c:	fb08 3310 	mls	r3, r8, r0, r3
    e980:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
    e984:	fb00 fa0a 	mul.w	sl, r0, sl
    e988:	45a2      	cmp	sl, r4
    e98a:	d908      	bls.n	e99e <__udivmoddi4+0x1da>
    e98c:	eb1e 0404 	adds.w	r4, lr, r4
    e990:	f100 33ff 	add.w	r3, r0, #4294967295
    e994:	d26b      	bcs.n	ea6e <__udivmoddi4+0x2aa>
    e996:	45a2      	cmp	sl, r4
    e998:	d969      	bls.n	ea6e <__udivmoddi4+0x2aa>
    e99a:	3802      	subs	r0, #2
    e99c:	4474      	add	r4, lr
    e99e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
    e9a2:	fba0 8902 	umull	r8, r9, r0, r2
    e9a6:	eba4 040a 	sub.w	r4, r4, sl
    e9aa:	454c      	cmp	r4, r9
    e9ac:	46c2      	mov	sl, r8
    e9ae:	464b      	mov	r3, r9
    e9b0:	d354      	bcc.n	ea5c <__udivmoddi4+0x298>
    e9b2:	d051      	beq.n	ea58 <__udivmoddi4+0x294>
    e9b4:	2e00      	cmp	r6, #0
    e9b6:	d069      	beq.n	ea8c <__udivmoddi4+0x2c8>
    e9b8:	ebb1 050a 	subs.w	r5, r1, sl
    e9bc:	eb64 0403 	sbc.w	r4, r4, r3
    e9c0:	fa04 fc0c 	lsl.w	ip, r4, ip
    e9c4:	40fd      	lsrs	r5, r7
    e9c6:	40fc      	lsrs	r4, r7
    e9c8:	ea4c 0505 	orr.w	r5, ip, r5
    e9cc:	e9c6 5400 	strd	r5, r4, [r6]
    e9d0:	2700      	movs	r7, #0
    e9d2:	e747      	b.n	e864 <__udivmoddi4+0xa0>
    e9d4:	f1c2 0320 	rsb	r3, r2, #32
    e9d8:	fa20 f703 	lsr.w	r7, r0, r3
    e9dc:	4095      	lsls	r5, r2
    e9de:	fa01 f002 	lsl.w	r0, r1, r2
    e9e2:	fa21 f303 	lsr.w	r3, r1, r3
    e9e6:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    e9ea:	4338      	orrs	r0, r7
    e9ec:	0c01      	lsrs	r1, r0, #16
    e9ee:	fbb3 f7fe 	udiv	r7, r3, lr
    e9f2:	fa1f f885 	uxth.w	r8, r5
    e9f6:	fb0e 3317 	mls	r3, lr, r7, r3
    e9fa:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    e9fe:	fb07 f308 	mul.w	r3, r7, r8
    ea02:	428b      	cmp	r3, r1
    ea04:	fa04 f402 	lsl.w	r4, r4, r2
    ea08:	d907      	bls.n	ea1a <__udivmoddi4+0x256>
    ea0a:	1869      	adds	r1, r5, r1
    ea0c:	f107 3cff 	add.w	ip, r7, #4294967295
    ea10:	d22f      	bcs.n	ea72 <__udivmoddi4+0x2ae>
    ea12:	428b      	cmp	r3, r1
    ea14:	d92d      	bls.n	ea72 <__udivmoddi4+0x2ae>
    ea16:	3f02      	subs	r7, #2
    ea18:	4429      	add	r1, r5
    ea1a:	1acb      	subs	r3, r1, r3
    ea1c:	b281      	uxth	r1, r0
    ea1e:	fbb3 f0fe 	udiv	r0, r3, lr
    ea22:	fb0e 3310 	mls	r3, lr, r0, r3
    ea26:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    ea2a:	fb00 f308 	mul.w	r3, r0, r8
    ea2e:	428b      	cmp	r3, r1
    ea30:	d907      	bls.n	ea42 <__udivmoddi4+0x27e>
    ea32:	1869      	adds	r1, r5, r1
    ea34:	f100 3cff 	add.w	ip, r0, #4294967295
    ea38:	d217      	bcs.n	ea6a <__udivmoddi4+0x2a6>
    ea3a:	428b      	cmp	r3, r1
    ea3c:	d915      	bls.n	ea6a <__udivmoddi4+0x2a6>
    ea3e:	3802      	subs	r0, #2
    ea40:	4429      	add	r1, r5
    ea42:	1ac9      	subs	r1, r1, r3
    ea44:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
    ea48:	e73b      	b.n	e8c2 <__udivmoddi4+0xfe>
    ea4a:	4637      	mov	r7, r6
    ea4c:	4630      	mov	r0, r6
    ea4e:	e709      	b.n	e864 <__udivmoddi4+0xa0>
    ea50:	4607      	mov	r7, r0
    ea52:	e6e7      	b.n	e824 <__udivmoddi4+0x60>
    ea54:	4618      	mov	r0, r3
    ea56:	e6fb      	b.n	e850 <__udivmoddi4+0x8c>
    ea58:	4541      	cmp	r1, r8
    ea5a:	d2ab      	bcs.n	e9b4 <__udivmoddi4+0x1f0>
    ea5c:	ebb8 0a02 	subs.w	sl, r8, r2
    ea60:	eb69 020e 	sbc.w	r2, r9, lr
    ea64:	3801      	subs	r0, #1
    ea66:	4613      	mov	r3, r2
    ea68:	e7a4      	b.n	e9b4 <__udivmoddi4+0x1f0>
    ea6a:	4660      	mov	r0, ip
    ea6c:	e7e9      	b.n	ea42 <__udivmoddi4+0x27e>
    ea6e:	4618      	mov	r0, r3
    ea70:	e795      	b.n	e99e <__udivmoddi4+0x1da>
    ea72:	4667      	mov	r7, ip
    ea74:	e7d1      	b.n	ea1a <__udivmoddi4+0x256>
    ea76:	4681      	mov	r9, r0
    ea78:	e77c      	b.n	e974 <__udivmoddi4+0x1b0>
    ea7a:	3802      	subs	r0, #2
    ea7c:	442c      	add	r4, r5
    ea7e:	e747      	b.n	e910 <__udivmoddi4+0x14c>
    ea80:	f1ac 0c02 	sub.w	ip, ip, #2
    ea84:	442b      	add	r3, r5
    ea86:	e72f      	b.n	e8e8 <__udivmoddi4+0x124>
    ea88:	4638      	mov	r0, r7
    ea8a:	e708      	b.n	e89e <__udivmoddi4+0xda>
    ea8c:	4637      	mov	r7, r6
    ea8e:	e6e9      	b.n	e864 <__udivmoddi4+0xa0>

0000ea90 <__aeabi_idiv0>:
    ea90:	4770      	bx	lr
    ea92:	bf00      	nop

Disassembly of section .fini:

0000ea94 <_fini>:
    ea94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    ea96:	bf00      	nop
    ea98:	bcf8      	pop	{r3, r4, r5, r6, r7}
    ea9a:	bc08      	pop	{r3}
    ea9c:	469e      	mov	lr, r3
    ea9e:	4770      	bx	lr
