/*

AUTHOR: Hazim Bitar (techbitar)
DATE: Aug 29, 2013
LICENSE: Public domain (use at your own risk)
CONTACT: techbitar at gmail dot com (techbitar.com)

*/


#include <SoftwareSerial.h>

SoftwareSerial BTSerial(10, 11); // RX | TX

void setup() 
{
  pinMode(9, OUTPUT);  // this pin will pull the HC-05 pin 34 (key pin) HIGH to switch module to AT mode
  digitalWrite(9, HIGH); 
  Serial.begin(9600);
  
  BTSerial.begin(38400);  // HC-05 default speed in AT command more

}

void loop()
{
//  Serial.println("Sending 2566 Samples");
//  BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//  BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//  BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//  BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//    BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//  BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//  BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//  BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//    BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//  BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//  BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//  BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//    BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//  BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//  BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//  BTSerial.print("0000000001\n0000000002\n0000000003\n0000000004\n0000000005\n0000000006\n0000000007\n0000000008\n0000000009\n0000000010\n0000000011\n0000000012\n0000000013\n0000000014\n0000000015\n0000000016\n");
//  delay(1000);

  static unsigned long last_transmission = millis();
  static long samp_num = 0;                           /* Track the sample number we are looking at */
    static unsigned long epoch_time;

  
     if ((millis() - last_transmission) >= 1000) {
       for (unsigned int i = 0; i < 256; i++) {
          char sample[12] = {0};
          snprintf(sample, 12, "%010ld\n", i);         /* Save the data as a string for communication over the serial bus */
          BTSerial.print(sample);                         /* Output the data over the serial bus */
       }
       Serial.println("Sent an epoch");
       samp_num = 0;
       last_transmission = millis();
    }









}
